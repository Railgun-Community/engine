/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RailgunLogic,
  RailgunLogicInterface,
} from "../../../contracts/logic/RailgunLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "shieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unshieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftFee",
        type: "uint256",
      },
    ],
    name: "FeeChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "treeNumber",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "nullifier",
        type: "bytes32[]",
      },
    ],
    name: "Nullified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentPreimage[]",
        name: "commitments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32[3]",
            name: "encryptedBundle",
            type: "bytes32[3]",
          },
          {
            internalType: "bytes32",
            name: "shieldKey",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct ShieldCiphertext[]",
        name: "shieldCiphertext",
        type: "tuple[]",
      },
    ],
    name: "Shield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "hash",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32[4]",
            name: "ciphertext",
            type: "bytes32[4]",
          },
          {
            internalType: "bytes32",
            name: "blindedSenderViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blindedReceiverViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "annotationData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "memo",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentCiphertext[]",
        name: "ciphertext",
        type: "tuple[]",
      },
    ],
    name: "Transact",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenData",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Unshield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "addVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "changeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkSafetyVectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint136",
        name: "_amount",
        type: "uint136",
      },
      {
        internalType: "bool",
        name: "_isInclusive",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "_feeBP",
        type: "uint120",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData",
        name: "_tokenData",
        type: "tuple",
      },
    ],
    name: "getTokenID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_commitmentPreimage",
        type: "tuple",
      },
    ],
    name: "hashCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initializeRailgunLogic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEventBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "removeVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snarkSafetyVector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "sumCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlocklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIDMapping",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenSubID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unshieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "validateCommitmentPreimage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "validateTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50613f1d806100206000396000f3fe608060405234801561001057600080fd5b50600436106102ad5760003560e01c806371c534551161017b578063c718dbda116100d8578063ec7329591161008c578063f19ea90311610071578063f19ea90314610625578063f2fde38b14610653578063f71a55f81461066657600080fd5b8063ec7329591461060a578063ee9907831461061257600080fd5b8063cd3efe06116100bd578063cd3efe06146105db578063dc7c9a1f146105e4578063e8295588146105f757600080fd5b8063c718dbda1461059a578063cc1f73fd146105c857600080fd5b806392d3c7a41161012f578063ab63e69c11610114578063ab63e69c1461052a578063b14f2a391461053d578063b8ceaef21461055057600080fd5b806392d3c7a414610504578063a33952a91461051757600080fd5b8063815b534f11610160578063815b534f146104c75780638da5cb5b146104ea5780639071adc0146104fb57600080fd5b806371c53455146104945780637b12ae83146104a757600080fd5b80632ebfe12a11610229578063617e1b17116101dd57806366503315116101c257806366503315146104705780636cefafaa14610479578063715018a61461048c57600080fd5b8063617e1b171461043257806361d027b31461044557600080fd5b806338bf282e1161020e57806338bf282e146103d957806343c88730146103ec57806359bb61991461041f57600080fd5b80632ebfe12a146103b35780632ec0f359146103c657600080fd5b80630c9c0c8d116102805780631747689111610265578063174768911461038457806328f89c3a146103975780632eb4a7ab146103aa57600080fd5b80630c9c0c8d14610329578063129458f41461035157600080fd5b806301c37790146102b2578063053ed12a146102e25780630804a4ee146103085780630be4f42214610312575b600080fd5b60fa546102c5906001600160781b031681565b6040516001600160781b0390911681526020015b60405180910390f35b60fa546102c5906f0100000000000000000000000000000090046001600160781b031681565b610310610679565b005b61031b60665481565b6040519081526020016102d9565b61033c6103373660046129fe565b61070a565b604080519283526020830191909152016102d9565b61037461035f3660046129fe565b60fc6020526000908152604090205460ff1681565b60405190151581526020016102d9565b610374610392366004612a17565b610754565b61031b6103a5366004612a53565b610af9565b61031b60675481565b6103746103c1366004612da0565b610b50565b6103106103d4366004612eb4565b610b73565b61031b6103e7366004612f0c565b610be3565b6103ff6103fa366004612f4a565b610c8e565b604080516001600160781b039384168152929091166020830152016102d9565b61031b61042d366004612ff8565b610d20565b61037461044036600461303a565b610d95565b60f954610458906001600160a01b031681565b6040516001600160a01b0390911681526020016102d9565b61031b60695481565b6103106104873660046129fe565b610e8b565b610310610eae565b61031b6104a23660046130c7565b610ec2565b6104ba6104b5366004612f0c565b610f76565b6040516102d991906131a4565b6103746104d5366004613276565b60956020526000908152604090205460ff1681565b6033546001600160a01b0316610458565b61031b60fb5481565b61031b610512366004613293565b61123b565b6103106105253660046132af565b611299565b610310610538366004612ff8565b611484565b61031061054b366004613276565b6115a4565b61058b61055e3660046129fe565b60fd602052600090815260409020805460019091015460ff82169161010090046001600160a01b03169083565b6040516102d993929190613347565b6103746105a8366004612f0c565b608a60209081526000928352604080842090915290825290205460ff1681565b6103106105d6366004613371565b61162d565b61031b60fe5481565b6103106105f23660046129fe565b611840565b61031b6106053660046129fe565b611860565b61031b611877565b610374610620366004612a17565b6118c4565b610374610633366004612f0c565b606560209081526000928352604080842090915290825290205460ff1681565b610310610661366004613276565b611dc4565b610310610674366004612ff8565b611e51565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450805460ff1916600117905533600090815260fc6020526040902054806107075760405162461bcd60e51b815260206004820152601c60248201527f5261696c67756e4c6f6769633a20556e7361666520766563746f72730000000060448201526064015b60405180910390fd5b50565b600080610719601060026134a7565b8360665461072791906134b3565b11156107455760695461073b9060016134b3565b9360009350915050565b60695460665491509150915091565b60006107646101608301836134c6565b6107759060408101906020016134ff565b68ffffffffffffffffff163a101561078f57506000919050565b600061079f6101608401846134c6565b6107b09060a0810190608001613276565b6001600160a01b0316141580156107ee5750336107d16101608401846134c6565b6107e29060a0810190608001613276565b6001600160a01b031614155b156107fb57506000919050565b4661080a6101608401846134c6565b61081b906080810190606001613532565b67ffffffffffffffff161461083257506000919050565b608a60006108446101608501856134c6565b61085290602081019061355f565b61ffff16815260208082019290925260409081016000908120610100860135825290925290205460ff1661088857506000919050565b60005b61089961012084018461357a565b905081101561093457606560006108b46101608601866134c6565b6108c290602081019061355f565b61ffff1681526020019081526020016000206000848061012001906108e7919061357a565b848181106108f7576108f76135c4565b602090810292909201358352508101919091526040016000205460ff16156109225750600092915050565b61092d6001826134b3565b905061088b565b5060006109456101608401846134c6565b6109569060608101906040016135da565b600281111561096757610967613313565b14610aaf57600161097c61014084018461357a565b6109879291506135f7565b6109956101608401846134c6565b6109a39060c081019061357a565b9050146109b257506000919050565b600060026109c46101608501856134c6565b6109d59060608101906040016135da565b60028111156109e6576109e6613313565b03610a42576040805160608101909152338152610a3b9060208101610a143687900387016101a08801613293565b8152602001610a2b6102208701610200880161360a565b6001600160781b03169052610ec2565b9050610a5b565b610a586104a236859003850161018086016130c7565b90505b610a6961014084018461357a565b6001610a7961014087018761357a565b610a849291506135f7565b818110610a9357610a936135c4565b905060200201358114610aa95750600092915050565b50610aea565b610abd61014083018361357a565b9050610acd6101608401846134c6565b610adb9060c081019061357a565b905014610aea57506000919050565b610af3826118c4565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182604051602001610b2d91906137a0565b6040516020818303038152906040528051906020012060001c610af3919061386b565b6000610b6b84610b653686900386018661387f565b84611f74565b949350505050565b610b7b612115565b600083815260c76020908152604080832085845290915290208190610ba08282613b73565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb23838383604051610bd693929190613c77565b60405180910390a1505050565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e566091610c4691600401613d59565b602060405180830381865af4158015610c63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c879190613d8a565b9392505050565b6000808481808615610cd757612710610cb06001600160781b03881685613da3565b610cba9190613dd6565b610cc49084613e06565b9150610cd08284613e06565b9050610d13565b82915081610ce787612710613e37565b6001600160781b0316610cfc84612710613da3565b610d069190613dd6565b610d109190613e06565b90505b9097909650945050505050565b600080805b83811015610d8d57848482818110610d3f57610d3f6135c4565b9050602002810190610d519190613e57565b610d60906101608101906134c6565b610d6e9060c081019061357a565b610d799150836134b3565b9150610d866001826134b3565b9050610d25565b509392505050565b6000610da760a083016080840161360a565b6001600160781b0316600003610dbf57506000919050565b60956000610dd36060850160408601613276565b6001600160a01b0316815260208101919091526040016000205460ff1615610dfd57506000919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001823510610e2d57506000919050565b6001610e3f60408401602085016135da565b6002811115610e5057610e50613313565b148015610e765750610e6860a083016080840161360a565b6001600160781b0316600114155b15610e8357506000919050565b506001919050565b610e93612115565b600090815260fc60205260409020805460ff19166001179055565b610eb6612115565b610ec0600061216f565b565b600073__$0d67abb2a30631c14ae5d39aeb2a4b8972$__635a53025d604051806060016040528085600001518152602001610f00866020015161123b565b815260200185604001516001600160781b031660001b8152506040518263ffffffff1660e01b8152600401610f359190613e6e565b602060405180830381865af4158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af39190613d8a565b610f7e6128fe565b600083815260c76020908152604080832085845290915290819020815160c08101909252805482908290610fb1906138c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610fdd906138c5565b801561102a5780601f10610fff5761010080835404028352916020019161102a565b820191906000526020600020905b81548152906001019060200180831161100d57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161107757505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116110ad575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116110f157505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116111275750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161116b57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116111a1575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b8282101561122c578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906111e6565b50505091525090949350505050565b6000808251600281111561125157611251613313565b036112675750602001516001600160a01b031690565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182604051602001610b2d9190613e96565b600054610100900460ff16158080156112b95750600054600160ff909116105b806112d35750303b1580156112d3575060005460ff166001145b6113455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016106fe565b6000805460ff191660011790558015611368576000805461ff0019166101001790555b6113706121d9565b61137861224c565b611381866115a4565b61138c85858561162d565b61139582611dc4565b60fc6020527f18a261e1efd282dd636becf59b85995514ab34d1c1c9a3e1128aac786b5472de8054600160ff1991821681179092557f35cc25be27a7e44e9e6eb23f103c8980fe6d01e7b6e981c2c07b23911ac79e8b805482168317905573cc29dbf69896278a0c6b886ef8cc30a56fa6164a6000527f7e1bfa3bd01233beed03b737790a265ae14e11664e22f82316c6f65a13e15c8c80549091169091179055801561147c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b61148c612115565b60005b8181101561159f57609560008484848181106114ad576114ad6135c4565b90506020020160208101906114c29190613276565b6001600160a01b0316815260208101919091526040016000205460ff161561158d57609560008484848181106114fa576114fa6135c4565b905060200201602081019061150f9190613276565b6001600160a01b031681526020810191909152604001600020805460ff19169055828282818110611542576115426135c4565b90506020020160208101906115579190613276565b6001600160a01b03167f2ef13bd1aff17b0f9c85afaf228e84266c8394d9d381735e83fe23f607113e2e60405160405180910390a25b6115986001826134b3565b905061148f565b505050565b6115ac612115565b60f9546001600160a01b038281169116146107075760f980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f1ac54af2084ba0e4b86b7bc54b978ce7dd4ca046d3dec89d7c8963873820c0bb9060200160405180910390a150565b611635612115565b60fa546001600160781b038481169116141580611673575060fa546001600160781b038381166f010000000000000000000000000000009092041614155b80611680575060fb548114155b1561159f576116926002612710613ecd565b6001600160781b0316836001600160781b031611156117185760405162461bcd60e51b8152602060048201526024808201527f5261696c67756e4c6f6769633a20536869656c6420466565206578636565647360448201527f203530250000000000000000000000000000000000000000000000000000000060648201526084016106fe565b6117256002612710613ecd565b6001600160781b0316826001600160781b031611156117ac5760405162461bcd60e51b815260206004820152602660248201527f5261696c67756e4c6f6769633a20556e736869656c642046656520657863656560448201527f647320353025000000000000000000000000000000000000000000000000000060648201526084016106fe565b60fa80546001600160781b038581167fffff00000000000000000000000000000000000000000000000000000000000090921682176f010000000000000000000000000000009186169182021790925560fb8390556040805191825260208201929092529081018290527f472cfc031d19bcc54db01976ce486cc12dc3d489e6adced1eb5a782cd55cfdf290606001610bd6565b611848612115565b600090815260fc60205260409020805460ff19169055565b606a816010811061187057600080fd5b0154905081565b6118c17f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff61386b565b81565b6000806118d561012084018461357a565b9150600090506118e961014085018561357a565b600084815260c760209081526040808320848452909152808220815160c0810190925280549395509193509182908290611922906138c5565b80601f016020809104026020016040519081016040528092919081815260200182805461194e906138c5565b801561199b5780601f106119705761010080835404028352916020019161199b565b820191906000526020600020905b81548152906001019060200180831161197e57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b8154815260200190600101908083116119e857505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611a1e575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b815481526020019060010190808311611a6257505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611a985750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b815481526020019060010190808311611adc57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611b12575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015611b9d57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611b57565b50505091525050602081015151909150600003611bfc5760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f7420736574000000000000000000000060448201526064016106fe565b600082611c0a8560026134b3565b611c1491906134b3565b67ffffffffffffffff811115611c2c57611c2c612a8e565b604051908082528060200260200182016040528015611c55578160200160208202803683370190505b50905085610100013560001c81600081518110611c7457611c746135c4565b6020908102919091010152611c906103a56101608801886134c6565b81600181518110611ca357611ca36135c4565b60200260200101818152505060005b84811015611d1b57611cc861012088018861357a565b82818110611cd857611cd86135c4565b6020029190910135905082611cee8360026134b3565b81518110611cfe57611cfe6135c4565b6020908102919091010152611d146001826134b3565b9050611cb2565b5060005b83811015611d9357611d3561014088018861357a565b82818110611d4557611d456135c4565b602002919091013590508282611d5c8860026134b3565b611d6691906134b3565b81518110611d7657611d766135c4565b6020908102919091010152611d8c6001826134b3565b9050611d1f565b506000611da1838884610b50565b905061deac193201611dba575060019695505050505050565b9695505050505050565b611dcc612115565b6001600160a01b038116611e485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106fe565b6107078161216f565b611e59612115565b60005b8181101561159f5760956000848484818110611e7a57611e7a6135c4565b9050602002016020810190611e8f9190613276565b6001600160a01b0316815260208101919091526040016000205460ff16611f6257600160956000858585818110611ec857611ec86135c4565b9050602002016020810190611edd9190613276565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055828282818110611f1757611f176135c4565b9050602002016020810190611f2c9190613276565b6001600160a01b03167f46742f555939247f80b50a8ca895a561933c48bc9a06ccb0c812e97ac723d33f60405160405180910390a25b611f6d6001826134b3565b9050611e5c565b6040805180820190915260008082526020820181905290815b83518110156120ad577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110611fc957611fc96135c4565b6020026020010151106120445760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f440000000000000000000000000000000000000000000000000000000000000060648201526084016106fe565b612099826120948860a0015184600161205d91906134b3565b8151811061206d5761206d6135c4565b6020026020010151878581518110612087576120876135c4565b60200260200101516123db565b612499565b91506120a66001826134b3565b9050611f8d565b506120d6818660a001516000815181106120c9576120c96135c4565b6020026020010151612499565b905061210c6120e88560000151612545565b856020015187602001518860400151858a606001518a604001518c608001516126f3565b95945050505050565b6033546001600160a01b03163314610ec05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fe565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166122445760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106fe565b610ec061288a565b600054610100900460ff166122b75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106fe565b6123017f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff61386b565b606a5560006123507f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff61386b565b905060005b60108110156123a85781606a8260108110612372576123726135c4565b015581607a8260108110612388576123886135c4565b01556123948280610be3565b91506123a16001826134b3565b9050612355565b50606781905560688190556069546000908152608a6020908152604080832093835292905220805460ff19166001179055565b60408051808201909152600080825260208201526123f7612961565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050806124915760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c6564000000000000000000000000000000000000000000000000000000000060648201526084016106fe565b505092915050565b60408051808201909152600080825260208201526124b561297f565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa91508161210c5760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c656400000000000000000000000000000060448201526064016106fe565b6040805180820190915260008082526020820152815115801561256a57506020820151155b15612588575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208501518009905081811461267a5760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e00000000000000000060448201526064016106fe565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786602001516126bf919061386b565b6126e9907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476135f7565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e08201526000906127f261299d565b60006020826103008560086107d05a03fa9050806128785760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f656400000000000000000000000000000000000000000000000000000000000060648201526084016106fe565b505115159a9950505050505050505050565b600054610100900460ff166128f55760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016106fe565b610ec03361216f565b6040518060c001604052806060815260200161292d604051806040016040528060008152602001600081525090565b815260200161293a6129bb565b81526020016129476129bb565b81526020016129546129bb565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806129ce6129e0565b81526020016129db6129e0565b905290565b60405180604001604052806002906020820280368337509192915050565b600060208284031215612a1057600080fd5b5035919050565b600060208284031215612a2957600080fd5b813567ffffffffffffffff811115612a4057600080fd5b82016102208185031215610c8757600080fd5b600060208284031215612a6557600080fd5b813567ffffffffffffffff811115612a7c57600080fd5b820160e08185031215610c8757600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612ac757612ac7612a8e565b60405290565b60405160c0810167ffffffffffffffff81118282101715612ac757612ac7612a8e565b6040516060810167ffffffffffffffff81118282101715612ac757612ac7612a8e565b604051601f8201601f1916810167ffffffffffffffff81118282101715612b3c57612b3c612a8e565b604052919050565b600082601f830112612b5557600080fd5b813567ffffffffffffffff811115612b6f57612b6f612a8e565b612b82601f8201601f1916602001612b13565b818152846020838601011115612b9757600080fd5b816020850160208301376000918101602001919091529392505050565b600060408284031215612bc657600080fd5b612bce612aa4565b9050813581526020820135602082015292915050565b600082601f830112612bf557600080fd5b6040516040810181811067ffffffffffffffff82111715612c1857612c18612a8e565b8060405250806040840185811115612c2f57600080fd5b845b81811015612c49578035835260209283019201612c31565b509195945050505050565b600060808284031215612c6657600080fd5b612c6e612aa4565b9050612c7a8383612be4565b8152612c898360408401612be4565b602082015292915050565b600067ffffffffffffffff821115612cae57612cae612a8e565b5060051b60200190565b600082601f830112612cc957600080fd5b81356020612cde612cd983612c94565b612b13565b82815260069290921b84018101918181019086841115612cfd57600080fd5b8286015b84811015612d2157612d138882612bb4565b835291830191604001612d01565b509695505050505050565b60006101008284031215612d3f57600080fd5b50919050565b600082601f830112612d5657600080fd5b81356020612d66612cd983612c94565b82815260059290921b84018101918181019086841115612d8557600080fd5b8286015b84811015612d215780358352918301918301612d89565b60008060006101408486031215612db657600080fd5b833567ffffffffffffffff80821115612dce57600080fd5b908501906102008288031215612de357600080fd5b612deb612acd565b823582811115612dfa57600080fd5b612e0689828601612b44565b825250612e168860208501612bb4565b6020820152612e288860608501612c54565b6040820152612e3a8860e08501612c54565b6060820152612e4d886101608501612c54565b60808201526101e083013582811115612e6557600080fd5b612e7189828601612cb8565b60a0830152509450612e868760208801612d2c565b9350610120860135915080821115612e9d57600080fd5b50612eaa86828701612d45565b9150509250925092565b600080600060608486031215612ec957600080fd5b8335925060208401359150604084013567ffffffffffffffff811115612eee57600080fd5b84016102008187031215612f0157600080fd5b809150509250925092565b60008060408385031215612f1f57600080fd5b50508035926020909101359150565b80356001600160781b0381168114612f4557600080fd5b919050565b600080600060608486031215612f5f57600080fd5b833570ffffffffffffffffffffffffffffffffff81168114612f8057600080fd5b925060208401358015158114612f9557600080fd5b9150612fa360408501612f2e565b90509250925092565b60008083601f840112612fbe57600080fd5b50813567ffffffffffffffff811115612fd657600080fd5b6020830191508360208260051b8501011115612ff157600080fd5b9250929050565b6000806020838503121561300b57600080fd5b823567ffffffffffffffff81111561302257600080fd5b61302e85828601612fac565b90969095509350505050565b600060a08284031215612d3f57600080fd5b6003811061070757600080fd5b6001600160a01b038116811461070757600080fd5b8035612f4581613059565b60006060828403121561308b57600080fd5b613093612af0565b905081356130a08161304c565b815260208201356130b081613059565b806020830152506040820135604082015292915050565b600060a082840312156130d957600080fd5b6130e1612af0565b823581526130f28460208501613079565b602082015261310360808401612f2e565b60408201529392505050565b8060005b6002811015613132578151845260209384019390910190600101613113565b50505050565b61314382825161310f565b602081015161159f604084018261310f565b600081518084526020808501945080840160005b838110156131995761318687835180518252602090810151910152565b6040969096019590820190600101613169565b509495945050505050565b60006020808352610220845161020080848701528151808488015260005b818110156131df57838101860151888201610240015285016131c2565b50600087820161024090810191909152948801518051604089015260208101516060890152949250601f01601f19168601604088015194506132246080880186613138565b60608801519450613239610100880186613138565b6080880151945061324e610180880186613138565b60a0880151945083878203018288015261326a83820186613155565b98975050505050505050565b60006020828403121561328857600080fd5b8135610c8781613059565b6000606082840312156132a557600080fd5b610c878383613079565b600080600080600060a086880312156132c757600080fd5b85356132d281613059565b94506132e060208701612f2e565b93506132ee60408701612f2e565b925060608601359150608086013561330581613059565b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b6003811061070757634e487b7160e01b600052602160045260246000fd5b6060810161335485613329565b9381526001600160a01b0392909216602083015260409091015290565b60008060006060848603121561338657600080fd5b61338f84612f2e565b925061339d60208501612f2e565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156133fe5781600019048211156133e4576133e46133ad565b808516156133f157918102915b93841c93908002906133c8565b509250929050565b60008261341557506001610af3565b8161342257506000610af3565b816001811461343857600281146134425761345e565b6001915050610af3565b60ff841115613453576134536133ad565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715613481575081810a610af3565b61348b83836133c3565b806000190482111561349f5761349f6133ad565b029392505050565b6000610c878383613406565b80820180821115610af357610af36133ad565b6000823560de198336030181126134dc57600080fd5b9190910192915050565b803568ffffffffffffffffff81168114612f4557600080fd5b60006020828403121561351157600080fd5b610c87826134e6565b803567ffffffffffffffff81168114612f4557600080fd5b60006020828403121561354457600080fd5b610c878261351a565b803561ffff81168114612f4557600080fd5b60006020828403121561357157600080fd5b610c878261354d565b6000808335601e1984360301811261359157600080fd5b83018035915067ffffffffffffffff8211156135ac57600080fd5b6020019150600581901b3603821315612ff157600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156135ec57600080fd5b8135610c878161304c565b81810381811115610af357610af36133ad565b60006020828403121561361c57600080fd5b610c8782612f2e565b6000808335601e1984360301811261363c57600080fd5b830160208101925035905067ffffffffffffffff81111561365c57600080fd5b8060051b3603821315612ff157600080fd5b6000808335601e1984360301811261368557600080fd5b830160208101925035905067ffffffffffffffff8111156136a557600080fd5b803603821315612ff157600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015613792578385038a52823560fe19893603018112613718578283fd5b8801610100608080838937828101359088015260a0808301359088015260c06137438184018461366e565b83838b0152613755848b0182846136b4565b935050505060e06137688184018461366e565b9350888303828a015261377c8385836136b4565b9d8a019d985050509387019350506001016136f8565b509298975050505050505050565b6020815261ffff6137b08361354d565b16602082015268ffffffffffffffffff6137cc602084016134e6565b166040820152600060408301356137e28161304c565b6137eb81613329565b8060608401525067ffffffffffffffff6138076060850161351a565b1660808301526138196080840161306e565b6001600160a01b03811660a08401525060a083013560c083015261384060c0840184613625565b60e08085015261210c610100850182846136dd565b634e487b7160e01b600052601260045260246000fd5b60008261387a5761387a613855565b500690565b6000610100828403121561389257600080fd5b61389a612af0565b6138a48484612bb4565b81526138b38460408501612c54565b60208201526131038460c08501612bb4565b600181811c908216806138d957607f821691505b602082108103612d3f57634e487b7160e01b600052602260045260246000fd5b601f82111561159f57600081815260208120601f850160051c810160208610156139205750805b601f850160051c820191505b8181101561147c5782815560010161392c565b67ffffffffffffffff83111561395757613957612a8e565b61396b8361396583546138c5565b836138f9565b6000601f84116001811461399f57600085156139875750838201355b600019600387901b1c1916600186901b1783556139f9565b600083815260209020601f19861690835b828110156139d057868501358255602094850194600190920191016139b0565b50868210156139ed5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8160005b6002811015613a2157813583820155602090910190600101613a04565b50506040820160005b6002808210613a395750613132565b823584830190910155602090910190600101613a2a565b6000808335601e19843603018112613a6757600080fd5b83018035915067ffffffffffffffff821115613a8257600080fd5b6020019150600681901b3603821315612ff157600080fd5b68010000000000000000831115613ab357613ab3612a8e565b805483825580841015613b3a5760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168314613af457613af46133ad565b8086168614613b0557613b056133ad565b5060008381526020812086831b81019084841b015b80821015613b35578282558284830155600282019150613b1a565b505050505b5060008181526020812083915b8581101561147c5782358255602083013560018301556040929092019160029190910190600101613b47565b8135601e19833603018112613b8757600080fd5b8201803567ffffffffffffffff811115613ba057600080fd5b602082019150803603821315613bb557600080fd5b613bc081838561393f565b50506020820135600182015560408201356002820155613be66060830160038301613a00565b613bf660e0830160078301613a00565b613c076101608301600b8301613a00565b613c156101e0830183613a50565b6131328183600f8601613a9a565b6040818337604080820160408401375050565b81835260208301925060008160005b84811015613c6d57813586526020808301359087015260409586019590910190600101613c45565b5093949350505050565b838152826020820152606060408201526000613c93838461366e565b6102006060850152613caa610260850182846136b4565b60208601356080860152604086013560a08601529150613cc79050565b613cd760c0840160608601613c23565b613ce8610140840160e08601613c23565b613cfa6101c084016101608601613c23565b6101e0840135601e19853603018112613d1257600080fd5b840160208101903567ffffffffffffffff811115613d2f57600080fd5b8060061b3603821315613d4157600080fd5b848303605f190161024086015261326a838284613c36565b60408101818360005b6002811015613d81578151835260209283019290910190600101613d62565b50505092915050565b600060208284031215613d9c57600080fd5b5051919050565b70ffffffffffffffffffffffffffffffffff828116828216818102831692918115828504821417613d8157613d816133ad565b600070ffffffffffffffffffffffffffffffffff80841680613dfa57613dfa613855565b92169190910492915050565b70ffffffffffffffffffffffffffffffffff828116828216039080821115613e3057613e306133ad565b5092915050565b6001600160781b03828116828216039080821115613e3057613e306133ad565b6000823561021e198336030181126134dc57600080fd5b60608101818360005b6003811015613d81578151835260209283019290910190600101613e77565b81516060820190613ea681613329565b808352506001600160a01b0360208401511660208301526040830151604083015292915050565b60006001600160781b0380841680613dfa57613dfa61385556fea26469706673582212208ef0faad5e9d648f581afaa3a52e248848846f9e32b358c61897fc5c1b5829cc64736f6c63430008110033";

type RailgunLogicConstructorParams =
  | [linkLibraryAddresses: RailgunLogicLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RailgunLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RailgunLogic__factory extends ContractFactory {
  constructor(...args: RailgunLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RailgunLogic__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RailgunLogicLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0d67abb2a30631c14ae5d39aeb2a4b8972\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RailgunLogic> {
    return super.deploy(overrides || {}) as Promise<RailgunLogic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RailgunLogic {
    return super.attach(address) as RailgunLogic;
  }
  override connect(signer: Signer): RailgunLogic__factory {
    return super.connect(signer) as RailgunLogic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RailgunLogicInterface {
    return new utils.Interface(_abi) as RailgunLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RailgunLogic {
    return new Contract(address, _abi, signerOrProvider) as RailgunLogic;
  }
}

export interface RailgunLogicLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
  ["contracts/logic/Poseidon.sol:PoseidonT4"]: string;
}
