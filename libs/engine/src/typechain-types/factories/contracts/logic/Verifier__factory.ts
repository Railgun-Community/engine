/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Verifier,
  VerifierInterface,
} from "../../../contracts/logic/Verifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061226b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637b12ae831161005b5780637b12ae83146100f35780638da5cb5b14610113578063ee9907831461013b578063f2fde38b1461014e57600080fd5b806328f89c3a1461008d5780632ebfe12a146100b35780632ec0f359146100d6578063715018a6146100eb575b600080fd5b6100a061009b3660046112fa565b610161565b6040519081526020015b60405180910390f35b6100c66100c136600461162b565b6101be565b60405190151581526020016100aa565b6100e96100e436600461173f565b6101e1565b005b6100e9610251565b610106610101366004611797565b610265565b6040516100aa9190611853565b60335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100aa565b6100c6610149366004611925565b61052a565b6100e961015c36600461198a565b610a2f565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016101959190611b70565b6040516020818303038152906040528051906020012060001c6101b89190611c4b565b92915050565b60006101d9846101d336869003860186611c6d565b84610acc565b949350505050565b6101e9610c6d565b60008381526065602090815260408083208584529091529020819061020e8282611fa9565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb23838383604051610244939291906120ad565b60405180910390a1505050565b610259610c6d565b6102636000610cd4565b565b61026d6111fa565b600083815260656020908152604080832085845290915290819020815160c081019092528054829082906102a090611cdd565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90611cdd565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161036657505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161039c575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116103e057505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116104165750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161045a57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610490575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b8282101561051b578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906104d5565b50505091525090949350505050565b60008061053b61012084018461218f565b91506000905061054f61014085018561218f565b6000848152606560209081526040808320848452909152808220815160c081019092528054939550919350918290829061058890611cdd565b80601f01602080910402602001604051908101604052809291908181526020018280546105b490611cdd565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161064e57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610684575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116106c857505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116106fe5750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161074257505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610778575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015610803578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906107bd565b505050915250506020810151519091506000036108675760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f7420736574000000000000000000000060448201526064015b60405180910390fd5b6000826108758560026121d9565b61087f91906121d9565b67ffffffffffffffff8111156108975761089761133c565b6040519080825280602002602001820160405280156108c0578160200160208202803683370190505b50905085610100013560001c816000815181106108df576108df6121ec565b60209081029190910101526108fb61009b610160880188612202565b8160018151811061090e5761090e6121ec565b60200260200101818152505060005b848110156109865761093361012088018861218f565b82818110610943576109436121ec565b60200291909101359050826109598360026121d9565b81518110610969576109696121ec565b602090810291909101015261097f6001826121d9565b905061091d565b5060005b838110156109fe576109a061014088018861218f565b828181106109b0576109b06121ec565b6020029190910135905082826109c78860026121d9565b6109d191906121d9565b815181106109e1576109e16121ec565b60209081029190910101526109f76001826121d9565b905061098a565b506000610a0c8388846101be565b905061deac193201610a25575060019695505050505050565b9695505050505050565b610a37610c6d565b73ffffffffffffffffffffffffffffffffffffffff8116610ac05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161085e565b610ac981610cd4565b50565b6040805180820190915260008082526020820181905290815b8351811015610c05577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110610b2157610b216121ec565b602002602001015110610b9c5760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f4400000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b610bf182610bec8860a00151846001610bb591906121d9565b81518110610bc557610bc56121ec565b6020026020010151878581518110610bdf57610bdf6121ec565b6020026020010151610d4b565b610e09565b9150610bfe6001826121d9565b9050610ae5565b50610c2e818660a00151600081518110610c2157610c216121ec565b6020026020010151610e09565b9050610c64610c408560000151610eb5565b856020015187602001518860400151858a606001518a604001518c60800151611063565b95945050505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146102635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161085e565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040805180820190915260008082526020820152610d6761125d565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080610e015760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161085e565b505092915050565b6040805180820190915260008082526020820152610e2561127b565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa915081610c645760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c6564000000000000000000000000000000604482015260640161085e565b60408051808201909152600080825260208201528151158015610eda57506020820151155b15610ef8575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47602085015180099050818114610fea5760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e000000000000000000604482015260640161085e565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47866020015161102f9190611c4b565b611059907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612222565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e0820152600090611162611299565b60006020826103008560086107d05a03fa9050806111e85760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b505115159a9950505050505050505050565b6040518060c0016040528060608152602001611229604051806040016040528060008152602001600081525090565b81526020016112366112b7565b81526020016112436112b7565b81526020016112506112b7565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806112ca6112dc565b81526020016112d76112dc565b905290565b60405180604001604052806002906020820280368337509192915050565b60006020828403121561130c57600080fd5b813567ffffffffffffffff81111561132357600080fd5b820160e0818503121561133557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156113755761137561133c565b60405290565b60405160c0810167ffffffffffffffff811182821017156113755761137561133c565b604051601f8201601f1916810167ffffffffffffffff811182821017156113c7576113c761133c565b604052919050565b600082601f8301126113e057600080fd5b813567ffffffffffffffff8111156113fa576113fa61133c565b61140d601f8201601f191660200161139e565b81815284602083860101111561142257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561145157600080fd5b611459611352565b9050813581526020820135602082015292915050565b600082601f83011261148057600080fd5b6040516040810181811067ffffffffffffffff821117156114a3576114a361133c565b80604052508060408401858111156114ba57600080fd5b845b818110156114d45780358352602092830192016114bc565b509195945050505050565b6000608082840312156114f157600080fd5b6114f9611352565b9050611505838361146f565b8152611514836040840161146f565b602082015292915050565b600067ffffffffffffffff8211156115395761153961133c565b5060051b60200190565b600082601f83011261155457600080fd5b813560206115696115648361151f565b61139e565b82815260069290921b8401810191818101908684111561158857600080fd5b8286015b848110156115ac5761159e888261143f565b83529183019160400161158c565b509695505050505050565b600061010082840312156115ca57600080fd5b50919050565b600082601f8301126115e157600080fd5b813560206115f16115648361151f565b82815260059290921b8401810191818101908684111561161057600080fd5b8286015b848110156115ac5780358352918301918301611614565b6000806000610140848603121561164157600080fd5b833567ffffffffffffffff8082111561165957600080fd5b90850190610200828803121561166e57600080fd5b61167661137b565b82358281111561168557600080fd5b611691898286016113cf565b8252506116a1886020850161143f565b60208201526116b388606085016114df565b60408201526116c58860e085016114df565b60608201526116d88861016085016114df565b60808201526101e0830135828111156116f057600080fd5b6116fc89828601611543565b60a083015250945061171187602088016115b7565b935061012086013591508082111561172857600080fd5b50611735868287016115d0565b9150509250925092565b60008060006060848603121561175457600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561177957600080fd5b8401610200818703121561178c57600080fd5b809150509250925092565b600080604083850312156117aa57600080fd5b50508035926020909101359150565b8060005b60028110156117dc5781518452602093840193909101906001016117bd565b50505050565b6117ed8282516117b9565b60208101516117ff60408401826117b9565b505050565b600081518084526020808501945080840160005b838110156118485761183587835180518252602090810151910152565b6040969096019590820190600101611818565b509495945050505050565b60006020808352610220845161020080848701528151808488015260005b8181101561188e5783810186015188820161024001528501611871565b50600087820161024090810191909152948801518051604089015260208101516060890152949250601f01601f19168601604088015194506118d360808801866117e2565b606088015194506118e86101008801866117e2565b608088015194506118fd6101808801866117e2565b60a0880151945083878203018288015261191983820186611804565b98975050505050505050565b60006020828403121561193757600080fd5b813567ffffffffffffffff81111561194e57600080fd5b8201610220818503121561133557600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461198557600080fd5b919050565b60006020828403121561199c57600080fd5b61133582611961565b80356003811061198557600080fd5b600381106119d257634e487b7160e01b600052602160045260246000fd5b9052565b803567ffffffffffffffff8116811461198557600080fd5b6000808335601e19843603018112611a0557600080fd5b830160208101925035905067ffffffffffffffff811115611a2557600080fd5b8060051b3603821315611a3757600080fd5b9250929050565b6000808335601e19843603018112611a5557600080fd5b830160208101925035905067ffffffffffffffff811115611a7557600080fd5b803603821315611a3757600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015611b62578385038a52823560fe19893603018112611ae8578283fd5b8801610100608080838937828101359088015260a0808301359088015260c0611b1381840184611a3e565b83838b0152611b25848b018284611a84565b935050505060e0611b3881840184611a3e565b9350888303828a0152611b4c838583611a84565b9d8a019d98505050938701935050600101611ac8565b509298975050505050505050565b602081526000823561ffff8116808214611b8957600080fd5b8060208501525050602083013568ffffffffffffffffff81168114611bad57600080fd5b68ffffffffffffffffff8116604084015250611bcb604084016119a5565b611bd860608401826119b4565b50611be5606084016119d6565b67ffffffffffffffff8116608084015250611c0260808401611961565b73ffffffffffffffffffffffffffffffffffffffff811660a08401525060a083013560c0830152611c3660c08401846119ee565b60e080850152610c6461010085018284611aad565b600082611c6857634e487b7160e01b600052601260045260246000fd5b500690565b60006101008284031215611c8057600080fd5b6040516060810181811067ffffffffffffffff82111715611ca357611ca361133c565b604052611cb0848461143f565b8152611cbf84604085016114df565b6020820152611cd18460c0850161143f565b60408201529392505050565b600181811c90821680611cf157607f821691505b6020821081036115ca57634e487b7160e01b600052602260045260246000fd5b601f8211156117ff57600081815260208120601f850160051c81016020861015611d385750805b601f850160051c820191505b81811015611d5757828155600101611d44565b505050505050565b67ffffffffffffffff831115611d7757611d7761133c565b611d8b83611d858354611cdd565b83611d11565b6000601f841160018114611dbf5760008515611da75750838201355b600019600387901b1c1916600186901b178355611e19565b600083815260209020601f19861690835b82811015611df05786850135825560209485019460019092019101611dd0565b5086821015611e0d5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052601160045260246000fd5b8160005b6002811015611e5757813583820155602090910190600101611e3a565b50506040820160005b6002808210611e6f57506117dc565b823584830190910155602090910190600101611e60565b6000808335601e19843603018112611e9d57600080fd5b83018035915067ffffffffffffffff821115611eb857600080fd5b6020019150600681901b3603821315611a3757600080fd5b68010000000000000000831115611ee957611ee961133c565b805483825580841015611f705760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8083168314611f2a57611f2a611e20565b8086168614611f3b57611f3b611e20565b5060008381526020812086831b81019084841b015b80821015611f6b578282558284830155600282019150611f50565b505050505b5060008181526020812083915b85811015611d575782358255602083013560018301556040929092019160029190910190600101611f7d565b8135601e19833603018112611fbd57600080fd5b8201803567ffffffffffffffff811115611fd657600080fd5b602082019150803603821315611feb57600080fd5b611ff6818385611d5f565b5050602082013560018201556040820135600282015561201c6060830160038301611e36565b61202c60e0830160078301611e36565b61203d6101608301600b8301611e36565b61204b6101e0830183611e86565b6117dc8183600f8601611ed0565b6040818337604080820160408401375050565b81835260208301925060008160005b848110156120a35781358652602080830135908701526040958601959091019060010161207b565b5093949350505050565b8381528260208201526060604082015260006120c98384611a3e565b61020060608501526120e061026085018284611a84565b60208601356080860152604086013560a086015291506120fd9050565b61210d60c0840160608601612059565b61211e610140840160e08601612059565b6121306101c084016101608601612059565b6101e0840135601e1985360301811261214857600080fd5b840160208101903567ffffffffffffffff81111561216557600080fd5b8060061b360382131561217757600080fd5b848303605f190161024086015261191983828461206c565b6000808335601e198436030181126121a657600080fd5b83018035915067ffffffffffffffff8211156121c157600080fd5b6020019150600581901b3603821315611a3757600080fd5b808201808211156101b8576101b8611e20565b634e487b7160e01b600052603260045260246000fd5b6000823560de1983360301811261221857600080fd5b9190910192915050565b818103818111156101b8576101b8611e2056fea2646970667358221220052d64ae8c802415c81aef02155257b2289b874c0071ac485bd129d32702134d64736f6c63430008110033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
