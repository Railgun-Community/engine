/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RelayAdapt,
  RelayAdaptInterface,
} from "../../../../contracts/adapt/Relay.sol/RelayAdapt";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RailgunSmartWallet",
        name: "_railgun",
        type: "address",
      },
      {
        internalType: "contract IWBase",
        name: "_wBase",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "CallError",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes31",
            name: "random",
            type: "bytes31",
          },
          {
            internalType: "bool",
            name: "requireSuccess",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minGasLimit",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RelayAdapt.Call[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct RelayAdapt.ActionData",
        name: "_actionData",
        type: "tuple",
      },
    ],
    name: "getAdaptParams",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "multicall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "railgun",
    outputs: [
      {
        internalType: "contract RailgunSmartWallet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes31",
            name: "random",
            type: "bytes31",
          },
          {
            internalType: "bool",
            name: "requireSuccess",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minGasLimit",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RelayAdapt.Call[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct RelayAdapt.ActionData",
        name: "_actionData",
        type: "tuple",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "preimage",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32[3]",
                name: "encryptedBundle",
                type: "bytes32[3]",
              },
              {
                internalType: "bytes32",
                name: "shieldKey",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldCiphertext",
            name: "ciphertext",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldRequest[]",
        name: "_shieldRequests",
        type: "tuple[]",
      },
    ],
    name: "shield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.TokenTransfer[]",
        name: "_transfers",
        type: "tuple[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wBase",
    outputs: [
      {
        internalType: "contract IWBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805460ff191690553480156200001b57600080fd5b506040516200296a3803806200296a8339810160408190526200003e9162000093565b60008054610100600160a81b0319166101006001600160a01b0394851602179055600180546001600160a01b03191691909216179055620000d2565b6001600160a01b03811681146200009057600080fd5b50565b60008060408385031215620000a757600080fd5b8251620000b4816200007a565b6020840151909250620000c7816200007a565b809150509250929050565b61288880620000e26000396000f3fe60806040526004361061009a5760003560e01c80639643829f11610069578063d5774a281161004e578063d5774a281461018b578063e4899c13146101ab578063e9a059a3146101be57600080fd5b80639643829f1461013d578063c2e9ffd81461016b57600080fd5b8063044a40c3146100a657806328223a77146100c85780634013074d146100db57806377321c751461011d57600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c1366004611b14565b6101de565b005b6100c66100d6366004611bd6565b6108dc565b3480156100e757600080fd5b506000546101009061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012957600080fd5b50600154610100906001600160a01b031681565b34801561014957600080fd5b5061015d610158366004611bd6565b610b72565b604051908152602001610114565b34801561017757600080fd5b506100c6610186366004611c46565b610c9b565b34801561019757600080fd5b506100c66101a6366004611ca9565b61118a565b6100c66101b9366004611cd3565b611309565b3480156101ca57600080fd5b506100c66101d9366004611ca9565b611395565b60005460ff1615806101ef57503330145b6102575760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b60648201526084015b60405180910390fd5b6000805460ff19166001178155808267ffffffffffffffff81111561027e5761027e611d28565b6040519080825280602002602001820160405280156102a7578160200160208202803683370190505b50905060005b838110156106fd5760008585838181106102c9576102c9611d54565b6102e3926040610120909202019081019150602001611d87565b60028111156102f4576102f4611d3e565b0361051757600085858381811061030d5761030d611d54565b610327926060610120909202019081019150604001611dbb565b905085858381811061033b5761033b611d54565b6103559260a0610120909202019081019150608001611ded565b6001600160781b0316600003610404576040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd9190611e08565b8383815181106103df576103df611d54565b60200260200101906001600160781b031690816001600160781b031681525050610463565b85858381811061041657610416611d54565b6104309260a0610120909202019081019150608001611ded565b83838151811061044257610442611d54565b60200260200101906001600160781b031690816001600160781b0316815250505b60008054610483916001600160a01b03848116926101009004169061149d565b6104d8600060019054906101000a90046001600160a01b03168484815181106104ae576104ae611d54565b60200260200101516001600160781b0316836001600160a01b031661149d9092919063ffffffff16565b60008383815181106104ec576104ec611d54565b60200260200101516001600160781b031611156105115761050e600185611e21565b93505b506106eb565b600185858381811061052b5761052b611d54565b610545926040610120909202019081019150602001611d87565b600281111561055657610556611d3e565b0361067d57600085858381811061056f5761056f611d54565b610589926060610120909202019081019150604001611dbb565b9050806001600160a01b031663095ea7b3600060019054906101000a90046001600160a01b03168888868181106105c2576105c2611d54565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03949094166004850152610120029190910160600135602483015250604401600060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b50505050600183838151811061065a5761065a611d54565b6001600160781b039092166020928302919091019091015261050e600185611e21565b60405162461bcd60e51b815260206004820152602560248201527f52656c617941646170743a2045524331313535206e6f7420796574207375707060448201527f6f72746564000000000000000000000000000000000000000000000000000000606482015260840161024e565b6106f6600182611e21565b90506102ad565b508160000361070d5750506108ce565b60008267ffffffffffffffff81111561072857610728611d28565b60405190808252806020026020018201604052801561076157816020015b61074e611a92565b8152602001906001900390816107465790505b5090506000805b858110156108495783818151811061078257610782611d54565b60200260200101516001600160781b0316600014610837578686828181106107ac576107ac611d54565b905061012002018036038101906107c39190611f22565b8383815181106107d5576107d5611d54565b60200260200101819052508381815181106107f2576107f2611d54565b602002602001015183838151811061080c5761080c611d54565b6020908102919091010151516001600160781b03909116604090910152610834600183611e21565b91505b610842600182611e21565b9050610768565b506000546040517f044a40c30000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063044a40c390610897908590600401611ff0565b600060405180830381600087803b1580156108b157600080fd5b505af11580156108c5573d6000803e3d6000fd5b50505050505050505b50506000805460ff19169055565b60005460ff1615806108ed57503330145b6109505760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161024e565b6000805460ff1916600117905560408101355a116109d65760405162461bcd60e51b815260206004820152602360248201527f52656c617941646170743a204e6f7420656e6f7567682067617320737570706c60448201527f6965640000000000000000000000000000000000000000000000000000000000606482015260840161024e565b60006109e3848484610b72565b905060005b83811015610ab95781858583818110610a0357610a03611d54565b9050602002810190610a1591906120b2565b610a24906101608101906120d3565b60a001351480610a3557503261dead145b610aa75760405162461bcd60e51b815260206004820152602760248201527f52656c617941646170743a204164617074494420506172616d6574657273204d60448201527f69736d6174636800000000000000000000000000000000000000000000000000606482015260840161024e565b610ab2600182611e21565b90506109e8565b506000546040517fd8ae136a0000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063d8ae136a90610b09908790879060040161240f565b600060405180830381600087803b158015610b2357600080fd5b505af1158015610b37573d6000803e3d6000fd5b50610b629250610b50915050604084016020850161253e565b610b5d606085018561255b565b611650565b50506000805460ff191690555050565b6000808367ffffffffffffffff811115610b8e57610b8e611d28565b604051908082528060200260200182016040528015610bc157816020015b6060815260200190600190039081610bac5790505b50905060005b84811015610c6457858582818110610be157610be1611d54565b9050602002810190610bf391906120b2565b610c029061012081019061255b565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505084518592508491508110610c4757610c47611d54565b6020908102919091010152610c5d600182611e21565b9050610bc7565b50604051610c7a90829086908690602001612696565b604051602081830303815290604052805190602001209150505b9392505050565b60005460ff161580610cac57503330145b610d0f5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161024e565b6000805460ff191660011781555b8181101561117b576000838383818110610d3957610d39611d54565b610d4f92602060a0909202019081019150611d87565b6002811115610d6057610d60611d3e565b148015610da057506000838383818110610d7c57610d7c611d54565b610d9592604060a0909202019081019150602001611dbb565b6001600160a01b0316145b15610ec2576000838383818110610db957610db9611d54565b905060a0020160800135600014610deb57838383818110610ddc57610ddc611d54565b905060a0020160800135610ded565b475b90506000848484818110610e0357610e03611d54565b905060a002016060016020810190610e1b9190611dbb565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e65576040519150601f19603f3d011682016040523d82523d6000602084013e610e6a565b606091505b5050905080610ebb5760405162461bcd60e51b815260206004820152601f60248201527f52656c617941646170743a20455448207472616e73666572206661696c656400604482015260640161024e565b5050611169565b6000838383818110610ed657610ed6611d54565b610eec92602060a0909202019081019150611d87565b6002811115610efd57610efd611d3e565b0361101f576000838383818110610f1657610f16611d54565b610f2f92604060a0909202019081019150602001611dbb565b90506000848484818110610f4557610f45611d54565b905060a0020160800135600014610f7757848484818110610f6857610f68611d54565b905060a0020160800135610fdf565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf9190611e08565b9050610ebb858585818110610ff657610ff6611d54565b905060a00201606001602081019061100e9190611dbb565b6001600160a01b03841690836117cc565b600183838381811061103357611033611d54565b61104992602060a0909202019081019150611d87565b600281111561105a5761105a611d3e565b0361067d57600083838381811061107357611073611d54565b61108c92604060a0909202019081019150602001611dbb565b9050806001600160a01b03166323b872dd308686868181106110b0576110b0611d54565b905060a0020160600160208101906110c89190611dbb565b8787878181106110da576110da611d54565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526001600160a01b03968716600482015295909416602486015260a002919091019190910135604483015250606401600060405180830381600087803b15801561114f57600080fd5b505af1158015611163573d6000803e3d6000fd5b50505050505b611174600182611e21565b9050610d1d565b50506000805460ff1916905550565b60005460ff16158061119b57503330145b6111fe5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161024e565b6000805460ff1916600117815581156112175781611283565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561125f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112839190611e08565b6001546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156112e357600080fd5b505af11580156112f7573d6000803e3d6000fd5b50506000805460ff1916905550505050565b60005460ff16158061131a57503330145b61137d5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161024e565b6000805460ff1916600117905561117b838383611650565b60005460ff1615806113a657503330145b6114095760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161024e565b6000805460ff1916600117815581156114225781611424565b475b9050600160009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561147657600080fd5b505af115801561148a573d6000803e3d6000fd5b50506000805460ff191690555050505050565b80158061153057506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561150a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152e9190611e08565b155b6115a25760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161024e565b6040516001600160a01b03831660248201526044810182905261164b9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611815565b505050565b60005b818110156117c6573683838381811061166e5761166e611d54565b9050602002810190611680919061273a565b90506000806116926020840184611dbb565b6001600160a01b031660408401356116ad6020860186612750565b6040516116bb929190612797565b60006040518083038185875af1925050503d80600081146116f8576040519150601f19603f3d011682016040523d82523d6000602084013e6116fd565b606091505b50915091508115611710575050506117b4565b6000306117206020860186611dbb565b6001600160a01b0316149050600088806117375750815b905080156117755785836040517f5c0dee5d00000000000000000000000000000000000000000000000000000000815260040161024e9291906127f7565b7fb8d4413b1c94556140ea4dc9a1208b4ca5a780b4057e9dcaca7046449881c39286846040516117a69291906127f7565b60405180910390a150505050505b6117bf600182611e21565b9050611653565b50505050565b6040516001600160a01b03831660248201526044810182905261164b9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016115e7565b600061186a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118fa9092919063ffffffff16565b80519091501561164b57808060200190518101906118889190612810565b61164b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161024e565b60606119098484600085611911565b949350505050565b6060824710156119895760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161024e565b6001600160a01b0385163b6119e05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161024e565b600080866001600160a01b031685876040516119fc919061282d565b60006040518083038185875af1925050503d8060008114611a39576040519150601f19603f3d011682016040523d82523d6000602084013e611a3e565b606091505b5091509150611a4e828286611a59565b979650505050505050565b60608315611a68575081610c94565b825115611a785782518084602001fd5b8160405162461bcd60e51b815260040161024e919061283f565b6040518060400160405280611aa5611ab7565b8152602001611ab2611af0565b905290565b604080516060808201835260008083528351918201845280825260208281018290529382015290918201905b8152600060209091015290565b6040805160a081018252908190611ae3908201600381606080368337509192915050565b60008060208385031215611b2757600080fd5b823567ffffffffffffffff80821115611b3f57600080fd5b818501915085601f830112611b5357600080fd5b813581811115611b6257600080fd5b86602061012083028501011115611b7857600080fd5b60209290920196919550909350505050565b60008083601f840112611b9c57600080fd5b50813567ffffffffffffffff811115611bb457600080fd5b6020830191508360208260051b8501011115611bcf57600080fd5b9250929050565b600080600060408486031215611beb57600080fd5b833567ffffffffffffffff80821115611c0357600080fd5b611c0f87838801611b8a565b90955093506020860135915080821115611c2857600080fd5b50840160808187031215611c3b57600080fd5b809150509250925092565b60008060208385031215611c5957600080fd5b823567ffffffffffffffff80821115611c7157600080fd5b818501915085601f830112611c8557600080fd5b813581811115611c9457600080fd5b86602060a083028501011115611b7857600080fd5b600060208284031215611cbb57600080fd5b5035919050565b8015158114611cd057600080fd5b50565b600080600060408486031215611ce857600080fd5b8335611cf381611cc2565b9250602084013567ffffffffffffffff811115611d0f57600080fd5b611d1b86828701611b8a565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60038110611cd057600080fd5b8035611d8281611d6a565b919050565b600060208284031215611d9957600080fd5b8135610c9481611d6a565b80356001600160a01b0381168114611d8257600080fd5b600060208284031215611dcd57600080fd5b610c9482611da4565b80356001600160781b0381168114611d8257600080fd5b600060208284031215611dff57600080fd5b610c9482611dd6565b600060208284031215611e1a57600080fd5b5051919050565b80820180821115611e4257634e487b7160e01b600052601160045260246000fd5b92915050565b6040805190810167ffffffffffffffff81118282101715611e6b57611e6b611d28565b60405290565b6040516060810167ffffffffffffffff81118282101715611e6b57611e6b611d28565b600060808284031215611ea657600080fd5b611eae611e48565b905082601f830112611ebf57600080fd5b6040516060810181811067ffffffffffffffff82111715611ee257611ee2611d28565b604052806060840185811115611ef757600080fd5b845b81811015611f11578035835260209283019201611ef9565b509183525035602082015292915050565b6000818303610120811215611f3657600080fd5b611f3e611e48565b60a0821215611f4c57600080fd5b611f54611e71565b843581526060601f1984011215611f6a57600080fd5b611f72611e71565b92506020850135611f8281611d6a565b8352611f9060408601611da4565b602084015260608501356040840152826020820152611fb160808601611dd6565b60408201528152611fc58560a08601611e94565b6020820152949350505050565b60038110611cd057634e487b7160e01b600052602160045260246000fd5b60208082528251828201819052600091906040908185019086840185805b838110156120a457825180518051875288810151805161202d81611fd2565b888b0152808a01516001600160a01b03168989015288015160608801528701516001600160781b0316608087015287015180518360a088015b60038210156120855782518152918a0191600191909101908a01612066565b505050870151610100860152610120909401939186019160010161200e565b509298975050505050505050565b6000823561021e198336030181126120c957600080fd5b9190910192915050565b6000823560de198336030181126120c957600080fd5b6000808335601e1984360301811261210057600080fd5b830160208101925035905067ffffffffffffffff81111561212057600080fd5b8060051b3603821315611bcf57600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561216457600080fd5b8260051b80836020870137939093016020019392505050565b6000823560de1983360301811261219357600080fd5b90910192915050565b6121a581611fd2565b9052565b803567ffffffffffffffff81168114611d8257600080fd5b6000808335601e198436030181126121d857600080fd5b830160208101925035905067ffffffffffffffff8111156121f857600080fd5b803603821315611bcf57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b888110156120a4578385038a52823560fe1989360301811261226b578283fd5b8801610100608080838937828101359088015260a0808301359088015260c0612296818401846121c1565b83838b01526122a8848b018284612207565b935050505060e06122bb818401846121c1565b9350888303828a01526122cf838583612207565b9d8a019d9850505093870193505060010161224b565b6000813561ffff81168082146122fa57600080fd5b845250602082013568ffffffffffffffffff8116811461231957600080fd5b68ffffffffffffffffff16602084015261233560408301611d77565b612342604085018261219c565b5061234f606083016121a9565b67ffffffffffffffff16606084015261236a60808301611da4565b6001600160a01b0316608084015260a0828101359084015261238f60c08301836120e9565b60e060c08601526123a460e086018284612230565b95945050505050565b8035825260208101356123bf81611d6a565b6123c881611fd2565b60208301526001600160a01b036123e160408301611da4565b166040830152606081013560608301526001600160781b0361240560808301611dd6565b1660808301525050565b60208082528181018390526000906040808401600586901b850182018785805b8981101561252f57888403603f190185528235368c900361021e19018112612455578283fd5b8b0180358552602080820135908601526102208788830189880137608088818401828901375060c0828101359087015260e0808301359087015261010080830135908701526101206124a9818401846120e9565b83838a01526124bb848a018284612132565b93505050506101406124cf818401846120e9565b888403838a01526124e1848284612132565b93505050506101606124f58184018461217d565b8783038289015261250683826122e5565b9250505061018061251b8188018285016123ad565b50958801959450509186019160010161242f565b50919998505050505050505050565b60006020828403121561255057600080fd5b8135610c9481611cc2565b6000808335601e1984360301811261257257600080fd5b83018035915067ffffffffffffffff82111561258d57600080fd5b6020019150600581901b3603821315611bcf57600080fd5b600060808301823560ff1981168082146125be57600080fd5b8552506020838101356125d081611cc2565b1515858201526040848101358187015260606125ee818701876120e9565b6080838a01528581875260a08a01905060a08260051b8b01019650826000805b84811015612685578c8a03609f19018452823536879003605e19018112612633578283fd5b86016001600160a01b0361264682611da4565b168b526126558a8201826121c1565b898c8e01526126678a8e018284612207565b928b01359c8b019c909c52509950928801929188019160010161260e565b50979b9a5050505050505050505050565b6000606082016060835280865180835260808501915060808160051b860101925060208089016000805b8481101561271457888703607f19018652825180518089529085019085890190845b818110156126fe578351835292870192918701916001016126e2565b50909850505094830194918301916001016126c0565b50505085018790525050828103604084015261273081856125a5565b9695505050505050565b60008235605e198336030181126120c957600080fd5b6000808335601e1984360301811261276757600080fd5b83018035915067ffffffffffffffff82111561278257600080fd5b602001915036819003821315611bcf57600080fd5b8183823760009101908152919050565b60005b838110156127c25781810151838201526020016127aa565b50506000910152565b600081518084526127e38160208601602086016127a7565b601f01601f19169290920160200192915050565b82815260406020820152600061190960408301846127cb565b60006020828403121561282257600080fd5b8151610c9481611cc2565b600082516120c98184602087016127a7565b602081526000610c9460208301846127cb56fea2646970667358221220ea6d64b1c9c253ecbe1f947bb37bc508f0dc60ed0eaeaf61f1da518a69fab3d764736f6c63430008110033";

type RelayAdaptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayAdaptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayAdapt__factory extends ContractFactory {
  constructor(...args: RelayAdaptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _railgun: PromiseOrValue<string>,
    _wBase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayAdapt> {
    return super.deploy(
      _railgun,
      _wBase,
      overrides || {}
    ) as Promise<RelayAdapt>;
  }
  override getDeployTransaction(
    _railgun: PromiseOrValue<string>,
    _wBase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_railgun, _wBase, overrides || {});
  }
  override attach(address: string): RelayAdapt {
    return super.attach(address) as RelayAdapt;
  }
  override connect(signer: Signer): RelayAdapt__factory {
    return super.connect(signer) as RelayAdapt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayAdaptInterface {
    return new utils.Interface(_abi) as RelayAdaptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayAdapt {
    return new Contract(address, _abi, signerOrProvider) as RelayAdapt;
  }
}
