/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestERC721,
  TestERC721Interface,
} from "../../../../contracts/teststubs/TokenStubs.sol/TestERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a808252697465737445524337323160b01b602080840182905284518086019095529184529083015290600062000054838262000111565b50600162000063828262000111565b505050620001dd565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200009757607f821691505b602082108103620000b857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200010c57600081815260208120601f850160051c81016020861015620000e75750805b601f850160051c820191505b818110156200010857828155600101620000f3565b5050505b505050565b81516001600160401b038111156200012d576200012d6200006c565b62000145816200013e845462000082565b84620000be565b602080601f8311600181146200017d5760008415620001645750858301515b600019600386901b1c1916600185901b17855562000108565b600085815260208120601f198616915b82811015620001ae578886015182559484019460019091019084016200018d565b5085821015620001cd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114fe80620001ed6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b80636352211e146101a557806370a08231146101b857806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806340c10f191461017f57806342842e0e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd3660046110c6565b610256565b60405190151581526020015b60405180910390f35b61011f61033b565b60405161010e9190611133565b61013f61013a366004611146565b6103cd565b6040516001600160a01b03909116815260200161010e565b61016a61016536600461117b565b6103f4565b005b61016a61017a3660046111a5565b610548565b61016a61018d36600461117b565b6105cf565b61016a6101a03660046111a5565b6105dd565b61013f6101b3366004611146565b6105f8565b6101cb6101c63660046111e1565b61065d565b60405190815260200161010e565b61011f6106f7565b61016a6101ef3660046111fc565b610706565b61016a61020236600461124e565b610711565b61011f610215366004611146565b61079f565b61010261022836600461132a565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102e957507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061033557507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606000805461034a9061135d565b80601f01602080910402602001604051908101604052809291908181526020018280546103769061135d565b80156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b5050505050905090565b60006103d882610813565b506000908152600460205260409020546001600160a01b031690565b60006103ff826105f8565b9050806001600160a01b0316836001600160a01b03160361048d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806104c757506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105395760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610484565b610543838361087a565b505050565b61055233826108f5565b6105c45760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152608401610484565b610543838383610974565b6105d98282610b4e565b5050565b61054383838360405180602001604052806000815250610711565b6000818152600260205260408120546001600160a01b0316806103355760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610484565b60006001600160a01b0382166106db5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e657200000000000000000000000000000000000000000000006064820152608401610484565b506001600160a01b031660009081526003602052604090205490565b60606001805461034a9061135d565b6105d9338383610c9d565b61071b33836108f5565b61078d5760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206e6f7220617070726f7665640000000000000000000000000000000000006064820152608401610484565b61079984848484610d6b565b50505050565b60606107aa82610813565b60006107c160408051602081019091526000815290565b905060008151116107e1576040518060200160405280600081525061080c565b806107eb84610df4565b6040516020016107fc929190611397565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166108775760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606401610484565b50565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906108bc826105f8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610901836105f8565b9050806001600160a01b0316846001600160a01b0316148061094857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061096c5750836001600160a01b0316610961846103cd565b6001600160a01b0316145b949350505050565b826001600160a01b0316610987826105f8565b6001600160a01b031614610a035760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e65720000000000000000000000000000000000000000000000000000006064820152608401610484565b6001600160a01b038216610a7e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610484565b610a8960008261087a565b6001600160a01b0383166000908152600360205260408120805460019290610ab29084906113dc565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ae09084906113ef565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610ba45760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610484565b6000818152600260205260409020546001600160a01b031615610c095760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610484565b6001600160a01b0382166000908152600360205260408120805460019290610c329084906113ef565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b031603610cfe5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610484565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d76848484610974565b610d8284848484610f29565b6107995760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610484565b606081600003610e3757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610e615780610e4b81611402565b9150610e5a9050600a83611431565b9150610e3b565b60008167ffffffffffffffff811115610e7c57610e7c611238565b6040519080825280601f01601f191660200182016040528015610ea6576020820181803683370190505b5090505b841561096c57610ebb6001836113dc565b9150610ec8600a86611445565b610ed39060306113ef565b60f81b818381518110610ee857610ee8611459565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610f22600a86611431565b9450610eaa565b60006001600160a01b0384163b1561108d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f6d90339089908890889060040161146f565b6020604051808303816000875af1925050508015610fa8575060408051601f3d908101601f19168201909252610fa5918101906114ab565b60015b61105b573d808015610fd6576040519150601f19603f3d011682016040523d82523d6000602084013e610fdb565b606091505b5080516000036110535760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e74657200000000000000000000000000006064820152608401610484565b805181602001fd5b7fffffffff0000000000000000000000000000000000000000000000000000000016630a85bd0160e11b14905061096c565b506001949350505050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461087757600080fd5b6000602082840312156110d857600080fd5b813561080c81611098565b60005b838110156110fe5781810151838201526020016110e6565b50506000910152565b6000815180845261111f8160208601602086016110e3565b601f01601f19169290920160200192915050565b60208152600061080c6020830184611107565b60006020828403121561115857600080fd5b5035919050565b80356001600160a01b038116811461117657600080fd5b919050565b6000806040838503121561118e57600080fd5b6111978361115f565b946020939093013593505050565b6000806000606084860312156111ba57600080fd5b6111c38461115f565b92506111d16020850161115f565b9150604084013590509250925092565b6000602082840312156111f357600080fd5b61080c8261115f565b6000806040838503121561120f57600080fd5b6112188361115f565b91506020830135801515811461122d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561126457600080fd5b61126d8561115f565b935061127b6020860161115f565b925060408501359150606085013567ffffffffffffffff8082111561129f57600080fd5b818701915087601f8301126112b357600080fd5b8135818111156112c5576112c5611238565b604051601f8201601f19908116603f011681019083821181831017156112ed576112ed611238565b816040528281528a602084870101111561130657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561133d57600080fd5b6113468361115f565b91506113546020840161115f565b90509250929050565b600181811c9082168061137157607f821691505b60208210810361139157634e487b7160e01b600052602260045260246000fd5b50919050565b600083516113a98184602088016110e3565b8351908301906113bd8183602088016110e3565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610335576103356113c6565b80820180821115610335576103356113c6565b600060018201611414576114146113c6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826114405761144061141b565b500490565b6000826114545761145461141b565b500690565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526114a16080830184611107565b9695505050505050565b6000602082840312156114bd57600080fd5b815161080c8161109856fea26469706673582212205d6a780cdaeaf72d9fef1198d6a17ae804400eb5cecbdc2f37bcac38e38b2eef64736f6c63430008110033";

type TestERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC721__factory extends ContractFactory {
  constructor(...args: TestERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestERC721> {
    return super.deploy(overrides || {}) as Promise<TestERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestERC721 {
    return super.attach(address) as TestERC721;
  }
  override connect(signer: Signer): TestERC721__factory {
    return super.connect(signer) as TestERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC721Interface {
    return new utils.Interface(_abi) as TestERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC721 {
    return new Contract(address, _abi, signerOrProvider) as TestERC721;
  }
}
