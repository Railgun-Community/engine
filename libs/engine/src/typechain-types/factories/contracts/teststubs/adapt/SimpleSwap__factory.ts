/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SimpleSwap,
  SimpleSwapInterface,
} from "../../../../contracts/teststubs/adapt/SimpleSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_from",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rateBP",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610585806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fe02915614610030575b600080fd5b61004361003e36600461042b565b610045565b005b61005a6001600160a01b03851633308561008c565b6100863361271061006b848661046d565b6100759190610498565b6001600160a01b038616919061013d565b50505050565b6040516001600160a01b03808516602483015283166044820152606481018290526100869085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261018b565b6040516001600160a01b0383166024820152604481018290526101869084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016100d9565b505050565b60006101e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166102759092919063ffffffff16565b80519091501561018657808060200190518101906101fe91906104ba565b6101865760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6060610284848460008561028e565b90505b9392505050565b6060824710156103065760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161026c565b6001600160a01b0385163b61035d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161026c565b600080866001600160a01b031685876040516103799190610500565b60006040518083038185875af1925050503d80600081146103b6576040519150601f19603f3d011682016040523d82523d6000602084013e6103bb565b606091505b50915091506103cb8282866103d6565b979650505050505050565b606083156103e5575081610287565b8251156103f55782518084602001fd5b8160405162461bcd60e51b815260040161026c919061051c565b80356001600160a01b038116811461042657600080fd5b919050565b6000806000806080858703121561044157600080fd5b61044a8561040f565b93506104586020860161040f565b93969395505050506040820135916060013590565b808202811582820484141761049257634e487b7160e01b600052601160045260246000fd5b92915050565b6000826104b557634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156104cc57600080fd5b8151801515811461028757600080fd5b60005b838110156104f75781810151838201526020016104df565b50506000910152565b600082516105128184602087016104dc565b9190910192915050565b602081526000825180602084015261053b8160408501602087016104dc565b601f01601f1916919091016040019291505056fea26469706673582212206d7c6047b5c8e9646ed41e781a624d87fef6b032085135624431000f681b9f2264736f6c63430008110033";

type SimpleSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleSwap__factory extends ContractFactory {
  constructor(...args: SimpleSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleSwap> {
    return super.deploy(overrides || {}) as Promise<SimpleSwap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleSwap {
    return super.attach(address) as SimpleSwap;
  }
  override connect(signer: Signer): SimpleSwap__factory {
    return super.connect(signer) as SimpleSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleSwapInterface {
    return new utils.Interface(_abi) as SimpleSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleSwap {
    return new Contract(address, _abi, signerOrProvider) as SimpleSwap;
  }
}
