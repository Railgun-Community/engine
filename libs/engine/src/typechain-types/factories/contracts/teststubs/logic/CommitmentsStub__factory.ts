/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CommitmentsStub,
  CommitmentsStubInterface,
} from "../../../../contracts/teststubs/logic/CommitmentsStub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doubleInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_leafHashes",
        type: "bytes32[]",
      },
    ],
    name: "insertLeavesStub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "setNextLeafIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b6200042e565b600054610100900460ff1615808015620000435750600054600160ff909116105b8062000073575062000060306200015f60201b6200036a1760201c565b15801562000073575060005460ff166001145b620000dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000100576000805461ff0019166101001790555b620001156200016e60201b620003861760201c565b80156200015c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620001db5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620002167f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160008051602062000f3283398151915262000386565b6006556000620002567f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160008051602062000f3283398151915262000386565b905060005b6010811015620002ba5781600682601081106200027c576200027c620003a9565b01558160168260108110620002955762000295620003a9565b0155620002a38280620002ed565b9150620002b2600182620003bf565b90506200025b565b5060038190556004819055600554600090815260266020908152604080832093835292905220805460ff19166001179055565b60408051808201825283815260208101839052905163014cf2b360e51b815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e5660916200033991600401620003e1565b602060405180830381865af415801562000357573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037d919062000414565b90505b92915050565b600082620003a457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b808201808211156200038057634e487b7160e01b600052601160045260246000fd5b60408101818360005b60028110156200040b578151835260209283019290910190600101620003ea565b50505092915050565b6000602082840312156200042757600080fd5b5051919050565b610af4806200043e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80636650331511610081578063ec7329591161005b578063ec732959146101b0578063ec951ee4146101b8578063f19ea903146101cb57600080fd5b80636650331514610156578063c718dbda1461015f578063e82955881461019d57600080fd5b806323f62b05116100b257806323f62b05146101325780632eb4a7ab1461013a57806338bf282e1461014357600080fd5b80630be4f422146100d95780630c9c0c8d146100f557806321c368eb1461011d575b600080fd5b6100e260025481565b6040519081526020015b60405180910390f35b610108610103366004610801565b6101f9565b604080519283526020830191909152016100ec565b61013061012b366004610830565b610243565b005b61013061024f565b6100e260035481565b6100e26101513660046108ee565b610259565b6100e260055481565b61018d61016d3660046108ee565b602660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ec565b6100e26101ab366004610801565b610306565b6100e261031d565b6101306101c6366004610801565b600255565b61018d6101d93660046108ee565b600160209081526000928352604080842090915290825290205460ff1681565b60008061020860106002610a0a565b836002546102169190610a16565b11156102345760055461022a906001610a16565b9360009350915050565b60055460025491509150915091565b61024c81610545565b50565b610257610386565b565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e5660916102bc91600401610a29565b602060405180830381865af41580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190610a5a565b90505b92915050565b6006816010811061031657600080fd5b0154905081565b6103677f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a73565b81565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600054610100900460ff16610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840160405180910390fd5b61046b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a73565b60065560006104ba7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a73565b905060005b60108110156105125781600682601081106104dc576104dc610a95565b015581601682601081106104f2576104f2610a95565b01556104fe8280610259565b915061050b600182610a16565b90506104bf565b5060038190556004819055600554600090815260266020908152604080832093835292905220805460ff19166001179055565b80516000819003610554575050565b61056060106002610a0a565b8160025461056e9190610a16565b111561057c5761057c6107da565b60028054908290600061058f8385610a16565b909155506000905080805b601081101561078957600184901c915060006105b7600286610a73565b60010361063d576105cc83600187901c610aab565b9350610605601683601081106105e4576105e4610a95565b01548883815181106105f8576105f8610a95565b6020026020010151610259565b87858151811061061757610617610a95565b602090810291909101015261062d600182610a16565b905061063a600186610a16565b94505b85811015610763576000610652600188610aab565b8210156106845787610665836001610a16565b8151811061067557610675610a95565b6020026020010151905061069c565b6006836010811061069757610697610a95565b015490505b6106a7600188610aab565b8214806106bd57506106ba600288610aab565b82145b156106f2578782815181106106d4576106d4610a95565b6020026020010151601684601081106106ef576106ef610a95565b01555b61070084600188901c610aab565b945061072588838151811061071757610717610a95565b602002602001015182610259565b88868151811061073757610737610a95565b602090810291909101015261074d600287610a16565b955061075c9050600282610a16565b905061063d565b8294508360016107739190610a16565b95506107829050600182610a16565b905061059a565b508460008151811061079d5761079d610a95565b60209081029190910181015160038190556005546000908152602683526040808220928252919092529020805460ff191660011790555050505050565b6004546003556000600281905560058054600192906107fa908490610a16565b9091555050565b60006020828403121561081357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561084357600080fd5b823567ffffffffffffffff8082111561085b57600080fd5b818501915085601f83011261086f57600080fd5b8135818111156108815761088161081a565b8060051b604051601f19603f830116810181811085821117156108a6576108a661081a565b6040529182528482019250838101850191888311156108c457600080fd5b938501935b828510156108e2578435845293850193928501926108c9565b98975050505050505050565b6000806040838503121561090157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561096157816000190482111561094757610947610910565b8085161561095457918102915b93841c939080029061092b565b509250929050565b60008261097857506001610300565b8161098557506000610300565b816001811461099b57600281146109a5576109c1565b6001915050610300565b60ff8411156109b6576109b6610910565b50506001821b610300565b5060208310610133831016604e8410600b84101617156109e4575081810a610300565b6109ee8383610926565b8060001904821115610a0257610a02610910565b029392505050565b60006102fd8383610969565b8082018082111561030057610300610910565b60408101818360005b6002811015610a51578151835260209283019290910190600101610a32565b50505092915050565b600060208284031215610a6c57600080fd5b5051919050565b600082610a9057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b818103818111156103005761030061091056fea26469706673582212207cc827f4c9c1cd2b0aed2664e7df0c164c74c9eedffc3b50b75b75efb3ba4d6064736f6c6343000811003395b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff";

type CommitmentsStubConstructorParams =
  | [linkLibraryAddresses: CommitmentsStubLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentsStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class CommitmentsStub__factory extends ContractFactory {
  constructor(...args: CommitmentsStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        CommitmentsStub__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CommitmentsStubLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CommitmentsStub> {
    return super.deploy(overrides || {}) as Promise<CommitmentsStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CommitmentsStub {
    return super.attach(address) as CommitmentsStub;
  }
  override connect(signer: Signer): CommitmentsStub__factory {
    return super.connect(signer) as CommitmentsStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentsStubInterface {
    return new utils.Interface(_abi) as CommitmentsStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommitmentsStub {
    return new Contract(address, _abi, signerOrProvider) as CommitmentsStub;
  }
}

export interface CommitmentsStubLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
}
