/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RailgunSmartWalletStub,
  RailgunSmartWalletStubInterface,
} from "../../../../contracts/teststubs/logic/RailgunSmartWalletStub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "shieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unshieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftFee",
        type: "uint256",
      },
    ],
    name: "FeeChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "treeNumber",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "nullifier",
        type: "bytes32[]",
      },
    ],
    name: "Nullified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentPreimage[]",
        name: "commitments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32[3]",
            name: "encryptedBundle",
            type: "bytes32[3]",
          },
          {
            internalType: "bytes32",
            name: "shieldKey",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct ShieldCiphertext[]",
        name: "shieldCiphertext",
        type: "tuple[]",
      },
    ],
    name: "Shield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "hash",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32[4]",
            name: "ciphertext",
            type: "bytes32[4]",
          },
          {
            internalType: "bytes32",
            name: "blindedSenderViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blindedReceiverViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "annotationData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "memo",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentCiphertext[]",
        name: "ciphertext",
        type: "tuple[]",
      },
    ],
    name: "Transact",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenData",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Unshield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "addVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "changeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkSafetyVectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint136",
        name: "_amount",
        type: "uint136",
      },
      {
        internalType: "bool",
        name: "_isInclusive",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "_feeBP",
        type: "uint120",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData",
        name: "_tokenData",
        type: "tuple",
      },
    ],
    name: "getTokenID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_commitmentPreimage",
        type: "tuple",
      },
    ],
    name: "hashCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initializeRailgunLogic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEventBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newTreeStub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "removeVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setNullifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "preimage",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32[3]",
                name: "encryptedBundle",
                type: "bytes32[3]",
              },
              {
                internalType: "bytes32",
                name: "shieldKey",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldCiphertext",
            name: "ciphertext",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldRequest[]",
        name: "_shieldRequests",
        type: "tuple[]",
      },
    ],
    name: "shield",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "shieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snarkSafetyVector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "sumCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlocklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIDMapping",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenSubID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unshieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "validateCommitmentPreimage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "validateTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50615a6480620000216000396000f3fe6080604052600436106102e75760003560e01c806371c5345511610184578063c718dbda116100d6578063e82955881161008a578063f19ea90311610064578063f19ea903146108f8578063f2fde38b14610933578063f71a55f81461095357600080fd5b8063e8295588146108a3578063ec732959146108c3578063ee990783146108d857600080fd5b8063cd3efe06116100bb578063cd3efe061461085a578063d8ae136a14610870578063dc7c9a1f1461088357600080fd5b8063c718dbda146107ff578063cc1f73fd1461083a57600080fd5b80639071adc011610138578063ab63e69c11610112578063ab63e69c14610768578063b14f2a3914610788578063b8ceaef2146107a857600080fd5b80639071adc01461071257806392d3c7a414610728578063a33952a91461074857600080fd5b8063815b534f11610169578063815b534f146106af5780638c6179f7146106df5780638da5cb5b146106f457600080fd5b806371c53455146106625780637b12ae831461068257600080fd5b80632ebfe12a1161023d57806359bb6199116101f157806366503315116101cb57806366503315146106175780636cefafaa1461062d578063715018a61461064d57600080fd5b806359bb61991461059f578063617e1b17146105bf57806361d027b3146105df57600080fd5b806338bf282e1161022257806338bf282e146104fa57806343c887301461051a5780634cfff4f61461055a57600080fd5b80632ebfe12a146104ba5780632ec0f359146104da57600080fd5b80630c9c0c8d1161029f57806318610eb21161027957806318610eb21461043f57806328f89c3a146104845780632eb4a7ab146104a457600080fd5b80630c9c0c8d146103aa578063129458f4146103df578063174768911461041f57600080fd5b8063053ed12a116102d0578063053ed12a1461033e5780630804a4ee146103715780630be4f4221461038657600080fd5b806301c37790146102ec578063044a40c314610329575b600080fd5b3480156102f857600080fd5b5060fa5461030c906001600160781b031681565b6040516001600160781b0390911681526020015b60405180910390f35b61033c610337366004613ef0565b610973565b005b34801561034a57600080fd5b5060fa5461030c906f0100000000000000000000000000000090046001600160781b031681565b34801561037d57600080fd5b5061033c610c40565b34801561039257600080fd5b5061039c60665481565b604051908152602001610320565b3480156103b657600080fd5b506103ca6103c5366004613f66565b610ccc565b60408051928352602083019190915201610320565b3480156103eb57600080fd5b5061040f6103fa366004613f66565b60fc6020526000908152604090205460ff1681565b6040519015158152602001610320565b34801561042b57600080fd5b5061040f61043a366004613f7f565b610d16565b34801561044b57600080fd5b5061033c61045a366004613fc9565b60009283526065602090815260408085209385529290529120805460ff1916911515919091179055565b34801561049057600080fd5b5061039c61049f366004614002565b6110bb565b3480156104b057600080fd5b5061039c60675481565b3480156104c657600080fd5b5061040f6104d5366004614395565b611112565b3480156104e657600080fd5b5061033c6104f53660046144a9565b611137565b34801561050657600080fd5b5061039c6105153660046144f6565b6111a7565b34801561052657600080fd5b5061053a610535366004614534565b61124b565b604080516001600160781b03938416815292909116602083015201610320565b34801561056657600080fd5b5061033c610575366004613fc9565b6000928352608a602090815260408085209385529290529120805460ff1916911515919091179055565b3480156105ab57600080fd5b5061039c6105ba3660046145dd565b6112dd565b3480156105cb57600080fd5b5061040f6105da36600461461f565b611352565b3480156105eb57600080fd5b5060f9546105ff906001600160a01b031681565b6040516001600160a01b039091168152602001610320565b34801561062357600080fd5b5061039c60695481565b34801561063957600080fd5b5061033c610648366004613f66565b611448565b34801561065957600080fd5b5061033c61146b565b34801561066e57600080fd5b5061039c61067d3660046146ac565b61147f565b34801561068e57600080fd5b506106a261069d3660046144f6565b611533565b6040516103209190614784565b3480156106bb57600080fd5b5061040f6106ca366004614860565b60956020526000908152604090205460ff1681565b3480156106eb57600080fd5b5061033c6117f8565b34801561070057600080fd5b506033546001600160a01b03166105ff565b34801561071e57600080fd5b5061039c60fb5481565b34801561073457600080fd5b5061039c61074336600461487d565b611800565b34801561075457600080fd5b5061033c610763366004614899565b61185e565b34801561077457600080fd5b5061033c6107833660046145dd565b611a49565b34801561079457600080fd5b5061033c6107a3366004614860565b611b69565b3480156107b457600080fd5b506107f06107c3366004613f66565b60fd602052600090815260409020805460019091015460ff82169161010090046001600160a01b03169083565b60405161032093929190614931565b34801561080b57600080fd5b5061040f61081a3660046144f6565b608a60209081526000928352604080842090915290825290205460ff1681565b34801561084657600080fd5b5061033c61085536600461495b565b611bf2565b34801561086657600080fd5b5061039c60fe5481565b61033c61087e3660046145dd565b611e05565b34801561088f57600080fd5b5061033c61089e366004613f66565b61208b565b3480156108af57600080fd5b5061039c6108be366004613f66565b6120ab565b3480156108cf57600080fd5b5061039c6120c2565b3480156108e457600080fd5b5061040f6108f3366004613f7f565b61210f565b34801561090457600080fd5b5061040f6109133660046144f6565b606560209081526000928352604080842090915290825290205460ff1681565b34801561093f57600080fd5b5061033c61094e366004614860565b61260f565b34801561095f57600080fd5b5061033c61096e3660046145dd565b61269c565b60008167ffffffffffffffff81111561098e5761098e61403d565b6040519080825280602002602001820160405280156109b7578160200160208202803683370190505b50905060008267ffffffffffffffff8111156109d5576109d561403d565b604051908082528060200260200182016040528015610a0e57816020015b6109fb613d70565b8152602001906001900390816109f35790505b50905060008367ffffffffffffffff811115610a2c57610a2c61403d565b604051908082528060200260200182016040528015610a6557816020015b610a52613da9565b815260200190600190039081610a4a5790505b50905060005b84811015610bea57610a97868683818110610a8857610a88614997565b90506101200201600001611352565b610b0e5760405162461bcd60e51b815260206004820152602c60248201527f5261696c67756e536d61727457616c6c65743a204e6f746520707265696d616760448201527f6520697320696e76616c6964000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b32868683818110610b2357610b23614997565b905061012002016000016127bf565b838281518110610b4457610b44614997565b6020026020010181905250610b71838281518110610b6457610b64614997565b602002602001015161147f565b848281518110610b8357610b83614997565b602002602001018181525050858582818110610ba157610ba1614997565b9050610120020160a001803603810190610bbb91906149ad565b828281518110610bcd57610bcd614997565b6020908102919091010152610be3600182614a50565b9050610a6b565b507fc3821e11e71307afd1d94a490660178ff37aefdd3c0514e5dd08937bd7024f346069546066548484604051610c249493929190614af8565b60405180910390a1610c3583612a22565b50504360fe55505050565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450805460ff1916600117905533600090815260fc602052604090205480610cc95760405162461bcd60e51b815260206004820152601c60248201527f5261696c67756e4c6f6769633a20556e7361666520766563746f7273000000006044820152606401610b05565b50565b600080610cdb60106002614c6c565b83606654610ce99190614a50565b1115610d0757606954610cfd906001614a50565b9360009350915050565b60695460665491509150915091565b6000610d26610160830183614c78565b610d37906040810190602001614cb1565b68ffffffffffffffffff163a1015610d5157506000919050565b6000610d61610160840184614c78565b610d729060a0810190608001614860565b6001600160a01b031614158015610db0575033610d93610160840184614c78565b610da49060a0810190608001614860565b6001600160a01b031614155b15610dbd57506000919050565b46610dcc610160840184614c78565b610ddd906080810190606001614ce4565b67ffffffffffffffff1614610df457506000919050565b608a6000610e06610160850185614c78565b610e14906020810190614d11565b61ffff16815260208082019290925260409081016000908120610100860135825290925290205460ff16610e4a57506000919050565b60005b610e5b610120840184614d2c565b9050811015610ef65760656000610e76610160860186614c78565b610e84906020810190614d11565b61ffff168152602001908152602001600020600084806101200190610ea99190614d2c565b84818110610eb957610eb9614997565b602090810292909201358352508101919091526040016000205460ff1615610ee45750600092915050565b610eef600182614a50565b9050610e4d565b506000610f07610160840184614c78565b610f18906060810190604001614d76565b6002811115610f2957610f296148fd565b14611071576001610f3e610140840184614d2c565b610f49929150614d93565b610f57610160840184614c78565b610f659060c0810190614d2c565b905014610f7457506000919050565b60006002610f86610160850185614c78565b610f97906060810190604001614d76565b6002811115610fa857610fa86148fd565b03611004576040805160608101909152338152610ffd9060208101610fd63687900387016101a0880161487d565b8152602001610fed61022087016102008801614da6565b6001600160781b0316905261147f565b905061101d565b61101a61067d36859003850161018086016146ac565b90505b61102b610140840184614d2c565b600161103b610140870187614d2c565b611046929150614d93565b81811061105557611055614997565b90506020020135811461106b5750600092915050565b506110ac565b61107f610140830183614d2c565b905061108f610160840184614c78565b61109d9060c0810190614d2c565b9050146110ac57506000919050565b6110b58261210f565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016110ef9190614f3c565b6040516020818303038152906040528051906020012060001c6110b59190615007565b600061112d846111273686900386018661501b565b84612cb7565b90505b9392505050565b61113f612e58565b600083815260c76020908152604080832085845290915290208190611164828261530f565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb2383838360405161119a93929190615413565b60405180910390a1505050565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e56609161120a91600401615501565b602060405180830381865af4158015611227573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111309190615532565b60008084818086156112945761271061126d6001600160781b0388168561554b565b611277919061557e565b61128190846155ae565b915061128d82846155ae565b90506112d0565b829150816112a4876127106155df565b6001600160781b03166112b98461271061554b565b6112c3919061557e565b6112cd91906155ae565b90505b9097909650945050505050565b600080805b8381101561134a578484828181106112fc576112fc614997565b905060200281019061130e91906155ff565b61131d90610160810190614c78565b61132b9060c0810190614d2c565b611336915083614a50565b9150611343600182614a50565b90506112e2565b509392505050565b600061136460a0830160808401614da6565b6001600160781b031660000361137c57506000919050565b609560006113906060850160408601614860565b6001600160a01b0316815260208101919091526040016000205460ff16156113ba57506000919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018235106113ea57506000919050565b60016113fc6040840160208501614d76565b600281111561140d5761140d6148fd565b148015611433575061142560a0830160808401614da6565b6001600160781b0316600114155b1561144057506000919050565b506001919050565b611450612e58565b600090815260fc60205260409020805460ff19166001179055565b611473612e58565b61147d6000612eb2565b565b600073__$0d67abb2a30631c14ae5d39aeb2a4b8972$__635a53025d6040518060600160405280856000015181526020016114bd8660200151611800565b815260200185604001516001600160781b031660001b8152506040518263ffffffff1660e01b81526004016114f29190615616565b602060405180830381865af415801561150f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b59190615532565b61153b613dbc565b600083815260c76020908152604080832085845290915290819020815160c0810190925280548290829061156e90615061565b80601f016020809104026020016040519081016040528092919081815260200182805461159a90615061565b80156115e75780601f106115bc576101008083540402835291602001916115e7565b820191906000526020600020905b8154815290600101906020018083116115ca57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161163457505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161166a575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116116ae57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116116e45750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161172857505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161175e575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b828210156117e9578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906117a3565b50505091525090949350505050565b61147d612f1c565b60008082516002811115611816576118166148fd565b0361182c5750602001516001600160a01b031690565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016110ef919061563e565b600054610100900460ff161580801561187e5750600054600160ff909116105b806118985750303b158015611898575060005460ff166001145b61190a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610b05565b6000805460ff19166001179055801561192d576000805461ff0019166101001790555b611935612f43565b61193d612fb6565b61194686611b69565b611951858585611bf2565b61195a8261260f565b60fc6020527f18a261e1efd282dd636becf59b85995514ab34d1c1c9a3e1128aac786b5472de8054600160ff1991821681179092557f35cc25be27a7e44e9e6eb23f103c8980fe6d01e7b6e981c2c07b23911ac79e8b805482168317905573cc29dbf69896278a0c6b886ef8cc30a56fa6164a6000527f7e1bfa3bd01233beed03b737790a265ae14e11664e22f82316c6f65a13e15c8c805490911690911790558015611a41576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b611a51612e58565b60005b81811015611b645760956000848484818110611a7257611a72614997565b9050602002016020810190611a879190614860565b6001600160a01b0316815260208101919091526040016000205460ff1615611b525760956000848484818110611abf57611abf614997565b9050602002016020810190611ad49190614860565b6001600160a01b031681526020810191909152604001600020805460ff19169055828282818110611b0757611b07614997565b9050602002016020810190611b1c9190614860565b6001600160a01b03167f2ef13bd1aff17b0f9c85afaf228e84266c8394d9d381735e83fe23f607113e2e60405160405180910390a25b611b5d600182614a50565b9050611a54565b505050565b611b71612e58565b60f9546001600160a01b03828116911614610cc95760f980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f1ac54af2084ba0e4b86b7bc54b978ce7dd4ca046d3dec89d7c8963873820c0bb9060200160405180910390a150565b611bfa612e58565b60fa546001600160781b038481169116141580611c38575060fa546001600160781b038381166f010000000000000000000000000000009092041614155b80611c45575060fb548114155b15611b6457611c57600261271061564c565b6001600160781b0316836001600160781b03161115611cdd5760405162461bcd60e51b8152602060048201526024808201527f5261696c67756e4c6f6769633a20536869656c6420466565206578636565647360448201527f20353025000000000000000000000000000000000000000000000000000000006064820152608401610b05565b611cea600261271061564c565b6001600160781b0316826001600160781b03161115611d715760405162461bcd60e51b815260206004820152602660248201527f5261696c67756e4c6f6769633a20556e736869656c642046656520657863656560448201527f64732035302500000000000000000000000000000000000000000000000000006064820152608401610b05565b60fa80546001600160781b038581167fffff00000000000000000000000000000000000000000000000000000000000090921682176f010000000000000000000000000000009186169182021790925560fb8390556040805191825260208201929092529081018290527f472cfc031d19bcc54db01976ce486cc12dc3d489e6adced1eb5a782cd55cfdf29060600161119a565b6000611e1183836112dd565b905060008167ffffffffffffffff811115611e2e57611e2e61403d565b604051908082528060200260200182016040528015611e57578160200160208202803683370190505b5090506000808367ffffffffffffffff811115611e7657611e7661403d565b604051908082528060200260200182016040528015611eaf57816020015b611e9c613e1f565b815260200190600190039081611e945790505b50905060005b8581101561202557611ee4878783818110611ed257611ed2614997565b905060200281019061043a91906155ff565b611f565760405162461bcd60e51b815260206004820152602b60248201527f5261696c67756e536d61727457616c6c65743a205472616e73616374696f6e2060448201527f69736e27742076616c69640000000000000000000000000000000000000000006064820152608401610b05565b611f85878783818110611f6b57611f6b614997565b9050602002810190611f7d91906155ff565b858585613145565b92506000878783818110611f9b57611f9b614997565b9050602002810190611fad91906155ff565b611fbc90610160810190614c78565b611fcd906060810190604001614d76565b6002811115611fde57611fde6148fd565b1461201357612013878783818110611ff857611ff8614997565b905060200281019061200a91906155ff565b61018001613370565b61201e600182614a50565b9050611eb5565b506000806120338551610ccc565b915091507f56a618cda1e34057b7f849a5792f6c8587a2dbe11c83d0254e72cb3daffda7d18282878660405161206c9493929190615666565b60405180910390a161207d85612a22565b50504360fe55505050505050565b612093612e58565b600090815260fc60205260409020805460ff19169055565b606a81601081106120bb57600080fd5b0154905081565b61210c7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615007565b81565b600080612120610120840184614d2c565b915060009050612134610140850185614d2c565b600084815260c760209081526040808320848452909152808220815160c081019092528054939550919350918290829061216d90615061565b80601f016020809104026020016040519081016040528092919081815260200182805461219990615061565b80156121e65780601f106121bb576101008083540402835291602001916121e6565b820191906000526020600020905b8154815290600101906020018083116121c957829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161223357505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311612269575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116122ad57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116122e35750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161232757505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161235d575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b828210156123e8578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906123a2565b505050915250506020810151519091506000036124475760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f742073657400000000000000000000006044820152606401610b05565b600082612455856002614a50565b61245f9190614a50565b67ffffffffffffffff8111156124775761247761403d565b6040519080825280602002602001820160405280156124a0578160200160208202803683370190505b50905085610100013560001c816000815181106124bf576124bf614997565b60209081029190910101526124db61049f610160880188614c78565b816001815181106124ee576124ee614997565b60200260200101818152505060005b8481101561256657612513610120880188614d2c565b8281811061252357612523614997565b6020029190910135905082612539836002614a50565b8151811061254957612549614997565b602090810291909101015261255f600182614a50565b90506124fd565b5060005b838110156125de57612580610140880188614d2c565b8281811061259057612590614997565b6020029190910135905082826125a7886002614a50565b6125b19190614a50565b815181106125c1576125c1614997565b60209081029190910101526125d7600182614a50565b905061256a565b5060006125ec838884611112565b905061deac193201612605575060019695505050505050565b9695505050505050565b612617612e58565b6001600160a01b0381166126935760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b05565b610cc981612eb2565b6126a4612e58565b60005b81811015611b6457609560008484848181106126c5576126c5614997565b90506020020160208101906126da9190614860565b6001600160a01b0316815260208101919091526040016000205460ff166127ad5760016095600085858581811061271357612713614997565b90506020020160208101906127289190614860565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061276257612762614997565b90506020020160208101906127779190614860565b6001600160a01b03167f46742f555939247f80b50a8ca895a561933c48bc9a06ccb0c812e97ac723d33f60405160405180910390a25b6127b8600182614a50565b90506126a7565b6127c7613d70565b6127cf613d70565b60006127e16040850160208601614d76565b60028111156127f2576127f26148fd565b036128c25760006128096060850160408601614860565b905060008061283961282160a0880160808901614da6565b60fa546001600160781b03918216916001911661124b565b9150915060405180606001604052808760000135815260200187602001803603810190612866919061487d565b81526001600160781b0384166020909101819052909450612895906001600160a01b038516903390309061356d565b60f9546128ba906001600160a01b03858116913391166001600160781b03851661356d565b5050506110b5565b60016128d46040850160208601614d76565b60028111156128e5576128e56148fd565b036129b45760006128fc6060850160408601614860565b905061290d368590038501856146ac565b91506020840160fd60006129296107433689900389018561487d565b81526020019081526020016000208181612943919061577b565b50506040516323b872dd60e01b8152336004820152306024820152606085013560448201526001600160a01b038216906323b872dd90606401600060405180830381600087803b15801561299657600080fd5b505af11580156129aa573d6000803e3d6000fd5b50505050506110b5565b60405162461bcd60e51b815260206004820152602760248201527f5261696c67756e4c6f6769633a2045524331313535206e6f742079657420737560448201527f70706f72746564000000000000000000000000000000000000000000000000006064820152608401610b05565b80516000819003612a31575050565b612a3d60106002614c6c565b81606654612a4b9190614a50565b1115612a5957612a59612f1c565b606680549082906000612a6c8385614a50565b909155506000905080805b6010811015612c6657600184901c91506000612a94600286615007565b600103612b1a57612aa983600187901c614d93565b9350612ae2607a8360108110612ac157612ac1614997565b0154888381518110612ad557612ad5614997565b60200260200101516111a7565b878581518110612af457612af4614997565b6020908102919091010152612b0a600182614a50565b9050612b17600186614a50565b94505b85811015612c40576000612b2f600188614d93565b821015612b615787612b42836001614a50565b81518110612b5257612b52614997565b60200260200101519050612b79565b606a8360108110612b7457612b74614997565b015490505b612b84600188614d93565b821480612b9a5750612b97600288614d93565b82145b15612bcf57878281518110612bb157612bb1614997565b6020026020010151607a8460108110612bcc57612bcc614997565b01555b612bdd84600188901c614d93565b9450612c02888381518110612bf457612bf4614997565b6020026020010151826111a7565b888681518110612c1457612c14614997565b6020908102919091010152612c2a600287614a50565b9550612c399050600282614a50565b9050612b1a565b829450836001612c509190614a50565b9550612c5f9050600182614a50565b9050612a77565b5084600081518110612c7a57612c7a614997565b60209081029190910181015160678190556069546000908152608a83526040808220928252919092529020805460ff191660011790555050505050565b6040805180820190915260008082526020820181905290815b8351811015612df0577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110612d0c57612d0c614997565b602002602001015110612d875760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610b05565b612ddc82612dd78860a00151846001612da09190614a50565b81518110612db057612db0614997565b6020026020010151878581518110612dca57612dca614997565b602002602001015161360b565b6136c9565b9150612de9600182614a50565b9050612cd0565b50612e19818660a00151600081518110612e0c57612e0c614997565b60200260200101516136c9565b9050612e4f612e2b8560000151613775565b856020015187602001518860400151858a606001518a604001518c60800151613923565b95945050505050565b6033546001600160a01b0316331461147d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b05565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606854606755600060668190556069805460019290612f3c908490614a50565b9091555050565b600054610100900460ff16612fae5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b61147d613aba565b600054610100900460ff166130215760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b61306b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615007565b606a5560006130ba7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615007565b905060005b60108110156131125781606a82601081106130dc576130dc614997565b015581607a82601081106130f2576130f2614997565b01556130fe82806111a7565b915061310b600182614a50565b90506130bf565b50606781905560688190556069546000908152608a6020908152604080832093835292905220805460ff19166001179055565b6000805b613157610120870187614d2c565b90508110156131f1576001606560006131746101608a018a614c78565b613182906020810190614d11565b61ffff1681526020019081526020016000206000888061012001906131a79190614d2c565b858181106131b7576131b7614997565b60209081029290920135835250810191909152604001600020805460ff19169115159190911790556131ea600182614a50565b9050613149565b507f781745c57906dc2f175fec80a9c691744c91c48a34a83672c41c2604774eb11f613221610160870187614c78565b61322f906020810190614d11565b61323d610120880188614d2c565b60405161324c93929190615802565b60405180910390a160005b613265610160870187614c78565b6132739060c0810190614d2c565b90508110156133485761328a610140870187614d2c565b8281811061329a5761329a614997565b905060200201358582866132ae9190614a50565b815181106132be576132be614997565b60209081029190910101526132d7610160870187614c78565b6132e59060c0810190614d2c565b828181106132f5576132f5614997565b9050602002810190613307919061585f565b61331090615875565b8361331b8387614a50565b8151811061332b5761332b614997565b6020908102919091010152613341600182614a50565b9050613257565b50613357610160860186614c78565b6133659060c0810190614d2c565b612e4f915084614a50565b60006133826040830160208401614d76565b6002811115613393576133936148fd565b0361347b5760006133aa6060830160408401614860565b90506000806133ed6133c260a0860160808701614da6565b60fa546001600160781b03918216916001916f0100000000000000000000000000000090041661124b565b90925090506134106001600160a01b03841685356001600160781b038516613b2e565b60f954613433906001600160a01b0385811691166001600160781b038416613b2e565b6040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf052849061346d9086359060208801908690869061597e565b60405180910390a150505050565b600161348d6040830160208401614d76565b600281111561349e5761349e6148fd565b036129b45760006134b56060830160408401614860565b6040516323b872dd60e01b81523060048201526001600160a01b0384358116602483015260608501356044830152919250908216906323b872dd90606401600060405180830381600087803b15801561350d57600080fd5b505af1158015613521573d6000803e3d6000fd5b50506040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf052849250613561915084359060208601906001906000906159bd565b60405180910390a15050565b6040516001600160a01b03808516602483015283166044820152606481018290526136059085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613b77565b50505050565b6040805180820190915260008082526020820152613627613e53565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050806136c15760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610b05565b505092915050565b60408051808201909152600080825260208201526136e5613e71565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa915081612e4f5760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c65640000000000000000000000000000006044820152606401610b05565b6040805180820190915260008082526020820152815115801561379a57506020820151155b156137b8575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476020850151800990508181146138aa5760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e0000000000000000006044820152606401610b05565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786602001516138ef9190615007565b613919907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47614d93565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e0820152600090613a22613e8f565b60006020826103008560086107d05a03fa905080613aa85760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610b05565b505115159a9950505050505050505050565b600054610100900460ff16613b255760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b61147d33612eb2565b6040516001600160a01b038316602482015260448101829052611b649084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016135a1565b6000613bcc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c5c9092919063ffffffff16565b805190915015611b645780806020019051810190613bea91906159ec565b611b645760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b05565b606061112d8484600085856001600160a01b0385163b613cbe5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b05565b600080866001600160a01b03168587604051613cda9190615a09565b60006040518083038185875af1925050503d8060008114613d17576040519150601f19603f3d011682016040523d82523d6000602084013e613d1c565b606091505b5091509150613d2c828286613d37565b979650505050505050565b60608315613d46575081611130565b825115613d565782518084602001fd5b8160405162461bcd60e51b8152600401610b059190615a1b565b604080516060808201835260008083528351918201845280825260208281018290529382015290918201905b8152600060209091015290565b6040518060400160405280613d9c613e53565b6040518060c0016040528060608152602001613deb604051806040016040528060008152602001600081525090565b8152602001613df8613ead565b8152602001613e05613ead565b8152602001613e12613ead565b8152602001606081525090565b6040518060a00160405280613e32613e71565b81526000602082018190526040820152606080820181905260809091015290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280613ec0613ed2565b8152602001613ecd613ed2565b905290565b60405180604001604052806002906020820280368337509192915050565b60008060208385031215613f0357600080fd5b823567ffffffffffffffff80821115613f1b57600080fd5b818501915085601f830112613f2f57600080fd5b813581811115613f3e57600080fd5b86602061012083028501011115613f5457600080fd5b60209290920196919550909350505050565b600060208284031215613f7857600080fd5b5035919050565b600060208284031215613f9157600080fd5b813567ffffffffffffffff811115613fa857600080fd5b8201610220818503121561113057600080fd5b8015158114610cc957600080fd5b600080600060608486031215613fde57600080fd5b83359250602084013591506040840135613ff781613fbb565b809150509250925092565b60006020828403121561401457600080fd5b813567ffffffffffffffff81111561402b57600080fd5b820160e0818503121561113057600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156140765761407661403d565b60405290565b60405160c0810167ffffffffffffffff811182821017156140765761407661403d565b6040516060810167ffffffffffffffff811182821017156140765761407661403d565b60405160a0810167ffffffffffffffff811182821017156140765761407661403d565b6040516080810167ffffffffffffffff811182821017156140765761407661403d565b604051601f8201601f1916810167ffffffffffffffff811182821017156141315761413161403d565b604052919050565b600082601f83011261414a57600080fd5b813567ffffffffffffffff8111156141645761416461403d565b614177601f8201601f1916602001614108565b81815284602083860101111561418c57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156141bb57600080fd5b6141c3614053565b9050813581526020820135602082015292915050565b600082601f8301126141ea57600080fd5b6040516040810181811067ffffffffffffffff8211171561420d5761420d61403d565b806040525080604084018581111561422457600080fd5b845b8181101561423e578035835260209283019201614226565b509195945050505050565b60006080828403121561425b57600080fd5b614263614053565b905061426f83836141d9565b815261427e83604084016141d9565b602082015292915050565b600067ffffffffffffffff8211156142a3576142a361403d565b5060051b60200190565b600082601f8301126142be57600080fd5b813560206142d36142ce83614289565b614108565b82815260069290921b840181019181810190868411156142f257600080fd5b8286015b848110156143165761430888826141a9565b8352918301916040016142f6565b509695505050505050565b6000610100828403121561433457600080fd5b50919050565b600082601f83011261434b57600080fd5b8135602061435b6142ce83614289565b82815260059290921b8401810191818101908684111561437a57600080fd5b8286015b84811015614316578035835291830191830161437e565b600080600061014084860312156143ab57600080fd5b833567ffffffffffffffff808211156143c357600080fd5b9085019061020082880312156143d857600080fd5b6143e061407c565b8235828111156143ef57600080fd5b6143fb89828601614139565b82525061440b88602085016141a9565b602082015261441d8860608501614249565b604082015261442f8860e08501614249565b6060820152614442886101608501614249565b60808201526101e08301358281111561445a57600080fd5b614466898286016142ad565b60a083015250945061447b8760208801614321565b935061012086013591508082111561449257600080fd5b5061449f8682870161433a565b9150509250925092565b6000806000606084860312156144be57600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156144e357600080fd5b84016102008187031215613ff757600080fd5b6000806040838503121561450957600080fd5b50508035926020909101359150565b80356001600160781b038116811461452f57600080fd5b919050565b60008060006060848603121561454957600080fd5b833570ffffffffffffffffffffffffffffffffff8116811461456a57600080fd5b9250602084013561457a81613fbb565b915061458860408501614518565b90509250925092565b60008083601f8401126145a357600080fd5b50813567ffffffffffffffff8111156145bb57600080fd5b6020830191508360208260051b85010111156145d657600080fd5b9250929050565b600080602083850312156145f057600080fd5b823567ffffffffffffffff81111561460757600080fd5b61461385828601614591565b90969095509350505050565b600060a0828403121561433457600080fd5b60038110610cc957600080fd5b6001600160a01b0381168114610cc957600080fd5b803561452f8161463e565b60006060828403121561467057600080fd5b61467861409f565b9050813561468581614631565b815260208201356146958161463e565b806020830152506040820135604082015292915050565b600060a082840312156146be57600080fd5b6146c661409f565b823581526146d7846020850161465e565b60208201526146e860808401614518565b60408201529392505050565b60005b8381101561470f5781810151838201526020016146f7565b50506000910152565b600081518084526147308160208601602086016146f4565b601f01601f19169290920160200192915050565b8060005b6002811015613605578151845260209384019390910190600101614748565b614772828251614744565b6020810151611b646040840182614744565b60006020808352835161020080838601526147a3610220860183614718565b91508286015160406147c18188018380518252602090810151910152565b8088015191506147d46080880183614767565b606088015191506147e9610100880183614767565b608088015191506147fe610180880183614767565b60a0880151878503601f190193880193909352825180855292850193850192600092505b808310156148535761483f84865180518252602090810151910152565b938501939281019260019290920191614822565b5091979650505050505050565b60006020828403121561487257600080fd5b81356111308161463e565b60006060828403121561488f57600080fd5b611130838361465e565b600080600080600060a086880312156148b157600080fd5b85356148bc8161463e565b94506148ca60208701614518565b93506148d860408701614518565b92506060860135915060808601356148ef8161463e565b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60038110610cc957634e487b7160e01b600052602160045260246000fd5b6060810161493e85614913565b9381526001600160a01b0392909216602083015260409091015290565b60008060006060848603121561497057600080fd5b61497984614518565b925061498760208501614518565b9150604084013590509250925092565b634e487b7160e01b600052603260045260246000fd5b6000608082840312156149bf57600080fd5b6149c7614053565b83601f8401126149d657600080fd5b6040516060810181811067ffffffffffffffff821117156149f9576149f961403d565b604052806060850186811115614a0e57600080fd5b855b81811015614a28578035835260209283019201614a10565b50918352503560208201529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156110b5576110b5614a3a565b8051614a6e81614913565b82526020818101516001600160a01b031690830152604090810151910152565b60008151808452602080850194508084016000805b84811015614aec578251805189845b6003811015614acf57825182529187019190870190600101614ab2565b505050840151606089015260809097019691830191600101614aa3565b50959695505050505050565b60006080808301878452602087818601526040838187015282885180855260a094508488019150838a0160005b82811015614b645781518051855286810151614b4388870182614a63565b508501516001600160781b0316848901529286019290850190600101614b25565b5050508681036060880152614b798189614a8e565b9b9a5050505050505050505050565b600181815b80851115614bc3578160001904821115614ba957614ba9614a3a565b80851615614bb657918102915b93841c9390800290614b8d565b509250929050565b600082614bda575060016110b5565b81614be7575060006110b5565b8160018114614bfd5760028114614c0757614c23565b60019150506110b5565b60ff841115614c1857614c18614a3a565b50506001821b6110b5565b5060208310610133831016604e8410600b8410161715614c46575081810a6110b5565b614c508383614b88565b8060001904821115614c6457614c64614a3a565b029392505050565b60006111308383614bcb565b6000823560de19833603018112614c8e57600080fd5b9190910192915050565b803568ffffffffffffffffff8116811461452f57600080fd5b600060208284031215614cc357600080fd5b61113082614c98565b803567ffffffffffffffff8116811461452f57600080fd5b600060208284031215614cf657600080fd5b61113082614ccc565b803561ffff8116811461452f57600080fd5b600060208284031215614d2357600080fd5b61113082614cff565b6000808335601e19843603018112614d4357600080fd5b83018035915067ffffffffffffffff821115614d5e57600080fd5b6020019150600581901b36038213156145d657600080fd5b600060208284031215614d8857600080fd5b813561113081614631565b818103818111156110b5576110b5614a3a565b600060208284031215614db857600080fd5b61113082614518565b6000808335601e19843603018112614dd857600080fd5b830160208101925035905067ffffffffffffffff811115614df857600080fd5b8060051b36038213156145d657600080fd5b6000808335601e19843603018112614e2157600080fd5b830160208101925035905067ffffffffffffffff811115614e4157600080fd5b8036038213156145d657600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015614f2e578385038a52823560fe19893603018112614eb4578283fd5b8801610100608080838937828101359088015260a0808301359088015260c0614edf81840184614e0a565b83838b0152614ef1848b018284614e50565b935050505060e0614f0481840184614e0a565b9350888303828a0152614f18838583614e50565b9d8a019d98505050938701935050600101614e94565b509298975050505050505050565b6020815261ffff614f4c83614cff565b16602082015268ffffffffffffffffff614f6860208401614c98565b16604082015260006040830135614f7e81614631565b614f8781614913565b8060608401525067ffffffffffffffff614fa360608501614ccc565b166080830152614fb560808401614653565b6001600160a01b03811660a08401525060a083013560c0830152614fdc60c0840184614dc1565b60e080850152612e4f61010085018284614e79565b634e487b7160e01b600052601260045260246000fd5b60008261501657615016614ff1565b500690565b6000610100828403121561502e57600080fd5b61503661409f565b61504084846141a9565b815261504f8460408501614249565b60208201526146e88460c085016141a9565b600181811c9082168061507557607f821691505b60208210810361433457634e487b7160e01b600052602260045260246000fd5b601f821115611b6457600081815260208120601f850160051c810160208610156150bc5750805b601f850160051c820191505b81811015611a41578281556001016150c8565b67ffffffffffffffff8311156150f3576150f361403d565b615107836151018354615061565b83615095565b6000601f84116001811461513b57600085156151235750838201355b600019600387901b1c1916600186901b178355615195565b600083815260209020601f19861690835b8281101561516c578685013582556020948501946001909201910161514c565b50868210156151895760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8160005b60028110156151bd578135838201556020909101906001016151a0565b50506040820160005b60028082106151d55750613605565b8235848301909101556020909101906001016151c6565b6000808335601e1984360301811261520357600080fd5b83018035915067ffffffffffffffff82111561521e57600080fd5b6020019150600681901b36038213156145d657600080fd5b6801000000000000000083111561524f5761524f61403d565b8054838255808410156152d65760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316831461529057615290614a3a565b80861686146152a1576152a1614a3a565b5060008381526020812086831b81019084841b015b808210156152d15782825582848301556002820191506152b6565b505050505b5060008181526020812083915b85811015611a4157823582556020830135600183015560409290920191600291909101906001016152e3565b8135601e1983360301811261532357600080fd5b8201803567ffffffffffffffff81111561533c57600080fd5b60208201915080360382131561535157600080fd5b61535c8183856150db565b50506020820135600182015560408201356002820155615382606083016003830161519c565b61539260e083016007830161519c565b6153a36101608301600b830161519c565b6153b16101e08301836151ec565b6136058183600f8601615236565b6040818337604080820160408401375050565b81835260208301925060008160005b84811015615409578135865260208083013590870152604095860195909101906001016153e1565b5093949350505050565b83815282602082015260606040820152600061542f8384614e0a565b610200606085015261544661026085018284614e50565b60208601356080860152604086013560a086015291506154639050565b61547360c08401606086016153bf565b615484610140840160e086016153bf565b6154966101c0840161016086016153bf565b6101e0840135601e198536030181126154ae57600080fd5b840160208101903567ffffffffffffffff8111156154cb57600080fd5b8060061b36038213156154dd57600080fd5b848303605f19016102408601526154f58382846153d2565b98975050505050505050565b60408101818360005b600281101561552957815183526020928301929091019060010161550a565b50505092915050565b60006020828403121561554457600080fd5b5051919050565b70ffffffffffffffffffffffffffffffffff82811682821681810283169291811582850482141761552957615529614a3a565b600070ffffffffffffffffffffffffffffffffff808416806155a2576155a2614ff1565b92169190910492915050565b70ffffffffffffffffffffffffffffffffff8281168282160390808211156155d8576155d8614a3a565b5092915050565b6001600160781b038281168282160390808211156155d8576155d8614a3a565b6000823561021e19833603018112614c8e57600080fd5b60608101818360005b600381101561552957815183526020928301929091019060010161561f565b606081016110b58284614a63565b60006001600160781b03808416806155a2576155a2614ff1565b60006080808301878452602087818601526040838187015282885180855260a094508488019150838a0160005b828110156156af57815184529285019290850190600101615693565b5050506060878203818901528189518084528584019150858160051b850101868c0160005b8381101561576657868303601f1901855281518051610100908560005b600481101561570e5782518252918d0191908d01906001016156f1565b5050508a8201518d860152898201518c860152878201518160c087015261573782870182614718565b9150508c820151915084810360e08601526157528183614718565b968b019694505050908801906001016156d4565b50909f9e505050505050505050505050505050565b813561578681614631565b61578f81614913565b815460ff821691508160ff19821617835560208401356157ae8161463e565b74ffffffffffffffffffffffffffffffffffffffff008160081b16837fffffffffffffffffffffff000000000000000000000000000000000000000000841617178455505050604082013560018201555050565b61ffff841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561584557600080fd5b8260051b8085606085013791909101606001949350505050565b6000823560fe19833603018112614c8e57600080fd5b6000610100823603121561588857600080fd5b6158906140c2565b36601f84011261589f57600080fd5b6158a76140e5565b8060808501368111156158b957600080fd5b855b818110156158d35780358452602093840193016158bb565b509083523560208301525060a0830135604082015260c083013567ffffffffffffffff8082111561590357600080fd5b61590f36838701614139565b606084015260e085013591508082111561592857600080fd5b5061593536828601614139565b60808301525092915050565b803561594c81614631565b61595581614913565b825260208101356159658161463e565b6001600160a01b03166020830152604090810135910152565b6001600160a01b038516815260c0810161599b6020830186615941565b6001600160781b03808516608084015280841660a08401525095945050505050565b6001600160a01b038516815260c081016159da6020830186615941565b608082019390935260a0015292915050565b6000602082840312156159fe57600080fd5b815161113081613fbb565b60008251614c8e8184602087016146f4565b602081526000611130602083018461471856fea26469706673582212208d33acca7820015a833061625aad2c746176a8ab164ae5c39eee03ff5e2e727b64736f6c63430008110033";

type RailgunSmartWalletStubConstructorParams =
  | [
      linkLibraryAddresses: RailgunSmartWalletStubLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RailgunSmartWalletStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RailgunSmartWalletStub__factory extends ContractFactory {
  constructor(...args: RailgunSmartWalletStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RailgunSmartWalletStub__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RailgunSmartWalletStubLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0d67abb2a30631c14ae5d39aeb2a4b8972\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RailgunSmartWalletStub> {
    return super.deploy(overrides || {}) as Promise<RailgunSmartWalletStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RailgunSmartWalletStub {
    return super.attach(address) as RailgunSmartWalletStub;
  }
  override connect(signer: Signer): RailgunSmartWalletStub__factory {
    return super.connect(signer) as RailgunSmartWalletStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RailgunSmartWalletStubInterface {
    return new utils.Interface(_abi) as RailgunSmartWalletStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RailgunSmartWalletStub {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RailgunSmartWalletStub;
  }
}

export interface RailgunSmartWalletStubLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
  ["contracts/logic/Poseidon.sol:PoseidonT4"]: string;
}
