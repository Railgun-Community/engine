/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RailgunLogicStub,
  RailgunLogicStubInterface,
} from "../../../../contracts/teststubs/logic/RailgunLogicStub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "shieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unshieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftFee",
        type: "uint256",
      },
    ],
    name: "FeeChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "treeNumber",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "nullifier",
        type: "bytes32[]",
      },
    ],
    name: "Nullified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentPreimage[]",
        name: "commitments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32[3]",
            name: "encryptedBundle",
            type: "bytes32[3]",
          },
          {
            internalType: "bytes32",
            name: "shieldKey",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct ShieldCiphertext[]",
        name: "shieldCiphertext",
        type: "tuple[]",
      },
    ],
    name: "Shield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "hash",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32[4]",
            name: "ciphertext",
            type: "bytes32[4]",
          },
          {
            internalType: "bytes32",
            name: "blindedSenderViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blindedReceiverViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "annotationData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "memo",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentCiphertext[]",
        name: "ciphertext",
        type: "tuple[]",
      },
    ],
    name: "Transact",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenData",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Unshield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_initialArrayLengths",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitmentsStartOffset",
        type: "uint256",
      },
    ],
    name: "accumulateAndNullifyTransactionStub",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32[4]",
            name: "ciphertext",
            type: "bytes32[4]",
          },
          {
            internalType: "bytes32",
            name: "blindedSenderViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blindedReceiverViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "annotationData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "memo",
            type: "bytes",
          },
        ],
        internalType: "struct CommitmentCiphertext[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "addVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "changeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkSafetyVectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "doubleInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forceNewTree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint136",
        name: "_amount",
        type: "uint136",
      },
      {
        internalType: "bool",
        name: "_isInclusive",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "_feeBP",
        type: "uint120",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData",
        name: "_tokenData",
        type: "tuple",
      },
    ],
    name: "getTokenID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_commitmentPreimage",
        type: "tuple",
      },
    ],
    name: "hashCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initializeRailgunLogic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEventBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "removeVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setNullifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snarkSafetyVector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "sumCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlocklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIDMapping",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenSubID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "transferTokenInStub",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "transferTokenOutStub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unshieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "validateCommitmentPreimage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "validateTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061508d806100206000396000f3fe608060405234801561001057600080fd5b506004361061030a5760003560e01c8063715018a61161019c578063b14f2a39116100ee578063e829558811610097578063f19ea90311610071578063f19ea90314610762578063f2fde38b14610790578063f71a55f8146107a357600080fd5b8063e829558814610734578063ec73295914610747578063ee9907831461074f57600080fd5b8063cc1f73fd116100c8578063cc1f73fd14610705578063cd3efe0614610718578063dc7c9a1f1461072157600080fd5b8063b14f2a391461067a578063b8ceaef21461068d578063c718dbda146106d757600080fd5b80639071adc01161015057806393e899101161012a57806393e8991014610632578063a33952a914610654578063ab63e69c1461066757600080fd5b80639071adc0146105f6578063919698d6146105ff57806392d3c7a41461061f57600080fd5b80637b12ae83116101815780637b12ae83146105a2578063815b534f146105c25780638da5cb5b146105e557600080fd5b8063715018a61461058757806371c534551461058f57600080fd5b80632eb4a7ab116102605780634cfff4f61161020957806361d027b3116101e357806361d027b314610540578063665033151461056b5780636cefafaa1461057457600080fd5b80634cfff4f6146104e257806359bb61991461051a578063617e1b171461052d57600080fd5b806338bf282e1161023a57806338bf282e1461049457806343b3b065146104a757806343c88730146104af57600080fd5b80632eb4a7ab146104655780632ebfe12a1461046e5780632ec0f3591461048157600080fd5b80630c9c0c8d116102c257806318610eb21161029c57806318610eb21461040757806328ec65f21461043f57806328f89c3a1461045257600080fd5b80630c9c0c8d14610399578063129458f4146103c157806317476891146103f457600080fd5b8063053ed12a116102f3578063053ed12a146103545780630804a4ee1461037a5780630be4f4221461038257600080fd5b806301c377901461030f578063039b8d231461033f575b600080fd5b60fa54610322906001600160781b031681565b6040516001600160781b0390911681526020015b60405180910390f35b61035261034d3660046136c4565b6107b6565b005b60fa54610322906f0100000000000000000000000000000090046001600160781b031681565b6103526107ca565b61038b60665481565b604051908152602001610336565b6103ac6103a7366004613728565b61085b565b60408051928352602083019190915201610336565b6103e46103cf366004613728565b60fc6020526000908152604090205460ff1681565b6040519015158152602001610336565b6103e461040236600461375a565b6108a5565b6103526104153660046137a5565b60009283526065602090815260408085209385529290529120805460ff1916911515919091179055565b61035261044d3660046137de565b610c4a565b61038b6104603660046137f0565b610c53565b61038b60675481565b6103e461047c366004613b7d565b610caa565b61035261048f366004613c91565b610ccf565b61038b6104a2366004613cde565b610d3f565b610352610de3565b6104c26104bd366004613d00565b610ded565b604080516001600160781b03938416815292909116602083015201610336565b6103526104f03660046137a5565b6000928352608a602090815260408085209385529290529120805460ff1916911515919091179055565b61038b610528366004613da9565b610e7f565b6103e461053b3660046137de565b610ef4565b60f954610553906001600160a01b031681565b6040516001600160a01b039091168152602001610336565b61038b60695481565b610352610582366004613728565b610fea565b61035261100d565b61038b61059d366004613e46565b61101f565b6105b56105b0366004613cde565b6110d3565b6040516103369190613f1e565b6103e46105d0366004613ffa565b60956020526000908152604090205460ff1681565b6033546001600160a01b0316610553565b61038b60fb5481565b61061261060d3660046137de565b611398565b6040516103369190614076565b61038b61062d3660046140ab565b6113dc565b6106456106403660046140c7565b61143a565b60405161033693929190614115565b6103526106623660046136c4565b6114f6565b610352610675366004613da9565b6116e1565b610352610688366004613ffa565b611801565b6106c861069b366004613728565b60fd602052600090815260409020805460019091015460ff82169161010090046001600160a01b03169083565b60405161033693929190614222565b6103e46106e5366004613cde565b608a60209081526000928352604080842090915290825290205460ff1681565b61035261071336600461424c565b61188a565b61038b60fe5481565b61035261072f366004613728565b611a9d565b61038b610742366004613728565b611abd565b61038b611ad4565b6103e461075d36600461375a565b611b21565b6103e4610770366004613cde565b606560209081526000928352604080842090915290825290205460ff1681565b61035261079e366004613ffa565b612021565b6103526107b1366004613da9565b6120ae565b6107c385858585856114f6565b5050505050565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450805460ff1916600117905533600090815260fc6020526040902054806108585760405162461bcd60e51b815260206004820152601c60248201527f5261696c67756e4c6f6769633a20556e7361666520766563746f72730000000060448201526064015b60405180910390fd5b50565b60008061086a60106002614382565b83606654610878919061438e565b11156108965760695461088c90600161438e565b9360009350915050565b60695460665491509150915091565b60006108b56101608301836143a1565b6108c69060408101906020016143da565b68ffffffffffffffffff163a10156108e057506000919050565b60006108f06101608401846143a1565b6109019060a0810190608001613ffa565b6001600160a01b03161415801561093f5750336109226101608401846143a1565b6109339060a0810190608001613ffa565b6001600160a01b031614155b1561094c57506000919050565b4661095b6101608401846143a1565b61096c90608081019060600161440d565b67ffffffffffffffff161461098357506000919050565b608a60006109956101608501856143a1565b6109a390602081019061443a565b61ffff16815260208082019290925260409081016000908120610100860135825290925290205460ff166109d957506000919050565b60005b6109ea610120840184614455565b9050811015610a855760656000610a056101608601866143a1565b610a1390602081019061443a565b61ffff168152602001908152602001600020600084806101200190610a389190614455565b84818110610a4857610a4861449f565b602090810292909201358352508101919091526040016000205460ff1615610a735750600092915050565b610a7e60018261438e565b90506109dc565b506000610a966101608401846143a1565b610aa79060608101906040016144b5565b6002811115610ab857610ab8614017565b14610c00576001610acd610140840184614455565b610ad89291506144d2565b610ae66101608401846143a1565b610af49060c0810190614455565b905014610b0357506000919050565b60006002610b156101608501856143a1565b610b269060608101906040016144b5565b6002811115610b3757610b37614017565b03610b93576040805160608101909152338152610b8c9060208101610b653687900387016101a088016140ab565b8152602001610b7c610220870161020088016144e5565b6001600160781b0316905261101f565b9050610bac565b610ba961059d3685900385016101808601613e46565b90505b610bba610140840184614455565b6001610bca610140870187614455565b610bd59291506144d2565b818110610be457610be461449f565b905060200201358114610bfa5750600092915050565b50610c3b565b610c0e610140830183614455565b9050610c1e6101608401846143a1565b610c2c9060c0810190614455565b905014610c3b57506000919050565b610c4482611b21565b92915050565b610858816121d1565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182604051602001610c87919061467b565b6040516020818303038152906040528051906020012060001c610c449190614746565b6000610cc584610cbf3686900386018661475a565b8461243c565b90505b9392505050565b610cd76125dd565b600083815260c76020908152604080832085845290915290208190610cfc8282614a4d565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb23838383604051610d3293929190614b51565b60405180910390a1505050565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e566091610da291600401614c3f565b602060405180830381865af4158015610dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc89190614c70565b610deb612637565b565b6000808481808615610e3657612710610e0f6001600160781b03881685614c89565b610e199190614cbc565b610e239084614cec565b9150610e2f8284614cec565b9050610e72565b82915081610e4687612710614d1d565b6001600160781b0316610e5b84612710614c89565b610e659190614cbc565b610e6f9190614cec565b90505b9097909650945050505050565b600080805b83811015610eec57848482818110610e9e57610e9e61449f565b9050602002810190610eb09190614d3d565b610ebf906101608101906143a1565b610ecd9060c0810190614455565b610ed891508361438e565b9150610ee560018261438e565b9050610e84565b509392505050565b6000610f0660a08301608084016144e5565b6001600160781b0316600003610f1e57506000919050565b60956000610f326060850160408601613ffa565b6001600160a01b0316815260208101919091526040016000205460ff1615610f5c57506000919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001823510610f8c57506000919050565b6001610f9e60408401602085016144b5565b6002811115610faf57610faf614017565b148015610fd55750610fc760a08301608084016144e5565b6001600160781b0316600114155b15610fe257506000919050565b506001919050565b610ff26125dd565b600090815260fc60205260409020805460ff19166001179055565b6110156125dd565b610deb600061265e565b600073__$0d67abb2a30631c14ae5d39aeb2a4b8972$__635a53025d60405180606001604052808560000151815260200161105d86602001516113dc565b815260200185604001516001600160781b031660001b8152506040518263ffffffff1660e01b81526004016110929190614d54565b602060405180830381865af41580156110af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c449190614c70565b6110db613554565b600083815260c76020908152604080832085845290915290819020815160c0810190925280548290829061110e906147a0565b80601f016020809104026020016040519081016040528092919081815260200182805461113a906147a0565b80156111875780601f1061115c57610100808354040283529160200191611187565b820191906000526020600020905b81548152906001019060200180831161116a57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b8154815260200190600101908083116111d457505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161120a575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b81548152602001906001019080831161124e57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116112845750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b8154815260200190600101908083116112c857505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116112fe575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b8282101561138957838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611343565b50505091525090949350505050565b6113d3604080516060808201835260008083528351918201845280825260208281018290529382015290918201908152600060209091015290565b610c44826126c8565b600080825160028111156113f2576113f2614017565b036114085750602001516001600160a01b031690565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000182604051602001610c879190614d7c565b600060608060008567ffffffffffffffff81111561145a5761145a61382b565b604051908082528060200260200182016040528015611483578160200160208202803683370190505b50905060008667ffffffffffffffff8111156114a1576114a161382b565b6040519080825280602002602001820160405280156114da57816020015b6114c76135b7565b8152602001906001900390816114bf5790505b5090506114e988838884612924565b9891975095509350505050565b600054610100900460ff16158080156115165750600054600160ff909116105b806115305750303b158015611530575060005460ff166001145b6115a25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161084f565b6000805460ff1916600117905580156115c5576000805461ff0019166101001790555b6115cd612b4f565b6115d5612bc2565b6115de86611801565b6115e985858561188a565b6115f282612021565b60fc6020527f18a261e1efd282dd636becf59b85995514ab34d1c1c9a3e1128aac786b5472de8054600160ff1991821681179092557f35cc25be27a7e44e9e6eb23f103c8980fe6d01e7b6e981c2c07b23911ac79e8b805482168317905573cc29dbf69896278a0c6b886ef8cc30a56fa6164a6000527f7e1bfa3bd01233beed03b737790a265ae14e11664e22f82316c6f65a13e15c8c8054909116909117905580156116d9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6116e96125dd565b60005b818110156117fc576095600084848481811061170a5761170a61449f565b905060200201602081019061171f9190613ffa565b6001600160a01b0316815260208101919091526040016000205460ff16156117ea57609560008484848181106117575761175761449f565b905060200201602081019061176c9190613ffa565b6001600160a01b031681526020810191909152604001600020805460ff1916905582828281811061179f5761179f61449f565b90506020020160208101906117b49190613ffa565b6001600160a01b03167f2ef13bd1aff17b0f9c85afaf228e84266c8394d9d381735e83fe23f607113e2e60405160405180910390a25b6117f560018261438e565b90506116ec565b505050565b6118096125dd565b60f9546001600160a01b038281169116146108585760f980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f1ac54af2084ba0e4b86b7bc54b978ce7dd4ca046d3dec89d7c8963873820c0bb9060200160405180910390a150565b6118926125dd565b60fa546001600160781b0384811691161415806118d0575060fa546001600160781b038381166f010000000000000000000000000000009092041614155b806118dd575060fb548114155b156117fc576118ef6002612710614d8a565b6001600160781b0316836001600160781b031611156119755760405162461bcd60e51b8152602060048201526024808201527f5261696c67756e4c6f6769633a20536869656c6420466565206578636565647360448201527f2035302500000000000000000000000000000000000000000000000000000000606482015260840161084f565b6119826002612710614d8a565b6001600160781b0316826001600160781b03161115611a095760405162461bcd60e51b815260206004820152602660248201527f5261696c67756e4c6f6769633a20556e736869656c642046656520657863656560448201527f6473203530250000000000000000000000000000000000000000000000000000606482015260840161084f565b60fa80546001600160781b038581167fffff00000000000000000000000000000000000000000000000000000000000090921682176f010000000000000000000000000000009186169182021790925560fb8390556040805191825260208201929092529081018290527f472cfc031d19bcc54db01976ce486cc12dc3d489e6adced1eb5a782cd55cfdf290606001610d32565b611aa56125dd565b600090815260fc60205260409020805460ff19169055565b606a8160108110611acd57600080fd5b0154905081565b611b1e7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff614746565b81565b600080611b32610120840184614455565b915060009050611b46610140850185614455565b600084815260c760209081526040808320848452909152808220815160c0810190925280549395509193509182908290611b7f906147a0565b80601f0160208091040260200160405190810160405280929190818152602001828054611bab906147a0565b8015611bf85780601f10611bcd57610100808354040283529160200191611bf8565b820191906000526020600020905b815481529060010190602001808311611bdb57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b815481526020019060010190808311611c4557505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611c7b575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b815481526020019060010190808311611cbf57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611cf55750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b815481526020019060010190808311611d3957505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611d6f575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015611dfa57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190611db4565b50505091525050602081015151909150600003611e595760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f74207365740000000000000000000000604482015260640161084f565b600082611e6785600261438e565b611e71919061438e565b67ffffffffffffffff811115611e8957611e8961382b565b604051908082528060200260200182016040528015611eb2578160200160208202803683370190505b50905085610100013560001c81600081518110611ed157611ed161449f565b6020908102919091010152611eed6104606101608801886143a1565b81600181518110611f0057611f0061449f565b60200260200101818152505060005b84811015611f7857611f25610120880188614455565b82818110611f3557611f3561449f565b6020029190910135905082611f4b83600261438e565b81518110611f5b57611f5b61449f565b6020908102919091010152611f7160018261438e565b9050611f0f565b5060005b83811015611ff057611f92610140880188614455565b82818110611fa257611fa261449f565b602002919091013590508282611fb988600261438e565b611fc3919061438e565b81518110611fd357611fd361449f565b6020908102919091010152611fe960018261438e565b9050611f7c565b506000611ffe838884610caa565b905061deac193201612017575060019695505050505050565b9695505050505050565b6120296125dd565b6001600160a01b0381166120a55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161084f565b6108588161265e565b6120b66125dd565b60005b818110156117fc57609560008484848181106120d7576120d761449f565b90506020020160208101906120ec9190613ffa565b6001600160a01b0316815260208101919091526040016000205460ff166121bf576001609560008585858181106121255761212561449f565b905060200201602081019061213a9190613ffa565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558282828181106121745761217461449f565b90506020020160208101906121899190613ffa565b6001600160a01b03167f46742f555939247f80b50a8ca895a561933c48bc9a06ccb0c812e97ac723d33f60405160405180910390a25b6121ca60018261438e565b90506120b9565b60006121e360408301602084016144b5565b60028111156121f4576121f4614017565b036122dc57600061220b6060830160408401613ffa565b905060008061224e61222360a08601608087016144e5565b60fa546001600160781b03918216916001916f01000000000000000000000000000000900416610ded565b90925090506122716001600160a01b03841685356001600160781b038516612d51565b60f954612294906001600160a01b0385811691166001600160781b038416612d51565b6040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf05284906122ce90863590602088019086908690614de1565b60405180910390a150505050565b60016122ee60408301602084016144b5565b60028111156122ff576122ff614017565b036123ce5760006123166060830160408401613ffa565b6040516323b872dd60e01b81523060048201526001600160a01b0384358116602483015260608501356044830152919250908216906323b872dd90606401600060405180830381600087803b15801561236e57600080fd5b505af1158015612382573d6000803e3d6000fd5b50506040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf0528492506123c291508435906020860190600190600090614e20565b60405180910390a15050565b60405162461bcd60e51b815260206004820152602760248201527f5261696c67756e4c6f6769633a2045524331313535206e6f742079657420737560448201527f70706f7274656400000000000000000000000000000000000000000000000000606482015260840161084f565b6040805180820190915260008082526020820181905290815b8351811015612575577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018482815181106124915761249161449f565b60200260200101511061250c5760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f4400000000000000000000000000000000000000000000000000000000000000606482015260840161084f565b6125618261255c8860a00151846001612525919061438e565b815181106125355761253561449f565b602002602001015187858151811061254f5761254f61449f565b6020026020010151612dfa565b612eb8565b915061256e60018261438e565b9050612455565b5061259e818660a001516000815181106125915761259161449f565b6020026020010151612eb8565b90506125d46125b08560000151612f64565b856020015187602001518860400151858a606001518a604001518c60800151613112565b95945050505050565b6033546001600160a01b03163314610deb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161084f565b60685460675560006066819055606980546001929061265790849061438e565b9091555050565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612703604080516060808201835260008083528351918201845280825260208281018290529382015290918201908152600060209091015290565b61273e604080516060808201835260008083528351918201845280825260208281018290529382015290918201908152600060209091015290565b600061275060408501602086016144b5565b600281111561276157612761614017565b036128315760006127786060850160408601613ffa565b90506000806127a861279060a08801608089016144e5565b60fa546001600160781b039182169160019116610ded565b91509150604051806060016040528087600001358152602001876020018036038101906127d591906140ab565b81526001600160781b0384166020909101819052909450612804906001600160a01b03851690339030906132a9565b60f954612829906001600160a01b03858116913391166001600160781b0385166132a9565b505050610c44565b600161284360408501602086016144b5565b600281111561285457612854614017565b036123ce57600061286b6060850160408601613ffa565b905061287c36859003850185613e46565b91506020840160fd600061289861062d368990038901856140ab565b815260200190815260200160002081816128b29190614e4f565b50506040516323b872dd60e01b8152336004820152306024820152606085013560448201526001600160a01b038216906323b872dd90606401600060405180830381600087803b15801561290557600080fd5b505af1158015612919573d6000803e3d6000fd5b505050505092915050565b6000805b612936610120870187614455565b90508110156129d0576001606560006129536101608a018a6143a1565b61296190602081019061443a565b61ffff1681526020019081526020016000206000888061012001906129869190614455565b858181106129965761299661449f565b60209081029290920135835250810191909152604001600020805460ff19169115159190911790556129c960018261438e565b9050612928565b507f781745c57906dc2f175fec80a9c691744c91c48a34a83672c41c2604774eb11f612a006101608701876143a1565b612a0e90602081019061443a565b612a1c610120880188614455565b604051612a2b93929190614ed6565b60405180910390a160005b612a446101608701876143a1565b612a529060c0810190614455565b9050811015612b2757612a69610140870187614455565b82818110612a7957612a7961449f565b90506020020135858286612a8d919061438e565b81518110612a9d57612a9d61449f565b6020908102919091010152612ab66101608701876143a1565b612ac49060c0810190614455565b82818110612ad457612ad461449f565b9050602002810190612ae69190614f33565b612aef90614f49565b83612afa838761438e565b81518110612b0a57612b0a61449f565b6020908102919091010152612b2060018261438e565b9050612a36565b50612b366101608601866143a1565b612b449060c0810190614455565b6125d491508461438e565b600054610100900460ff16612bba5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161084f565b610deb6132e7565b600054610100900460ff16612c2d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161084f565b612c777f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff614746565b606a556000612cc67f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff614746565b905060005b6010811015612d1e5781606a8260108110612ce857612ce861449f565b015581607a8260108110612cfe57612cfe61449f565b0155612d0a8280610d3f565b9150612d1760018261438e565b9050612ccb565b50606781905560688190556069546000908152608a6020908152604080832093835292905220805460ff19166001179055565b6040516001600160a01b0383166024820152604481018290526117fc9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261335b565b6040805180820190915260008082526020820152612e166135eb565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080612eb05760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161084f565b505092915050565b6040805180820190915260008082526020820152612ed4613609565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa9150816125d45760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c6564000000000000000000000000000000604482015260640161084f565b60408051808201909152600080825260208201528151158015612f8957506020820151155b15612fa7575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476020850151800990508181146130995760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e000000000000000000604482015260640161084f565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786602001516130de9190614746565b613108907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476144d2565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e0820152600090613211613627565b60006020826103008560086107d05a03fa9050806132975760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161084f565b505115159a9950505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526132e19085906323b872dd60e01b90608401612d96565b50505050565b600054610100900460ff166133525760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b606482015260840161084f565b610deb3361265e565b60006133b0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166134409092919063ffffffff16565b8051909150156117fc57808060200190518101906133ce9190615015565b6117fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161084f565b6060610cc58484600085856001600160a01b0385163b6134a25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161084f565b600080866001600160a01b031685876040516134be9190615032565b60006040518083038185875af1925050503d80600081146134fb576040519150601f19603f3d011682016040523d82523d6000602084013e613500565b606091505b509150915061351082828661351b565b979650505050505050565b6060831561352a575081610cc8565b82511561353a5782518084602001fd5b8160405162461bcd60e51b815260040161084f9190615044565b6040518060c0016040528060608152602001613583604051806040016040528060008152602001600081525090565b8152602001613590613645565b815260200161359d613645565b81526020016135aa613645565b8152602001606081525090565b6040518060a001604052806135ca613609565b81526000602082018190526040820152606080820181905260809091015290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b604051806040016040528061365861366a565b815260200161366561366a565b905290565b60405180604001604052806002906020820280368337509192915050565b6001600160a01b038116811461085857600080fd5b80356001600160781b03811681146136b457600080fd5b919050565b80356136b481613688565b600080600080600060a086880312156136dc57600080fd5b85356136e781613688565b94506136f56020870161369d565b93506137036040870161369d565b925060608601359150608086013561371a81613688565b809150509295509295909350565b60006020828403121561373a57600080fd5b5035919050565b6000610220828403121561375457600080fd5b50919050565b60006020828403121561376c57600080fd5b813567ffffffffffffffff81111561378357600080fd5b61378f84828501613741565b949350505050565b801515811461085857600080fd5b6000806000606084860312156137ba57600080fd5b833592506020840135915060408401356137d381613797565b809150509250925092565b600060a0828403121561375457600080fd5b60006020828403121561380257600080fd5b813567ffffffffffffffff81111561381957600080fd5b820160e08185031215610cc857600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156138645761386461382b565b60405290565b60405160c0810167ffffffffffffffff811182821017156138645761386461382b565b6040516060810167ffffffffffffffff811182821017156138645761386461382b565b60405160a0810167ffffffffffffffff811182821017156138645761386461382b565b6040516080810167ffffffffffffffff811182821017156138645761386461382b565b604051601f8201601f1916810167ffffffffffffffff8111828210171561391f5761391f61382b565b604052919050565b600082601f83011261393857600080fd5b813567ffffffffffffffff8111156139525761395261382b565b613965601f8201601f19166020016138f6565b81815284602083860101111561397a57600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156139a957600080fd5b6139b1613841565b9050813581526020820135602082015292915050565b600082601f8301126139d857600080fd5b6040516040810181811067ffffffffffffffff821117156139fb576139fb61382b565b8060405250806040840185811115613a1257600080fd5b845b81811015613a2c578035835260209283019201613a14565b509195945050505050565b600060808284031215613a4957600080fd5b613a51613841565b9050613a5d83836139c7565b8152613a6c83604084016139c7565b602082015292915050565b600067ffffffffffffffff821115613a9157613a9161382b565b5060051b60200190565b600082601f830112613aac57600080fd5b81356020613ac1613abc83613a77565b6138f6565b82815260069290921b84018101918181019086841115613ae057600080fd5b8286015b84811015613b0457613af68882613997565b835291830191604001613ae4565b509695505050505050565b6000610100828403121561375457600080fd5b600082601f830112613b3357600080fd5b81356020613b43613abc83613a77565b82815260059290921b84018101918181019086841115613b6257600080fd5b8286015b84811015613b045780358352918301918301613b66565b60008060006101408486031215613b9357600080fd5b833567ffffffffffffffff80821115613bab57600080fd5b908501906102008288031215613bc057600080fd5b613bc861386a565b823582811115613bd757600080fd5b613be389828601613927565b825250613bf38860208501613997565b6020820152613c058860608501613a37565b6040820152613c178860e08501613a37565b6060820152613c2a886101608501613a37565b60808201526101e083013582811115613c4257600080fd5b613c4e89828601613a9b565b60a0830152509450613c638760208801613b0f565b9350610120860135915080821115613c7a57600080fd5b50613c8786828701613b22565b9150509250925092565b600080600060608486031215613ca657600080fd5b8335925060208401359150604084013567ffffffffffffffff811115613ccb57600080fd5b840161020081870312156137d357600080fd5b60008060408385031215613cf157600080fd5b50508035926020909101359150565b600080600060608486031215613d1557600080fd5b833570ffffffffffffffffffffffffffffffffff81168114613d3657600080fd5b92506020840135613d4681613797565b9150613d546040850161369d565b90509250925092565b60008083601f840112613d6f57600080fd5b50813567ffffffffffffffff811115613d8757600080fd5b6020830191508360208260051b8501011115613da257600080fd5b9250929050565b60008060208385031215613dbc57600080fd5b823567ffffffffffffffff811115613dd357600080fd5b613ddf85828601613d5d565b90969095509350505050565b6003811061085857600080fd5b600060608284031215613e0a57600080fd5b613e1261388d565b90508135613e1f81613deb565b81526020820135613e2f81613688565b806020830152506040820135604082015292915050565b600060a08284031215613e5857600080fd5b613e6061388d565b82358152613e718460208501613df8565b6020820152613e826080840161369d565b60408201529392505050565b60005b83811015613ea9578181015183820152602001613e91565b50506000910152565b60008151808452613eca816020860160208601613e8e565b601f01601f19169290920160200192915050565b8060005b60028110156132e1578151845260209384019390910190600101613ee2565b613f0c828251613ede565b60208101516117fc6040840182613ede565b6000602080835283516102008083860152613f3d610220860183613eb2565b9150828601516040613f5b8188018380518252602090810151910152565b808801519150613f6e6080880183613f01565b60608801519150613f83610100880183613f01565b60808801519150613f98610180880183613f01565b60a0880151878503601f190193880193909352825180855292850193850192600092505b80831015613fed57613fd984865180518252602090810151910152565b938501939281019260019290920191613fbc565b5091979650505050505050565b60006020828403121561400c57600080fd5b8135610cc881613688565b634e487b7160e01b600052602160045260246000fd5b6003811061085857634e487b7160e01b600052602160045260246000fd5b80516140568161402d565b82526020818101516001600160a01b031690830152604090810151910152565b8151815260208083015160a08301916140919084018261404b565b506001600160781b03604084015116608083015292915050565b6000606082840312156140bd57600080fd5b610cc88383613df8565b6000806000606084860312156140dc57600080fd5b833567ffffffffffffffff8111156140f357600080fd5b6140ff86828701613741565b9660208601359650604090950135949350505050565b600060608083018684526020828186015281875180845260809350838701915082890160005b828110156141575781518452928401929084019060010161413b565b5050506040868203818801528188518084528484019150848160051b850101858b0160005b8381101561420f57868303601f1901855281518051610100908560005b60048110156141b65782518252918c0191908c0190600101614199565b505050898201518b8601528782015160a08601528b8201518160c08701526141e082870182613eb2565b9150508a820151915084810360e08601526141fb8183613eb2565b968a0196945050509087019060010161417c565b50909d9c50505050505050505050505050565b6060810161422f8561402d565b9381526001600160a01b0392909216602083015260409091015290565b60008060006060848603121561426157600080fd5b61426a8461369d565b92506142786020850161369d565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156142d95781600019048211156142bf576142bf614288565b808516156142cc57918102915b93841c93908002906142a3565b509250929050565b6000826142f057506001610c44565b816142fd57506000610c44565b8160018114614313576002811461431d57614339565b6001915050610c44565b60ff84111561432e5761432e614288565b50506001821b610c44565b5060208310610133831016604e8410600b841016171561435c575081810a610c44565b614366838361429e565b806000190482111561437a5761437a614288565b029392505050565b6000610cc883836142e1565b80820180821115610c4457610c44614288565b6000823560de198336030181126143b757600080fd5b9190910192915050565b803568ffffffffffffffffff811681146136b457600080fd5b6000602082840312156143ec57600080fd5b610cc8826143c1565b803567ffffffffffffffff811681146136b457600080fd5b60006020828403121561441f57600080fd5b610cc8826143f5565b803561ffff811681146136b457600080fd5b60006020828403121561444c57600080fd5b610cc882614428565b6000808335601e1984360301811261446c57600080fd5b83018035915067ffffffffffffffff82111561448757600080fd5b6020019150600581901b3603821315613da257600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156144c757600080fd5b8135610cc881613deb565b81810381811115610c4457610c44614288565b6000602082840312156144f757600080fd5b610cc88261369d565b6000808335601e1984360301811261451757600080fd5b830160208101925035905067ffffffffffffffff81111561453757600080fd5b8060051b3603821315613da257600080fd5b6000808335601e1984360301811261456057600080fd5b830160208101925035905067ffffffffffffffff81111561458057600080fd5b803603821315613da257600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b8881101561466d578385038a52823560fe198936030181126145f3578283fd5b8801610100608080838937828101359088015260a0808301359088015260c061461e81840184614549565b83838b0152614630848b01828461458f565b935050505060e061464381840184614549565b9350888303828a015261465783858361458f565b9d8a019d985050509387019350506001016145d3565b509298975050505050505050565b6020815261ffff61468b83614428565b16602082015268ffffffffffffffffff6146a7602084016143c1565b166040820152600060408301356146bd81613deb565b6146c68161402d565b8060608401525067ffffffffffffffff6146e2606085016143f5565b1660808301526146f4608084016136b9565b6001600160a01b03811660a08401525060a083013560c083015261471b60c0840184614500565b60e0808501526125d4610100850182846145b8565b634e487b7160e01b600052601260045260246000fd5b60008261475557614755614730565b500690565b6000610100828403121561476d57600080fd5b61477561388d565b61477f8484613997565b815261478e8460408501613a37565b6020820152613e828460c08501613997565b600181811c908216806147b457607f821691505b60208210810361375457634e487b7160e01b600052602260045260246000fd5b601f8211156117fc57600081815260208120601f850160051c810160208610156147fb5750805b601f850160051c820191505b818110156116d957828155600101614807565b67ffffffffffffffff8311156148325761483261382b565b6148468361484083546147a0565b836147d4565b6000601f84116001811461487a57600085156148625750838201355b600019600387901b1c1916600186901b1783556107c3565b600083815260209020601f19861690835b828110156148ab578685013582556020948501946001909201910161488b565b50868210156148c85760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8160005b60028110156148fb578135838201556020909101906001016148de565b50506040820160005b600280821061491357506132e1565b823584830190910155602090910190600101614904565b6000808335601e1984360301811261494157600080fd5b83018035915067ffffffffffffffff82111561495c57600080fd5b6020019150600681901b3603821315613da257600080fd5b6801000000000000000083111561498d5761498d61382b565b805483825580841015614a145760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80831683146149ce576149ce614288565b80861686146149df576149df614288565b5060008381526020812086831b81019084841b015b80821015614a0f5782825582848301556002820191506149f4565b505050505b5060008181526020812083915b858110156116d95782358255602083013560018301556040929092019160029190910190600101614a21565b8135601e19833603018112614a6157600080fd5b8201803567ffffffffffffffff811115614a7a57600080fd5b602082019150803603821315614a8f57600080fd5b614a9a81838561481a565b50506020820135600182015560408201356002820155614ac060608301600383016148da565b614ad060e08301600783016148da565b614ae16101608301600b83016148da565b614aef6101e083018361492a565b6132e18183600f8601614974565b6040818337604080820160408401375050565b81835260208301925060008160005b84811015614b4757813586526020808301359087015260409586019590910190600101614b1f565b5093949350505050565b838152826020820152606060408201526000614b6d8384614549565b6102006060850152614b846102608501828461458f565b60208601356080860152604086013560a08601529150614ba19050565b614bb160c0840160608601614afd565b614bc2610140840160e08601614afd565b614bd46101c084016101608601614afd565b6101e0840135601e19853603018112614bec57600080fd5b840160208101903567ffffffffffffffff811115614c0957600080fd5b8060061b3603821315614c1b57600080fd5b848303605f1901610240860152614c33838284614b10565b98975050505050505050565b60408101818360005b6002811015614c67578151835260209283019290910190600101614c48565b50505092915050565b600060208284031215614c8257600080fd5b5051919050565b70ffffffffffffffffffffffffffffffffff828116828216818102831692918115828504821417614c6757614c67614288565b600070ffffffffffffffffffffffffffffffffff80841680614ce057614ce0614730565b92169190910492915050565b70ffffffffffffffffffffffffffffffffff828116828216039080821115614d1657614d16614288565b5092915050565b6001600160781b03828116828216039080821115614d1657614d16614288565b6000823561021e198336030181126143b757600080fd5b60608101818360005b6003811015614c67578151835260209283019290910190600101614d5d565b60608101610c44828461404b565b60006001600160781b0380841680614ce057614ce0614730565b8035614daf81613deb565b614db88161402d565b82526020810135614dc881613688565b6001600160a01b03166020830152604090810135910152565b6001600160a01b038516815260c08101614dfe6020830186614da4565b6001600160781b03808516608084015280841660a08401525095945050505050565b6001600160a01b038516815260c08101614e3d6020830186614da4565b608082019390935260a0015292915050565b8135614e5a81613deb565b614e638161402d565b815460ff821691508160ff1982161783556020840135614e8281613688565b74ffffffffffffffffffffffffffffffffffffffff008160081b16837fffffffffffffffffffffff000000000000000000000000000000000000000000841617178455505050604082013560018201555050565b61ffff841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115614f1957600080fd5b8260051b8085606085013791909101606001949350505050565b6000823560fe198336030181126143b757600080fd5b60006101008236031215614f5c57600080fd5b614f646138b0565b36601f840112614f7357600080fd5b614f7b6138d3565b806080850136811115614f8d57600080fd5b855b81811015614fa7578035845260209384019301614f8f565b509083523560208301525060a0830135604082015260c083013567ffffffffffffffff80821115614fd757600080fd5b614fe336838701613927565b606084015260e0850135915080821115614ffc57600080fd5b5061500936828601613927565b60808301525092915050565b60006020828403121561502757600080fd5b8151610cc881613797565b600082516143b7818460208701613e8e565b602081526000610cc86020830184613eb256fea2646970667358221220abe84f6ffa0c061464becb23187ef0ea2ca718563ecfff9447f77e7711e3886f64736f6c63430008110033";

type RailgunLogicStubConstructorParams =
  | [linkLibraryAddresses: RailgunLogicStubLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RailgunLogicStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RailgunLogicStub__factory extends ContractFactory {
  constructor(...args: RailgunLogicStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RailgunLogicStub__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RailgunLogicStubLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0d67abb2a30631c14ae5d39aeb2a4b8972\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RailgunLogicStub> {
    return super.deploy(overrides || {}) as Promise<RailgunLogicStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RailgunLogicStub {
    return super.attach(address) as RailgunLogicStub;
  }
  override connect(signer: Signer): RailgunLogicStub__factory {
    return super.connect(signer) as RailgunLogicStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RailgunLogicStubInterface {
    return new utils.Interface(_abi) as RailgunLogicStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RailgunLogicStub {
    return new Contract(address, _abi, signerOrProvider) as RailgunLogicStub;
  }
}

export interface RailgunLogicStubLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
  ["contracts/logic/Poseidon.sol:PoseidonT4"]: string;
}
