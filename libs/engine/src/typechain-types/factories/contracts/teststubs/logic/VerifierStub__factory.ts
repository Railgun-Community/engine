/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VerifierStub,
  VerifierStubInterface,
} from "../../../../contracts/teststubs/logic/VerifierStub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b62000289565b600054610100900460ff1615808015620000435750600054600160ff909116105b8062000073575062000060306200015f60201b62000acc1760201c565b15801562000073575060005460ff166001145b620000dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000100576000805461ff0019166101001790555b620001156200016e60201b62000ae81760201c565b80156200015c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620001ca5760405162461bcd60e51b815260206004820152602b60248201526000805160206200262b83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620001d4620001d6565b565b600054610100900460ff16620002325760405162461bcd60e51b815260206004820152602b60248201526000805160206200262b83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620001d433603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61239280620002996000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637b12ae831161005b5780637b12ae83146100f35780638da5cb5b14610113578063ee9907831461013b578063f2fde38b1461014e57600080fd5b806328f89c3a1461008d5780632ebfe12a146100b35780632ec0f359146100d6578063715018a6146100eb575b600080fd5b6100a061009b366004611421565b610161565b6040519081526020015b60405180910390f35b6100c66100c1366004611752565b6101be565b60405190151581526020016100aa565b6100e96100e4366004611866565b6101e1565b005b6100e9610251565b6101066101013660046118be565b610265565b6040516100aa919061197a565b60335460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100aa565b6100c6610149366004611a4c565b61052a565b6100e961015c366004611ab1565b610a2f565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016101959190611c97565b6040516020818303038152906040528051906020012060001c6101b89190611d72565b92915050565b60006101d9846101d336869003860186611d94565b84610b6d565b949350505050565b6101e9610d0e565b60008381526065602090815260408083208584529091529020819061020e82826120d0565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb23838383604051610244939291906121d4565b60405180910390a1505050565b610259610d0e565b6102636000610d75565b565b61026d611321565b600083815260656020908152604080832085845290915290819020815160c081019092528054829082906102a090611e04565b80601f01602080910402602001604051908101604052809291908181526020018280546102cc90611e04565b80156103195780601f106102ee57610100808354040283529160200191610319565b820191906000526020600020905b8154815290600101906020018083116102fc57829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161036657505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161039c575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116103e057505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116104165750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161045a57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610490575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b8282101561051b578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906104d5565b50505091525090949350505050565b60008061053b6101208401846122b6565b91506000905061054f6101408501856122b6565b6000848152606560209081526040808320848452909152808220815160c081019092528054939550919350918290829061058890611e04565b80601f01602080910402602001604051908101604052809291908181526020018280546105b490611e04565b80156106015780601f106105d657610100808354040283529160200191610601565b820191906000526020600020905b8154815290600101906020018083116105e457829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161064e57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610684575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116106c857505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116106fe5750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161074257505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311610778575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015610803578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906107bd565b505050915250506020810151519091506000036108675760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f7420736574000000000000000000000060448201526064015b60405180910390fd5b600082610875856002612300565b61087f9190612300565b67ffffffffffffffff81111561089757610897611463565b6040519080825280602002602001820160405280156108c0578160200160208202803683370190505b50905085610100013560001c816000815181106108df576108df612313565b60209081029190910101526108fb61009b610160880188612329565b8160018151811061090e5761090e612313565b60200260200101818152505060005b84811015610986576109336101208801886122b6565b8281811061094357610943612313565b6020029190910135905082610959836002612300565b8151811061096957610969612313565b602090810291909101015261097f600182612300565b905061091d565b5060005b838110156109fe576109a06101408801886122b6565b828181106109b0576109b0612313565b6020029190910135905082826109c7886002612300565b6109d19190612300565b815181106109e1576109e1612313565b60209081029190910101526109f7600182612300565b905061098a565b506000610a0c8388846101be565b905061deac193201610a25575060019695505050505050565b9695505050505050565b610a37610d0e565b73ffffffffffffffffffffffffffffffffffffffff8116610ac05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161085e565b610ac981610d75565b50565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600054610100900460ff16610b655760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161085e565b610263610dec565b6040805180820190915260008082526020820181905290815b8351811015610ca6577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110610bc257610bc2612313565b602002602001015110610c3d5760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f4400000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b610c9282610c8d8860a00151846001610c569190612300565b81518110610c6657610c66612313565b6020026020010151878581518110610c8057610c80612313565b6020026020010151610e72565b610f30565b9150610c9f600182612300565b9050610b86565b50610ccf818660a00151600081518110610cc257610cc2612313565b6020026020010151610f30565b9050610d05610ce18560000151610fdc565b856020015187602001518860400151858a606001518a604001518c6080015161118a565b95945050505050565b60335473ffffffffffffffffffffffffffffffffffffffff1633146102635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161085e565b6033805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e695760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161085e565b61026333610d75565b6040805180820190915260008082526020820152610e8e611384565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080610f285760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161085e565b505092915050565b6040805180820190915260008082526020820152610f4c6113a2565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa915081610d055760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c6564000000000000000000000000000000604482015260640161085e565b6040805180820190915260008082526020820152815115801561100157506020820151155b1561101f575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476020850151800990508181146111115760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e000000000000000000604482015260640161085e565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786602001516111569190611d72565b611180907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47612349565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e08201526000906112896113c0565b60006020826103008560086107d05a03fa90508061130f5760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f6564000000000000000000000000000000000000000000000000000000000000606482015260840161085e565b505115159a9950505050505050505050565b6040518060c0016040528060608152602001611350604051806040016040528060008152602001600081525090565b815260200161135d6113de565b815260200161136a6113de565b81526020016113776113de565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806113f1611403565b81526020016113fe611403565b905290565b60405180604001604052806002906020820280368337509192915050565b60006020828403121561143357600080fd5b813567ffffffffffffffff81111561144a57600080fd5b820160e0818503121561145c57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561149c5761149c611463565b60405290565b60405160c0810167ffffffffffffffff8111828210171561149c5761149c611463565b604051601f8201601f1916810167ffffffffffffffff811182821017156114ee576114ee611463565b604052919050565b600082601f83011261150757600080fd5b813567ffffffffffffffff81111561152157611521611463565b611534601f8201601f19166020016114c5565b81815284602083860101111561154957600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561157857600080fd5b611580611479565b9050813581526020820135602082015292915050565b600082601f8301126115a757600080fd5b6040516040810181811067ffffffffffffffff821117156115ca576115ca611463565b80604052508060408401858111156115e157600080fd5b845b818110156115fb5780358352602092830192016115e3565b509195945050505050565b60006080828403121561161857600080fd5b611620611479565b905061162c8383611596565b815261163b8360408401611596565b602082015292915050565b600067ffffffffffffffff82111561166057611660611463565b5060051b60200190565b600082601f83011261167b57600080fd5b8135602061169061168b83611646565b6114c5565b82815260069290921b840181019181810190868411156116af57600080fd5b8286015b848110156116d3576116c58882611566565b8352918301916040016116b3565b509695505050505050565b600061010082840312156116f157600080fd5b50919050565b600082601f83011261170857600080fd5b8135602061171861168b83611646565b82815260059290921b8401810191818101908684111561173757600080fd5b8286015b848110156116d3578035835291830191830161173b565b6000806000610140848603121561176857600080fd5b833567ffffffffffffffff8082111561178057600080fd5b90850190610200828803121561179557600080fd5b61179d6114a2565b8235828111156117ac57600080fd5b6117b8898286016114f6565b8252506117c88860208501611566565b60208201526117da8860608501611606565b60408201526117ec8860e08501611606565b60608201526117ff886101608501611606565b60808201526101e08301358281111561181757600080fd5b6118238982860161166a565b60a083015250945061183887602088016116de565b935061012086013591508082111561184f57600080fd5b5061185c868287016116f7565b9150509250925092565b60008060006060848603121561187b57600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156118a057600080fd5b840161020081870312156118b357600080fd5b809150509250925092565b600080604083850312156118d157600080fd5b50508035926020909101359150565b8060005b60028110156119035781518452602093840193909101906001016118e4565b50505050565b6119148282516118e0565b602081015161192660408401826118e0565b505050565b600081518084526020808501945080840160005b8381101561196f5761195c87835180518252602090810151910152565b604096909601959082019060010161193f565b509495945050505050565b60006020808352610220845161020080848701528151808488015260005b818110156119b55783810186015188820161024001528501611998565b50600087820161024090810191909152948801518051604089015260208101516060890152949250601f01601f19168601604088015194506119fa6080880186611909565b60608801519450611a0f610100880186611909565b60808801519450611a24610180880186611909565b60a08801519450838782030182880152611a408382018661192b565b98975050505050505050565b600060208284031215611a5e57600080fd5b813567ffffffffffffffff811115611a7557600080fd5b8201610220818503121561145c57600080fd5b803573ffffffffffffffffffffffffffffffffffffffff81168114611aac57600080fd5b919050565b600060208284031215611ac357600080fd5b61145c82611a88565b803560038110611aac57600080fd5b60038110611af957634e487b7160e01b600052602160045260246000fd5b9052565b803567ffffffffffffffff81168114611aac57600080fd5b6000808335601e19843603018112611b2c57600080fd5b830160208101925035905067ffffffffffffffff811115611b4c57600080fd5b8060051b3603821315611b5e57600080fd5b9250929050565b6000808335601e19843603018112611b7c57600080fd5b830160208101925035905067ffffffffffffffff811115611b9c57600080fd5b803603821315611b5e57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015611c89578385038a52823560fe19893603018112611c0f578283fd5b8801610100608080838937828101359088015260a0808301359088015260c0611c3a81840184611b65565b83838b0152611c4c848b018284611bab565b935050505060e0611c5f81840184611b65565b9350888303828a0152611c73838583611bab565b9d8a019d98505050938701935050600101611bef565b509298975050505050505050565b602081526000823561ffff8116808214611cb057600080fd5b8060208501525050602083013568ffffffffffffffffff81168114611cd457600080fd5b68ffffffffffffffffff8116604084015250611cf260408401611acc565b611cff6060840182611adb565b50611d0c60608401611afd565b67ffffffffffffffff8116608084015250611d2960808401611a88565b73ffffffffffffffffffffffffffffffffffffffff811660a08401525060a083013560c0830152611d5d60c0840184611b15565b60e080850152610d0561010085018284611bd4565b600082611d8f57634e487b7160e01b600052601260045260246000fd5b500690565b60006101008284031215611da757600080fd5b6040516060810181811067ffffffffffffffff82111715611dca57611dca611463565b604052611dd78484611566565b8152611de68460408501611606565b6020820152611df88460c08501611566565b60408201529392505050565b600181811c90821680611e1857607f821691505b6020821081036116f157634e487b7160e01b600052602260045260246000fd5b601f82111561192657600081815260208120601f850160051c81016020861015611e5f5750805b601f850160051c820191505b81811015611e7e57828155600101611e6b565b505050505050565b67ffffffffffffffff831115611e9e57611e9e611463565b611eb283611eac8354611e04565b83611e38565b6000601f841160018114611ee65760008515611ece5750838201355b600019600387901b1c1916600186901b178355611f40565b600083815260209020601f19861690835b82811015611f175786850135825560209485019460019092019101611ef7565b5086821015611f345760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052601160045260246000fd5b8160005b6002811015611f7e57813583820155602090910190600101611f61565b50506040820160005b6002808210611f965750611903565b823584830190910155602090910190600101611f87565b6000808335601e19843603018112611fc457600080fd5b83018035915067ffffffffffffffff821115611fdf57600080fd5b6020019150600681901b3603821315611b5e57600080fd5b6801000000000000000083111561201057612010611463565b8054838255808410156120975760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316831461205157612051611f47565b808616861461206257612062611f47565b5060008381526020812086831b81019084841b015b80821015612092578282558284830155600282019150612077565b505050505b5060008181526020812083915b85811015611e7e57823582556020830135600183015560409290920191600291909101906001016120a4565b8135601e198336030181126120e457600080fd5b8201803567ffffffffffffffff8111156120fd57600080fd5b60208201915080360382131561211257600080fd5b61211d818385611e86565b505060208201356001820155604082013560028201556121436060830160038301611f5d565b61215360e0830160078301611f5d565b6121646101608301600b8301611f5d565b6121726101e0830183611fad565b6119038183600f8601611ff7565b6040818337604080820160408401375050565b81835260208301925060008160005b848110156121ca578135865260208083013590870152604095860195909101906001016121a2565b5093949350505050565b8381528260208201526060604082015260006121f08384611b65565b610200606085015261220761026085018284611bab565b60208601356080860152604086013560a086015291506122249050565b61223460c0840160608601612180565b612245610140840160e08601612180565b6122576101c084016101608601612180565b6101e0840135601e1985360301811261226f57600080fd5b840160208101903567ffffffffffffffff81111561228c57600080fd5b8060061b360382131561229e57600080fd5b848303605f1901610240860152611a40838284612193565b6000808335601e198436030181126122cd57600080fd5b83018035915067ffffffffffffffff8211156122e857600080fd5b6020019150600581901b3603821315611b5e57600080fd5b808201808211156101b8576101b8611f47565b634e487b7160e01b600052603260045260246000fd5b6000823560de1983360301811261233f57600080fd5b9190910192915050565b818103818111156101b8576101b8611f4756fea26469706673582212202a40730b062bf83d239505fef95e6dbd23e58db2ddb2c13e4635d45a8d8ab5d164736f6c63430008110033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type VerifierStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifierStub__factory extends ContractFactory {
  constructor(...args: VerifierStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifierStub> {
    return super.deploy(overrides || {}) as Promise<VerifierStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VerifierStub {
    return super.attach(address) as VerifierStub;
  }
  override connect(signer: Signer): VerifierStub__factory {
    return super.connect(signer) as VerifierStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierStubInterface {
    return new utils.Interface(_abi) as VerifierStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifierStub {
    return new Contract(address, _abi, signerOrProvider) as VerifierStub;
  }
}
