/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TokenBlocklistStub,
  TokenBlocklistStubInterface,
} from "../../../../contracts/teststubs/logic/TokenBlocklistStub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlocklist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlocklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b610270565b600054610100900460ff161580801561003e5750600054600160ff909116105b8061006957506100573061014f60201b6103f91760201c565b158015610069575060005460ff166001145b6100d15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff1916600117905580156100f4576000805461ff0019166101001790555b61010661015e60201b6104081760201c565b801561014c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff166101b75760405162461bcd60e51b815260206004820152602b602482015260008051602061096e83398151915260448201526a6e697469616c697a696e6760a81b60648201526084016100c8565b6101bf6101c1565b565b600054610100900460ff1661021a5760405162461bcd60e51b815260206004820152602b602482015260008051602061096e83398151915260448201526a6e697469616c697a696e6760a81b60648201526084016100c8565b6101bf33603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6106ef8061027f6000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063ab63e69c11610050578063ab63e69c146100d4578063f2fde38b146100e7578063f71a55f8146100fa57600080fd5b8063715018a614610077578063815b534f146100815780638da5cb5b146100b9575b600080fd5b61007f61010d565b005b6100a461008f3660046105d7565b60656020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6033546040516001600160a01b0390911681526020016100b0565b61007f6100e2366004610607565b610121565b61007f6100f53660046105d7565b610241565b61007f610108366004610607565b6102d6565b61011561048d565b61011f60006104e7565b565b61012961048d565b60005b8181101561023c576065600084848481811061014a5761014a61067c565b905060200201602081019061015f91906105d7565b6001600160a01b0316815260208101919091526040016000205460ff161561022a57606560008484848181106101975761019761067c565b90506020020160208101906101ac91906105d7565b6001600160a01b031681526020810191909152604001600020805460ff191690558282828181106101df576101df61067c565b90506020020160208101906101f491906105d7565b6001600160a01b03167f2ef13bd1aff17b0f9c85afaf228e84266c8394d9d381735e83fe23f607113e2e60405160405180910390a25b610235600182610692565b905061012c565b505050565b61024961048d565b6001600160a01b0381166102ca5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102d3816104e7565b50565b6102de61048d565b60005b8181101561023c57606560008484848181106102ff576102ff61067c565b905060200201602081019061031491906105d7565b6001600160a01b0316815260208101919091526040016000205460ff166103e75760016065600085858581811061034d5761034d61067c565b905060200201602081019061036291906105d7565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061039c5761039c61067c565b90506020020160208101906103b191906105d7565b6001600160a01b03167f46742f555939247f80b50a8ca895a561933c48bc9a06ccb0c812e97ac723d33f60405160405180910390a25b6103f2600182610692565b90506102e1565b6001600160a01b03163b151590565b600054610100900460ff166104855760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102c1565b61011f610551565b6033546001600160a01b0316331461011f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c1565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166105ce5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016102c1565b61011f336104e7565b6000602082840312156105e957600080fd5b81356001600160a01b038116811461060057600080fd5b9392505050565b6000806020838503121561061a57600080fd5b823567ffffffffffffffff8082111561063257600080fd5b818501915085601f83011261064657600080fd5b81358181111561065557600080fd5b8660208260051b850101111561066a57600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052603260045260246000fd5b808201808211156106b357634e487b7160e01b600052601160045260246000fd5b9291505056fea264697066735822122012cad51803d2a67d72c06f5f75b9f21f62b126ef3f30a43710cde125f81d6a5e64736f6c63430008110033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type TokenBlocklistStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBlocklistStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBlocklistStub__factory extends ContractFactory {
  constructor(...args: TokenBlocklistStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenBlocklistStub> {
    return super.deploy(overrides || {}) as Promise<TokenBlocklistStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenBlocklistStub {
    return super.attach(address) as TokenBlocklistStub;
  }
  override connect(signer: Signer): TokenBlocklistStub__factory {
    return super.connect(signer) as TokenBlocklistStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBlocklistStubInterface {
    return new utils.Interface(_abi) as TokenBlocklistStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenBlocklistStub {
    return new Contract(address, _abi, signerOrProvider) as TokenBlocklistStub;
  }
}
