/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ProxyTargetStubA,
  ProxyTargetStubAInterface,
} from "../../../../../contracts/teststubs/proxy/ProxyTarget.sol/ProxyTargetStubA";

const _abi = [
  {
    inputs: [],
    name: "identify",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610220806100206000396000f3fe60806040526004361061005e5760003560e01c80638456cb59116100435780638456cb59146100d3578063eeb7286614610119578063f2fde38b1461006a57600080fd5b80630900f0101461006a5780633f4ba83a146100d357600080fd5b3661006557005b600080fd5b34801561007657600080fd5b506100bd61008536600461015f565b5060408051808201909152600e81527f496d706c656d656e746174696f6e000000000000000000000000000000000000602082015290565b6040516100ca919061019c565b60405180910390f35b3480156100df57600080fd5b5060408051808201909152600e81527f496d706c656d656e746174696f6e00000000000000000000000000000000000060208201526100bd565b34801561012557600080fd5b5060408051808201909152600181527f410000000000000000000000000000000000000000000000000000000000000060208201526100bd565b60006020828403121561017157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461019557600080fd5b9392505050565b600060208083528351808285015260005b818110156101c9578581018301518582016040015282016101ad565b506000604082860101526040601f19601f830116850101925050509291505056fea26469706673582212204f9024efdc42b788ca4aede92fe2ed52f248d76a1006c5e5e64a462b33bd4d2d64736f6c63430008110033";

type ProxyTargetStubAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyTargetStubAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyTargetStubA__factory extends ContractFactory {
  constructor(...args: ProxyTargetStubAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProxyTargetStubA> {
    return super.deploy(overrides || {}) as Promise<ProxyTargetStubA>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProxyTargetStubA {
    return super.attach(address) as ProxyTargetStubA;
  }
  override connect(signer: Signer): ProxyTargetStubA__factory {
    return super.connect(signer) as ProxyTargetStubA__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyTargetStubAInterface {
    return new utils.Interface(_abi) as ProxyTargetStubAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyTargetStubA {
    return new Contract(address, _abi, signerOrProvider) as ProxyTargetStubA;
  }
}
