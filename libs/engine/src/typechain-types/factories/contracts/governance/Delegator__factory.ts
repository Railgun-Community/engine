/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Delegator,
  DelegatorInterface,
} from "../../../contracts/governance/Delegator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "GrantPermission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "RevokePermission",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "callContract",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "checkPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_permission",
        type: "bool",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c5e380380610c5e83398101604081905261002f9161017b565b61003833610051565b61004b816100a160201b61065a1760201c565b506101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a961011f565b6001600160a01b0381166101135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61011c81610051565b50565b6000546001600160a01b031633146101795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010a565b565b60006020828403121561018d57600080fd5b81516001600160a01b03811681146101a457600080fd5b9392505050565b610aa4806101ba6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063c6b295c114610103578063e64624fa14610124578063f2fde38b1461013757600080fd5b8063715018a6146100825780637aa7d3fd1461008c5780638ad2f289146100d5575b600080fd5b61008a61014a565b005b6100c061009a3660046107d7565b600160209081526000938452604080852082529284528284209052825290205460ff1681565b60405190151581526020015b60405180910390f35b6100c06100e33660046107d7565b61015e565b6000546040516001600160a01b0390911681526020016100cc565b610116610111366004610822565b610265565b6040516100cc9291906108ad565b61008a610132366004610913565b6104f5565b61008a61014536600461096f565b61065a565b6101526106ea565b61015c6000610744565b565b600080546001600160a01b03858116911614806101b257506001600160a01b03808516600090815260016020908152604080832093871683529281528282206001600160e01b0319861683529052205460ff165b806101ea57506001600160a01b03808516600090815260016020908152604080832093871683529281528282208280529052205460ff165b8061022a57506001600160a01b038416600090815260016020908152604080832083805282528083206001600160e01b03198616845290915290205460ff165b8061025d57506001600160a01b0384166000908152600160209081526040808320838052825280832090915290205460ff165b949350505050565b60006060816102748587610993565b9050306001600160a01b03881603610406577f19b9db06000000000000000000000000000000000000000000000000000000006001600160e01b03198216016103235760008080806102c9896004818d6109c3565b6040516020016102da9291906109ed565b6040516020818303038152906040528060200190518101906102fc91906109fd565b9350935093509350610310848484846104f5565b5060019550606094506104ec9350505050565b7f0d021c75000000000000000000000000000000000000000000000000000000006001600160e01b03198216016103b1576000610363866004818a6109c3565b6040516020016103749291906109ed565b6040516020818303038152906040528060200190518101906103969190610a51565b90506103a18161065a565b5060019250606091506104ec9050565b7f8eafe75a000000000000000000000000000000000000000000000000000000006001600160e01b03198216016103f8576103ea61014a565b5060019150606090506104ec565b5060009150606090506104ec565b61041133888361015e565b6104885760405162461bcd60e51b815260206004820152602960248201527f44656c656761746f723a2043616c6c657220646f65736e27742068617665207060448201527f65726d697373696f6e000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b866001600160a01b03168487876040516104a39291906109ed565b60006040518083038185875af1925050503d80600081146104e0576040519150601f19603f3d011682016040523d82523d6000602084013e6104e5565b606091505b5092509250505b94509492505050565b6104fd6106ea565b6001600160a01b03808516600090815260016020908152604080832093871683529281528282206001600160e01b0319861683529052205460ff16151581151514610654576001600160a01b03848116600090815260016020908152604080832093871683529281528282206001600160e01b031986168352905220805460ff191682158015919091179091556105f357817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916836001600160a01b0316856001600160a01b03167f521b363b3401f4d6404e4bd855a3edf8d254a7f55abb97b6d516b66a6f86205e60405160405180910390a4610654565b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916836001600160a01b0316856001600160a01b03167f91f81f13bab4e6573f47dda4f090782eb2c9173d3d489ca191b5f4f7355cebe860405160405180910390a45b50505050565b6106626106ea565b6001600160a01b0381166106de5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161047f565b6106e781610744565b50565b6000546001600160a01b0316331461015c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047f565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146106e757600080fd5b6001600160e01b0319811681146106e757600080fd5b6000806000606084860312156107ec57600080fd5b83356107f7816107ac565b92506020840135610807816107ac565b91506040840135610817816107c1565b809150509250925092565b6000806000806060858703121561083857600080fd5b8435610843816107ac565b9350602085013567ffffffffffffffff8082111561086057600080fd5b818701915087601f83011261087457600080fd5b81358181111561088357600080fd5b88602082850101111561089557600080fd5b95986020929092019750949560400135945092505050565b821515815260006020604081840152835180604085015260005b818110156108e3578581018301518582016060015282016108c7565b506000606082860101526060601f19601f830116850101925050509392505050565b80151581146106e757600080fd5b6000806000806080858703121561092957600080fd5b8435610934816107ac565b93506020850135610944816107ac565b92506040850135610954816107c1565b9150606085013561096481610905565b939692955090935050565b60006020828403121561098157600080fd5b813561098c816107ac565b9392505050565b6001600160e01b031981358181169160048510156109bb5780818660040360031b1b83161692505b505092915050565b600080858511156109d357600080fd5b838611156109e057600080fd5b5050820193919092039150565b8183823760009101908152919050565b60008060008060808587031215610a1357600080fd5b8451610a1e816107ac565b6020860151909450610a2f816107ac565b6040860151909350610a40816107c1565b606086015190925061096481610905565b600060208284031215610a6357600080fd5b815161098c816107ac56fea26469706673582212204c0b960ff3a86200298ca3ea58e74e1a48bad1e5902581d2751640d803ffc45f64736f6c63430008110033";

type DelegatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Delegator__factory extends ContractFactory {
  constructor(...args: DelegatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Delegator> {
    return super.deploy(_admin, overrides || {}) as Promise<Delegator>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): Delegator {
    return super.attach(address) as Delegator;
  }
  override connect(signer: Signer): Delegator__factory {
    return super.connect(signer) as Delegator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegatorInterface {
    return new utils.Interface(_abi) as DelegatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Delegator {
    return new Contract(address, _abi, signerOrProvider) as Delegator;
  }
}
