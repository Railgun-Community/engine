/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018583803806200185883398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6115aa80620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e94565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610ed7565b610238565b60405190151581526020016100a9565b6100e86100e3366004610efb565b6102d3565b6040516100a99190610f5a565b6101086101033660046110b9565b610367565b005b61011d610118366004611163565b610409565b6040516100a99190611269565b61010861013836600461127c565b610547565b6100c561014b3660046112b8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101086101873660046112eb565b610556565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061029b57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061023257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610232565b6060600280546102e290611350565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90611350565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103835750610383853361014b565b6103f55760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610206565b61040285858585856105f1565b5050505050565b606081518351146104825760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff81111561049e5761049e610f6d565b6040519080825280602002602001820160405280156104c7578160200160208202803683370190505b50905060005b845181101561053f576105128582815181106104eb576104eb61138a565b60200260200101518583815181106105055761050561138a565b602002602001015161018c565b8282815181106105245761052461138a565b6020908102919091010152610538816113b6565b90506104cd565b509392505050565b61055233838361088f565b5050565b6001600160a01b0385163314806105725750610572853361014b565b6105e45760405162461bcd60e51b815260206004820152602f60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206e6f7220617070726f76656400000000000000000000000000000000006064820152608401610206565b6104028585858585610983565b81518351146106685760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166106e45760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610206565b3360005b84518110156108215760008582815181106107055761070561138a565b6020026020010151905060008583815181106107235761072361138a565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156107c95760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610206565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906108069084906113cf565b925050819055505050508061081a906113b6565b90506106e8565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516108719291906113e2565b60405180910390a4610887818787878787610b59565b505050505050565b816001600160a01b0316836001600160a01b0316036109165760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109ff5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610206565b336000610a0b85610d1c565b90506000610a1885610d1c565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610ab15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201527f72207472616e73666572000000000000000000000000000000000000000000006064820152608401610206565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610aee9084906113cf565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b4e848a8a8a8a8a610d67565b505050505050505050565b6001600160a01b0384163b156108875760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b9d9089908990889088908890600401611410565b6020604051808303816000875af1925050508015610bd8575060408051601f3d908101601f19168201909252610bd59181019061146e565b60015b610c8d57610be461148b565b806308c379a003610c1d5750610bf86114a7565b80610c035750610c1f565b8060405162461bcd60e51b81526004016102069190610f5a565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610d135760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610206565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610d5657610d5661138a565b602090810291909101015292915050565b6001600160a01b0384163b156108875760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dab9089908990889088908890600401611531565b6020604051808303816000875af1925050508015610de6575060408051601f3d908101601f19168201909252610de39181019061146e565b60015b610df257610be461148b565b6001600160e01b0319811663f23a6e6160e01b14610d135760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e730000000000000000000000000000000000000000000000006064820152608401610206565b80356001600160a01b0381168114610e8f57600080fd5b919050565b60008060408385031215610ea757600080fd5b610eb083610e78565b946020939093013593505050565b6001600160e01b031981168114610ed457600080fd5b50565b600060208284031215610ee957600080fd5b8135610ef481610ebe565b9392505050565b600060208284031215610f0d57600080fd5b5035919050565b6000815180845260005b81811015610f3a57602081850181015186830182015201610f1e565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ef46020830184610f14565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610fa957610fa9610f6d565b6040525050565b600067ffffffffffffffff821115610fca57610fca610f6d565b5060051b60200190565b600082601f830112610fe557600080fd5b81356020610ff282610fb0565b604051610fff8282610f83565b83815260059390931b850182019282810191508684111561101f57600080fd5b8286015b8481101561103a5780358352918301918301611023565b509695505050505050565b600082601f83011261105657600080fd5b813567ffffffffffffffff81111561107057611070610f6d565b604051611087601f8301601f191660200182610f83565b81815284602083860101111561109c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156110d157600080fd5b6110da86610e78565b94506110e860208701610e78565b9350604086013567ffffffffffffffff8082111561110557600080fd5b61111189838a01610fd4565b9450606088013591508082111561112757600080fd5b61113389838a01610fd4565b9350608088013591508082111561114957600080fd5b5061115688828901611045565b9150509295509295909350565b6000806040838503121561117657600080fd5b823567ffffffffffffffff8082111561118e57600080fd5b818501915085601f8301126111a257600080fd5b813560206111af82610fb0565b6040516111bc8282610f83565b83815260059390931b85018201928281019150898411156111dc57600080fd5b948201945b83861015611201576111f286610e78565b825294820194908201906111e1565b9650508601359250508082111561121757600080fd5b5061122485828601610fd4565b9150509250929050565b600081518084526020808501945080840160005b8381101561125e57815187529582019590820190600101611242565b509495945050505050565b602081526000610ef4602083018461122e565b6000806040838503121561128f57600080fd5b61129883610e78565b9150602083013580151581146112ad57600080fd5b809150509250929050565b600080604083850312156112cb57600080fd5b6112d483610e78565b91506112e260208401610e78565b90509250929050565b600080600080600060a0868803121561130357600080fd5b61130c86610e78565b945061131a60208701610e78565b93506040860135925060608601359150608086013567ffffffffffffffff81111561134457600080fd5b61115688828901611045565b600181811c9082168061136457607f821691505b60208210810361138457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113c8576113c86113a0565b5060010190565b80820180821115610232576102326113a0565b6040815260006113f5604083018561122e565b8281036020840152611407818561122e565b95945050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261143c60a083018661122e565b828103606084015261144e818661122e565b905082810360808401526114628185610f14565b98975050505050505050565b60006020828403121561148057600080fd5b8151610ef481610ebe565b600060033d11156114a45760046000803e5060005160e01c5b90565b600060443d10156114b55790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114e557505050505090565b82850191508151818111156114fd5750505050505090565b843d87010160208285010111156115175750505050505090565b61152660208286010187610f83565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261156960a0830184610f14565b97965050505050505056fea2646970667358221220ea0880409366681fa0bc7e734c46ead0848f6f8f5049f509f2900d5fa88bf3f664736f6c63430008110033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
