/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MaliciousReentrant,
  MaliciousReentrantInterface,
} from "../../../../contracts/teststubs/adapt/MaliciousReentrant";

const _abi = [
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f57806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639e5faafc14610030575b600080fd5b61003861003a565b005b6040805160a080820183526001828401818152845160608082018752600080835260208084018290528389018290528288019390935260808088018290529387528751958601885285880185815291860185905292850184905284528381019290925281840192909252835190810184528281529251339384917f044a40c300000000000000000000000000000000000000000000000000000000916100e291602401610a39565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101389190610add565b6000604051808303816000865af19150503d8060008114610175576040519150601f19603f3d011682016040523d82523d6000602084013e61017a565b606091505b509091505080156101d25760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064015b60405180910390fd5b6040805160c0810182526000606082018181526080830182905260a083019190915281523060208083019190915260648284015282519081018352818152915190916001600160a01b038616917fc2e9ffd8000000000000000000000000000000000000000000000000000000009161024d91602401610af9565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516102a39190610add565b6000604051808303816000865af19150503d80600081146102e0576040519150601f19603f3d011682016040523d82523d6000602084013e6102e5565b606091505b509092505081156103385760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064016101c9565b60408051600060248083019190915282518083039091018152604490910182526020810180516001600160e01b03167fe9a059a30000000000000000000000000000000000000000000000000000000017905290516001600160a01b038616916103a191610add565b6000604051808303816000865af19150503d80600081146103de576040519150601f19603f3d011682016040523d82523d6000602084013e6103e3565b606091505b509092505081156104365760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064016101c9565b60408051600060248083019190915282518083039091018152604490910182526020810180516001600160e01b03167fd5774a280000000000000000000000000000000000000000000000000000000017905290516001600160a01b0386169161049f91610add565b6000604051808303816000865af19150503d80600081146104dc576040519150601f19603f3d011682016040523d82523d6000602084013e6104e1565b606091505b509092505081156105345760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064016101c9565b604080516000808252602082019092528161058a565b610577604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b81526020019060019003908161054a5790505b509050846001600160a01b031663e4899c1360e01b6000836040516024016105b3929190610bff565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516106099190610add565b6000604051808303816000865af19150503d8060008114610646576040519150601f19603f3d011682016040523d82523d6000602084013e61064b565b606091505b5090935050821561069e5760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064016101c9565b60408051600080825260208201909252816106cf565b6106bc610866565b8152602001906001900390816106b45790505b506040805160808101825260008082526020808301829052828401829052835182815290810190935292935090606082019083610747565b610734604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b8152602001906001900390816107075790505b508152509050866001600160a01b03166328223a7760e01b8383604051602401610772929190610def565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516107c89190610add565b6000604051808303816000865af19150503d8060008114610805576040519150601f19603f3d011682016040523d82523d6000602084013e61080a565b606091505b5090955050841561085d5760405162461bcd60e51b815260206004820152601660248201527f5265656e74727920776173207375636365737366756c0000000000000000000060448201526064016101c9565b50505050505050565b6040518060c00160405280610879610919565b815260006020820152606060408201819052808201526080016108d46040805160e081018252600080825260208201819052909182019081526000602082018190526040820181905260608083019190915260809091015290565b8152602001610914604080516060808201835260008083528351918201845280825260208281018290529382015290918201908152600060209091015290565b905290565b6040805160a081019091526000606082018181526080830191909152815260208101610943610965565b8152602001610914604051806040016040528060008152602001600081525090565b6040518060400160405280610978610981565b81526020016109145b60405180604001604052806002906020820280368337509192915050565b600381106109d6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b50565b80516109e48161099f565b82526020818101516001600160a01b031690830152604090810151910152565b805182526020810151610a1a60208401826109d9565b50604001516effffffffffffffffffffffffffffff1660809190910152565b6101208181019082846000805b6001808210610a555750610aae565b8351610a62868251610a04565b60209081015180519091908560a089015b6003821015610a8f578251815291830191908501908301610a73565b5050509081015161010087015294860194939093019250600101610a46565b505050505092915050565b60005b83811015610ad4578181015183820152602001610abc565b50506000910152565b60008251610aef818460208701610ab9565b9190910192915050565b60a081810190828460005b6001811015610b4a578151610b1a8482516109d9565b6020818101516001600160a01b031660608601526040909101516080850152928401929190910190600101610b04565b5050505092915050565b60008151808452610b6c816020860160208601610ab9565b601f01601f19169290920160200192915050565b600081518084526020808501808196508360051b8101915082860160005b85811015610bf2578284038952815160606001600160a01b038251168652868201518188880152610bd182880182610b54565b60409384015197909301969096525098850198935090840190600101610b9e565b5091979650505050505050565b8215158152604060208201526000610c1a6040830184610b80565b949350505050565b8060005b6002811015610c45578151845260209384019390910190600101610c26565b50505050565b600081518084526020808501945080840160005b83811015610c7b57815187529582019590820190600101610c5f565b509495945050505050565b600060e0830161ffff8351168452602068ffffffffffffffffff8185015116818601526040840151610cb78161099f565b604086015260608481015167ffffffffffffffff16818701526080808601516001600160a01b03168188015260a0808701518189015260c08088015160e0828b01528051968790526101009690860190878b0190600581901b8c0189016000805b83811015610da3578e830360ff190185528551805184845b6004811015610d4d5782518252918e0191908e0190600101610d30565b5050508b8101518a8501526040810151898501528a8101518d89860152610d768e860182610b54565b918b015185830360e0870152919050610d8f8183610b54565b978d0197968d019694505050600101610d18565b50909d9c50505050505050505050505050565b60ff198151168252602081015115156020830152604081015160408301526000606082015160806060850152610c1a6080850182610b80565b60006040808301818452808651808352606092508286019150828160051b8701016020808a0160005b84811015610f0157605f198a850301865281516102208151610e4587825180518252602090810151910152565b85810151610e568c89018251610c22565b8601516080610e6789820183610c22565b918c0151805160c08a01526020015160e089015283870151610100890152838c0151610120890184905291610e9e848a0184610c4b565b93508b85015192508884036101408a0152610eb98484610c4b565b93508085015192505050868203610160880152610ed68282610c86565b91505060a08201519150610eee610180870183610a04565b9684019694505090820190600101610e18565b505087820390880152610f148189610db6565b999850505050505050505056fea26469706673582212206b666c645514779156d758344ddfca7bbbbf5e79875c0367c07099ff2d2a631d64736f6c63430008110033";

type MaliciousReentrantConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaliciousReentrantConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaliciousReentrant__factory extends ContractFactory {
  constructor(...args: MaliciousReentrantConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MaliciousReentrant> {
    return super.deploy(overrides || {}) as Promise<MaliciousReentrant>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MaliciousReentrant {
    return super.attach(address) as MaliciousReentrant;
  }
  override connect(signer: Signer): MaliciousReentrant__factory {
    return super.connect(signer) as MaliciousReentrant__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaliciousReentrantInterface {
    return new utils.Interface(_abi) as MaliciousReentrantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaliciousReentrant {
    return new Contract(address, _abi, signerOrProvider) as MaliciousReentrant;
  }
}
