/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GovernanceTargetConstructorArgumentStub,
  GovernanceTargetConstructorArgumentStubInterface,
} from "../../../../../contracts/teststubs/governance/GovernanceTarget.sol/GovernanceTargetConstructorArgumentStub";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "greeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "willRevert",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104f83803806104f883398101604081905261002f91610058565b600061003b82826101aa565b5050610269565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561006b57600080fd5b82516001600160401b038082111561008257600080fd5b818501915085601f83011261009657600080fd5b8151818111156100a8576100a8610042565b604051601f8201601f19908116603f011681019083821181831017156100d0576100d0610042565b8160405282815288868487010111156100e857600080fd5b600093505b8284101561010a57848401860151818501870152928501926100ed565b600086848301015280965050505050505092915050565b600181811c9082168061013557607f821691505b60208210810361015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a557600081815260208120601f850160051c810160208610156101825750805b601f850160051c820191505b818110156101a15782815560010161018e565b5050505b505050565b81516001600160401b038111156101c3576101c3610042565b6101d7816101d18454610121565b8461015b565b602080601f83116001811461020c57600084156101f45750858301515b600019600386901b1c1916600185901b1785556101a1565b600085815260208120601f198616915b8281101561023b5788860151825594840194600190910190840161021c565b50858210156102595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610280806102786000396000f3fe60806040526004361061002d5760003560e01c806373ee93b314610084578063ef690cc0146100ae57600080fd5b3661007f5760405162461bcd60e51b815260206004820152601360248201527f31206973206e6f7420657175616c20746f20320000000000000000000000000060448201526064015b60405180910390fd5b600080fd5b34801561009057600080fd5b506100996100d0565b60405190151581526020015b60405180910390f35b3480156100ba57600080fd5b506100c361011b565b6040516100a591906101a9565b60405162461bcd60e51b815260206004820152601360248201527f31206973206e6f7420657175616c20746f2032000000000000000000000000006044820152600090606401610076565b60008054610128906101f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610154906101f7565b80156101a15780601f10610176576101008083540402835291602001916101a1565b820191906000526020600020905b81548152906001019060200180831161018457829003601f168201915b505050505081565b600060208083528351808285015260005b818110156101d6578581018301518582016040015282016101ba565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061020b57607f821691505b602082108103610244577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220a7f3fe241bc423a99a2562bd924a0bb5a6bd780e883397ea522d05090b1c7aa764736f6c63430008110033";

type GovernanceTargetConstructorArgumentStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTargetConstructorArgumentStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceTargetConstructorArgumentStub__factory extends ContractFactory {
  constructor(
    ...args: GovernanceTargetConstructorArgumentStubConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernanceTargetConstructorArgumentStub> {
    return super.deploy(
      _greeting,
      overrides || {}
    ) as Promise<GovernanceTargetConstructorArgumentStub>;
  }
  override getDeployTransaction(
    _greeting: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  override attach(address: string): GovernanceTargetConstructorArgumentStub {
    return super.attach(address) as GovernanceTargetConstructorArgumentStub;
  }
  override connect(
    signer: Signer
  ): GovernanceTargetConstructorArgumentStub__factory {
    return super.connect(
      signer
    ) as GovernanceTargetConstructorArgumentStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTargetConstructorArgumentStubInterface {
    return new utils.Interface(
      _abi
    ) as GovernanceTargetConstructorArgumentStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceTargetConstructorArgumentStub {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernanceTargetConstructorArgumentStub;
  }
}
