/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  GovernanceTargetNumberStub,
  GovernanceTargetNumberStubInterface,
} from "../../../../../contracts/teststubs/governance/GovernanceTarget.sol/GovernanceTargetNumberStub";

const _abi = [
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "b",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "willRevert",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061020b806100206000396000f3fe6080604052600436106100435760003560e01c80630dbe671f1461009a5780634df7e3d0146100bd57806373ee93b3146100d1578063771602f7146100f657600080fd5b366100955760405162461bcd60e51b815260206004820152601360248201527f31206973206e6f7420657175616c20746f20320000000000000000000000000060448201526064015b60405180910390fd5b600080fd5b3480156100a657600080fd5b5060015b6040519081526020015b60405180910390f35b3480156100c957600080fd5b5060026100aa565b3480156100dd57600080fd5b506100e6610116565b60405190151581526020016100b4565b34801561010257600080fd5b506100aa610111366004610174565b610161565b60405162461bcd60e51b815260206004820152601360248201527f31206973206e6f7420657175616c20746f203200000000000000000000000000604482015260009060640161008c565b600061016d8284610196565b9392505050565b6000806040838503121561018757600080fd5b50508035926020909101359150565b600082198211156101d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea264697066735822122069aca2ac58ba40d854e60b7f6101cd6a33b955fe8b976c17c5ed4429ff7909d264736f6c634300080c0033";

type GovernanceTargetNumberStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTargetNumberStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceTargetNumberStub__factory extends ContractFactory {
  constructor(...args: GovernanceTargetNumberStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernanceTargetNumberStub> {
    return super.deploy(overrides || {}) as Promise<GovernanceTargetNumberStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernanceTargetNumberStub {
    return super.attach(address) as GovernanceTargetNumberStub;
  }
  override connect(signer: Signer): GovernanceTargetNumberStub__factory {
    return super.connect(signer) as GovernanceTargetNumberStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTargetNumberStubInterface {
    return new utils.Interface(_abi) as GovernanceTargetNumberStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceTargetNumberStub {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernanceTargetNumberStub;
  }
}
