/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VerifierStub,
  VerifierStubInterface,
} from "../../../../contracts/teststubs/logic/VerifierStub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [],
    name: "SNARK_BYPASS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "enum WithdrawType",
            name: "withdraw",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "uint256[4]",
                name: "ciphertext",
                type: "uint256[4]",
              },
              {
                internalType: "uint256[2]",
                name: "ephemeralKeys",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[]",
                name: "memo",
                type: "uint256[]",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "nullifiers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "commitments",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "enum WithdrawType",
                name: "withdraw",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint256[4]",
                    name: "ciphertext",
                    type: "uint256[4]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "ephemeralKeys",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "memo",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "npk",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "withdrawPreimage",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "overrideOutput",
            type: "address",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b62000289565b600054610100900460ff1615808015620000435750600054600160ff909116105b8062000073575062000060306200015f60201b62000adc1760201c565b15801562000073575060005460ff166001145b620000dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000100576000805461ff0019166101001790555b620001156200016e60201b62000aeb1760201c565b80156200015c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620001ca5760405162461bcd60e51b815260206004820152602b6024820152600080516020620025af83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620001d4620001d6565b565b600054610100900460ff16620002325760405162461bcd60e51b815260206004820152602b6024820152600080516020620025af83398151915260448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620001d433603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61231680620002996000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063715018a6116100765780638533c4dc1161005b5780638533c4dc1461014f5780638da5cb5b14610162578063f2fde38b1461017357600080fd5b8063715018a6146101275780637b12ae831461012f57600080fd5b8063135cf736146100a85780632ebfe12a146100ce5780632ec0f359146100f1578063380cd34914610106575b600080fd5b6100bb6100b636600461140a565b610186565b6040519081526020015b60405180910390f35b6100e16100dc36600461173b565b6101e3565b60405190151581526020016100c5565b6101046100ff36600461184f565b610206565b005b61010f61dead81565b6040516001600160a01b0390911681526020016100c5565b610104610276565b61014261013d3660046118a7565b61028a565b6040516100c59190611963565b6100e161015d366004611a36565b61054f565b6033546001600160a01b031661010f565b610104610181366004611a8e565b610a4c565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016101ba9190611af9565b6040516020818303038152906040528051906020012060001c6101dd9190611c45565b92915050565b60006101fe846101f836869003860186611c67565b84610b70565b949350505050565b61020e610d11565b6000838152606560209081526040808320858452909152902081906102338282611fa9565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb238383836040516102699392919061212c565b60405180910390a1505050565b61027e610d11565b6102886000610d6b565b565b61029261130a565b600083815260656020908152604080832085845290915290819020815160c081019092528054829082906102c590611cd7565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190611cd7565b801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161038b57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116103c1575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b81548152602001906001019080831161040557505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161043b5750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161047f57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116104b5575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015610540578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906104fa565b50505091525090949350505050565b600080610560610120840184612216565b915060009050610574610140850185612216565b6000848152606560209081526040808320848452909152808220815160c08101909252805493955091935091829082906105ad90611cd7565b80601f01602080910402602001604051908101604052809291908181526020018280546105d990611cd7565b80156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161067357505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116106a9575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116106ed57505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116107235750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161076757505050918352505060408051808201918290526020909201919060028481019182845b81548152602001906001019080831161079d575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b82821015610828578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906107e2565b505050915250506020810151519091506108895760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f7420736574000000000000000000000060448201526064015b60405180910390fd5b600082610897856002612260565b6108a19190612260565b67ffffffffffffffff8111156108b9576108b961144c565b6040519080825280602002602001820160405280156108e2578160200160208202803683370190505b509050856101000135816000815181106108fe576108fe612278565b602090810291909101015261091a6100b661016088018861228e565b8160018151811061092d5761092d612278565b60200260200101818152505060005b848110156109a457610952610120880188612216565b8281811061096257610962612278565b90506020020135828260026109779190612260565b8151811061098757610987612278565b60209081029190910101528061099c816122ae565b91505061093c565b5060005b83811015610a1b576109be610140880188612216565b828181106109ce576109ce612278565b9050602002013582828760026109e49190612260565b6109ee9190612260565b815181106109fe576109fe612278565b602090810291909101015280610a13816122ae565b9150506109a8565b506000610a298388846101e3565b90503261dead1415610a42575060019695505050505050565b9695505050505050565b610a54610d11565b6001600160a01b038116610ad05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610880565b610ad981610d6b565b50565b6001600160a01b03163b151590565b600054610100900460ff16610b685760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610880565b610288610dd5565b6040805180820190915260008082526020820181905290815b8351811015610ca9577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110610bc557610bc5612278565b602002602001015110610c405760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610880565b610c9582610c908860a00151846001610c599190612260565b81518110610c6957610c69612278565b6020026020010151878581518110610c8357610c83612278565b6020026020010151610e5b565b610f19565b915080610ca1816122ae565b915050610b89565b50610cd2818660a00151600081518110610cc557610cc5612278565b6020026020010151610f19565b9050610d08610ce48560000151610fc5565b856020015187602001518860400151858a606001518a604001518c60800151611173565b95945050505050565b6033546001600160a01b031633146102885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610880565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e525760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610880565b61028833610d6b565b6040805180820190915260008082526020820152610e7761136d565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa905080610f115760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610880565b505092915050565b6040805180820190915260008082526020820152610f3561138b565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa915081610d085760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c65640000000000000000000000000000006044820152606401610880565b60408051808201909152600080825260208201528151158015610fea57506020820151155b15611008575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476020850151800990508181146110fa5760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e0000000000000000006044820152606401610880565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47866020015161113f9190611c45565b611169907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476122c9565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e08201526000906112726113a9565b60006020826103008560086107d05a03fa9050806112f85760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610880565b505115159a9950505050505050505050565b6040518060c0016040528060608152602001611339604051806040016040528060008152602001600081525090565b81526020016113466113c7565b81526020016113536113c7565b81526020016113606113c7565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806113da6113ec565b81526020016113e76113ec565b905290565b60405180604001604052806002906020820280368337509192915050565b60006020828403121561141c57600080fd5b813567ffffffffffffffff81111561143357600080fd5b820160a0818503121561144557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156114855761148561144c565b60405290565b60405160c0810167ffffffffffffffff811182821017156114855761148561144c565b604051601f8201601f1916810167ffffffffffffffff811182821017156114d7576114d761144c565b604052919050565b600082601f8301126114f057600080fd5b813567ffffffffffffffff81111561150a5761150a61144c565b61151d601f8201601f19166020016114ae565b81815284602083860101111561153257600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561156157600080fd5b611569611462565b9050813581526020820135602082015292915050565b600082601f83011261159057600080fd5b6040516040810181811067ffffffffffffffff821117156115b3576115b361144c565b80604052508060408401858111156115ca57600080fd5b845b818110156115e45780358352602092830192016115cc565b509195945050505050565b60006080828403121561160157600080fd5b611609611462565b9050611615838361157f565b8152611624836040840161157f565b602082015292915050565b600067ffffffffffffffff8211156116495761164961144c565b5060051b60200190565b600082601f83011261166457600080fd5b813560206116796116748361162f565b6114ae565b82815260069290921b8401810191818101908684111561169857600080fd5b8286015b848110156116bc576116ae888261154f565b83529183019160400161169c565b509695505050505050565b600061010082840312156116da57600080fd5b50919050565b600082601f8301126116f157600080fd5b813560206117016116748361162f565b82815260059290921b8401810191818101908684111561172057600080fd5b8286015b848110156116bc5780358352918301918301611724565b6000806000610140848603121561175157600080fd5b833567ffffffffffffffff8082111561176957600080fd5b90850190610200828803121561177e57600080fd5b61178661148b565b82358281111561179557600080fd5b6117a1898286016114df565b8252506117b1886020850161154f565b60208201526117c388606085016115ef565b60408201526117d58860e085016115ef565b60608201526117e88861016085016115ef565b60808201526101e08301358281111561180057600080fd5b61180c89828601611653565b60a083015250945061182187602088016116c7565b935061012086013591508082111561183857600080fd5b50611845868287016116e0565b9150509250925092565b60008060006060848603121561186457600080fd5b8335925060208401359150604084013567ffffffffffffffff81111561188957600080fd5b8401610200818703121561189c57600080fd5b809150509250925092565b600080604083850312156118ba57600080fd5b50508035926020909101359150565b8060005b60028110156118ec5781518452602093840193909101906001016118cd565b50505050565b6118fd8282516118c9565b602081015161190f60408401826118c9565b505050565b600081518084526020808501945080840160005b838110156119585761194587835180518252602090810151910152565b6040969096019590820190600101611928565b509495945050505050565b60006020808352610220845161020080848701528151808488015260005b8181101561199e5783810186015188820161024001528501611981565b818111156119b1576000610240838a0101525b509387015193601f01601f1916860191506119d9604087018580518252602090810151910152565b604087015193506119ed60808701856118f2565b60608701519350611a026101008701856118f2565b60808701519350611a176101808701856118f2565b60a0870151935082868303018187015250610a42610240820184611914565b600060208284031215611a4857600080fd5b813567ffffffffffffffff811115611a5f57600080fd5b8201610240818503121561144557600080fd5b80356001600160a01b0381168114611a8957600080fd5b919050565b600060208284031215611aa057600080fd5b61144582611a72565b6000808335601e19843603018112611ac057600080fd5b830160208101925035905067ffffffffffffffff811115611ae057600080fd5b8060051b3603831315611af257600080fd5b9250929050565b6000602080835260c0808401853561ffff8116808214611b1857600080fd5b86850152508583013560038110611b2e57600080fd5b604081818801526001600160a01b03611b48828a01611a72565b16606088015260809150606088013582880152611b6782890189611aa9565b60a0898101529384905260e093848901600582811b8b0187018460005b85811015611c32578d830360df1901855281353688900360de19018112611baa57600080fd5b87018981853789840160008152898b83018237508b840160008152611bd18d830183611aa9565b92508c8252828d87015261010091507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611c0d57600080fd5b91861b918281878401375060009490910101928352938b0193908b0190600101611b84565b50909d9c50505050505050505050505050565b600082611c6257634e487b7160e01b600052601260045260246000fd5b500690565b60006101008284031215611c7a57600080fd5b6040516060810181811067ffffffffffffffff82111715611c9d57611c9d61144c565b604052611caa848461154f565b8152611cb984604085016115ef565b6020820152611ccb8460c0850161154f565b60408201529392505050565b600181811c90821680611ceb57607f821691505b602082108114156116da57634e487b7160e01b600052602260045260246000fd5b601f82111561190f57600081815260208120601f850160051c81016020861015611d335750805b601f850160051c820191505b81811015611d5257828155600101611d3f565b505050505050565b67ffffffffffffffff831115611d7257611d7261144c565b611d8683611d808354611cd7565b83611d0c565b6000601f841160018114611dba5760008515611da25750838201355b600019600387901b1c1916600186901b178355611e14565b600083815260209020601f19861690835b82811015611deb5786850135825560209485019460019092019101611dcb565b5086821015611e085760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b634e487b7160e01b600052601160045260246000fd5b818160005b6002811015611e55578235825560209092019160019182019101611e36565b50505060026040830181830160005b83811015611d52578235825560209092019160019182019101611e64565b6000808335601e19843603018112611e9957600080fd5b83018035915067ffffffffffffffff821115611eb457600080fd5b6020019150600681901b3603821315611af257600080fd5b68010000000000000000831115611ee557611ee561144c565b805483825580841015611f70577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001818311811615611f2757611f27611e1b565b818611811615611f3957611f39611e1b565b60008481526020812090925086821b81019084831b015b80821015611f6b578382558383830155600282019150611f50565b505050505b5060008181526020812083915b85811015611d525782358255602083013560018301556040929092019160029190910190600101611f7d565b8135601e19833603018112611fbd57600080fd5b8201803567ffffffffffffffff811115611fd657600080fd5b602082019150803603821315611feb57600080fd5b611ff6818385611d5a565b5050602082013560018201556040820135600282015561201c6060830160038301611e31565b61202c60e0830160078301611e31565b61203d6101608301600b8301611e31565b61204b6101e0830183611e82565b6118ec8183600f8601611ecc565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081833760408201600081526040808301823750600060808301525050565b6000808335601e198436030181126120b957600080fd5b830160208101925035905067ffffffffffffffff8111156120d957600080fd5b8060061b3603831315611af257600080fd5b81835260208301925060008160005b84811015612122578135865260208083013590870152604095860195909101906001016120fa565b5093949350505050565b8381528260208201526060604082015260008235601e1984360301811261215257600080fd5b8301803567ffffffffffffffff81111561216b57600080fd5b80360385131561217a57600080fd5b610200606085015261219461026085018260208501612059565b60208601356080860152604086013560a086015291506121b19050565b6121c160c0840160608601612082565b6121d2610140840160e08601612082565b6121e46101c084016101608601612082565b6121f26101e08501856120a2565b848303605f190161024086015261220a8382846120eb565b98975050505050505050565b6000808335601e1984360301811261222d57600080fd5b83018035915067ffffffffffffffff82111561224857600080fd5b6020019150600581901b3603821315611af257600080fd5b6000821982111561227357612273611e1b565b500190565b634e487b7160e01b600052603260045260246000fd5b60008235609e198336030181126122a457600080fd5b9190910192915050565b60006000198214156122c2576122c2611e1b565b5060010190565b6000828210156122db576122db611e1b565b50039056fea26469706673582212202a8713d3d7f7e4c2542fffdbef206b07ff2c7c78b0b981445947bea8c260223e64736f6c634300080c0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

type VerifierStubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifierStub__factory extends ContractFactory {
  constructor(...args: VerifierStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifierStub> {
    return super.deploy(overrides || {}) as Promise<VerifierStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VerifierStub {
    return super.attach(address) as VerifierStub;
  }
  override connect(signer: Signer): VerifierStub__factory {
    return super.connect(signer) as VerifierStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierStubInterface {
    return new utils.Interface(_abi) as VerifierStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifierStub {
    return new Contract(address, _abi, signerOrProvider) as VerifierStub;
  }
}
