/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CommitmentsStub,
  CommitmentsStubInterface,
} from "../../../../contracts/teststubs/logic/CommitmentsStub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "doubleInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_leafHashes",
        type: "bytes32[]",
      },
    ],
    name: "insertLeavesStub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "setNextLeafIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b6200042e565b600054610100900460ff1615808015620000435750600054600160ff909116105b8062000073575062000060306200015f60201b620003751760201c565b15801562000073575060005460ff166001145b620000dc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000100576000805461ff0019166101001790555b620001156200016e60201b620003911760201c565b80156200015c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620001db5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000d3565b620002167f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160008051602062000f3b83398151915262000386565b6006556000620002567f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160008051602062000f3b83398151915262000386565b905060005b6010811015620002ba5781600682601081106200027c576200027c620003a9565b01558160168260108110620002955762000295620003a9565b0155620002a38280620002ed565b9150620002b2600182620003bf565b90506200025b565b5060038190556004819055600554600090815260266020908152604080832093835292905220805460ff19166001179055565b60408051808201825283815260208101839052905163014cf2b360e51b815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e5660916200033991600401620003e1565b602060405180830381865af415801562000357573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200037d919062000414565b90505b92915050565b600082620003a457634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b808201808211156200038057634e487b7160e01b600052601160045260246000fd5b60408101818360005b60028110156200040b578151835260209283019290910190600101620003ea565b50505092915050565b6000602082840312156200042757600080fd5b5051919050565b610afd806200043e6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80636650331511610081578063ec7329591161005b578063ec732959146101b0578063ec951ee4146101b8578063f19ea903146101cb57600080fd5b80636650331514610156578063c718dbda1461015f578063e82955881461019d57600080fd5b806323f62b05116100b257806323f62b05146101325780632eb4a7ab1461013a57806338bf282e1461014357600080fd5b80630be4f422146100d95780630c9c0c8d146100f557806321c368eb1461011d575b600080fd5b6100e260025481565b6040519081526020015b60405180910390f35b61010861010336600461080a565b6101f9565b604080519283526020830191909152016100ec565b61013061012b366004610839565b61024e565b005b61013061025a565b6100e260035481565b6100e26101513660046108f7565b610264565b6100e260055481565b61018d61016d3660046108f7565b602660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100ec565b6100e26101ab36600461080a565b610311565b6100e2610328565b6101306101c636600461080a565b600255565b61018d6101d93660046108f7565b600160209081526000928352604080842090915290825290205460ff1681565b60008061020860106002610a13565b6001846002546102189190610a1f565b6102229190610a32565b1061023f57600554610235906001610a1f565b9360009350915050565b60055460025491509150915091565b61025781610550565b50565b610262610391565b565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e5660916102c791600401610a45565b602060405180830381865af41580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610a76565b90505b92915050565b6006816010811061032157600080fd5b0154905081565b6103727f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a8f565b81565b73ffffffffffffffffffffffffffffffffffffffff163b151590565b600054610100900460ff1661042c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840160405180910390fd5b6104767f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a8f565b60065560006104c57f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610a8f565b905060005b601081101561051d5781600682601081106104e7576104e7610ab1565b015581601682601081106104fd576104fd610ab1565b01556105098280610264565b9150610516600182610a1f565b90506104ca565b5060038190556004819055600554600090815260266020908152604080832093835292905220805460ff19166001179055565b805161055e60106002610a13565b60018260025461056e9190610a1f565b6105789190610a32565b10610585576105856107e3565b6002805490829060006105988385610a1f565b909155506000905080805b601081101561079257600184901c915060006105c0600286610a8f565b600103610646576105d583600187901c610a32565b935061060e601683601081106105ed576105ed610ab1565b015488838151811061060157610601610ab1565b6020026020010151610264565b87858151811061062057610620610ab1565b6020908102919091010152610636600182610a1f565b9050610643600186610a1f565b94505b8581101561076c57600061065b600188610a32565b82101561068d578761066e836001610a1f565b8151811061067e5761067e610ab1565b602002602001015190506106a5565b600683601081106106a0576106a0610ab1565b015490505b6106b0600188610a32565b8214806106c657506106c3600288610a32565b82145b156106fb578782815181106106dd576106dd610ab1565b6020026020010151601684601081106106f8576106f8610ab1565b01555b61070984600188901c610a32565b945061072e88838151811061072057610720610ab1565b602002602001015182610264565b88868151811061074057610740610ab1565b6020908102919091010152610756600287610a1f565b95506107659050600282610a1f565b9050610646565b82945083600161077c9190610a1f565b955061078b9050600182610a1f565b90506105a3565b50846000815181106107a6576107a6610ab1565b60209081029190910181015160038190556005546000908152602683526040808220928252919092529020805460ff191660011790555050505050565b600454600355600060028190556005805460019290610803908490610a1f565b9091555050565b60006020828403121561081c57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561084c57600080fd5b823567ffffffffffffffff8082111561086457600080fd5b818501915085601f83011261087857600080fd5b81358181111561088a5761088a610823565b8060051b604051601f19603f830116810181811085821117156108af576108af610823565b6040529182528482019250838101850191888311156108cd57600080fd5b938501935b828510156108eb578435845293850193928501926108d2565b98975050505050505050565b6000806040838503121561090a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561096a57816000190482111561095057610950610919565b8085161561095d57918102915b93841c9390800290610934565b509250929050565b6000826109815750600161030b565b8161098e5750600061030b565b81600181146109a457600281146109ae576109ca565b600191505061030b565b60ff8411156109bf576109bf610919565b50506001821b61030b565b5060208310610133831016604e8410600b84101617156109ed575081810a61030b565b6109f7838361092f565b8060001904821115610a0b57610a0b610919565b029392505050565b60006103088383610972565b8082018082111561030b5761030b610919565b8181038181111561030b5761030b610919565b60408101818360005b6002811015610a6d578151835260209283019290910190600101610a4e565b50505092915050565b600060208284031215610a8857600080fd5b5051919050565b600082610aac57634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201a0bed747e65b35b29969a23bf29f2f0b669e97c954308bb8c2f44d9b0368afa64736f6c6343000811003395b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff";

type CommitmentsStubConstructorParams =
  | [linkLibraryAddresses: CommitmentsStubLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentsStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class CommitmentsStub__factory extends ContractFactory {
  constructor(...args: CommitmentsStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        CommitmentsStub__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CommitmentsStubLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CommitmentsStub> {
    return super.deploy(overrides || {}) as Promise<CommitmentsStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CommitmentsStub {
    return super.attach(address) as CommitmentsStub;
  }
  override connect(signer: Signer): CommitmentsStub__factory {
    return super.connect(signer) as CommitmentsStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentsStubInterface {
    return new utils.Interface(_abi) as CommitmentsStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CommitmentsStub {
    return new Contract(address, _abi, signerOrProvider) as CommitmentsStub;
  }
}

export interface CommitmentsStubLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
}
