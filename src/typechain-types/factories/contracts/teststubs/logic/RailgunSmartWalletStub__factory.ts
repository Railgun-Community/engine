/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RailgunSmartWalletStub,
  RailgunSmartWalletStubInterface,
} from "../../../../contracts/teststubs/logic/RailgunSmartWalletStub";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "shieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unshieldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nftFee",
        type: "uint256",
      },
    ],
    name: "FeeChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "nullifier",
        type: "bytes32[]",
      },
    ],
    name: "Nullifiers",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlocklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentPreimage[]",
        name: "commitments",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes32[3]",
            name: "encryptedBundle",
            type: "bytes32[3]",
          },
          {
            internalType: "bytes32",
            name: "shieldKey",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct ShieldCiphertext[]",
        name: "shieldCiphertext",
        type: "tuple[]",
      },
    ],
    name: "Shield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "treeNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startPosition",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "hash",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "bytes32[4]",
            name: "ciphertext",
            type: "bytes32[4]",
          },
          {
            internalType: "bytes32",
            name: "blindedSenderViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blindedReceiverViewingKey",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "annotationData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "memo",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct CommitmentCiphertext[]",
        name: "ciphertext",
        type: "tuple[]",
      },
    ],
    name: "Transact",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    name: "TreasuryChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct TokenData",
        name: "token",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Unshield",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nullifiers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct VerifyingKey",
        name: "verifyingKey",
        type: "tuple",
      },
    ],
    name: "VerifyingKeySet",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "addVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
    ],
    name: "changeFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "changeTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkSafetyVectors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint136",
        name: "_amount",
        type: "uint136",
      },
      {
        internalType: "bool",
        name: "_isInclusive",
        type: "bool",
      },
      {
        internalType: "uint120",
        name: "_feeBP",
        type: "uint120",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData",
        name: "_tokenData",
        type: "tuple",
      },
    ],
    name: "getTokenID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
    ],
    name: "getVerificationKey",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "treeNumber",
            type: "uint16",
          },
          {
            internalType: "uint72",
            name: "minGasPrice",
            type: "uint72",
          },
          {
            internalType: "enum UnshieldType",
            name: "unshield",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "chainID",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "adaptContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "adaptParams",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32[4]",
                name: "ciphertext",
                type: "bytes32[4]",
              },
              {
                internalType: "bytes32",
                name: "blindedSenderViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "blindedReceiverViewingKey",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "annotationData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "memo",
                type: "bytes",
              },
            ],
            internalType: "struct CommitmentCiphertext[]",
            name: "commitmentCiphertext",
            type: "tuple[]",
          },
        ],
        internalType: "struct BoundParams",
        name: "_boundParams",
        type: "tuple",
      },
    ],
    name: "hashBoundParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_commitmentPreimage",
        type: "tuple",
      },
    ],
    name: "hashCommitment",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint120",
        name: "_shieldFee",
        type: "uint120",
      },
      {
        internalType: "uint120",
        name: "_unshieldFee",
        type: "uint120",
      },
      {
        internalType: "uint256",
        name: "_nftFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initializeRailgunLogic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastEventBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newTreeStub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlocklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "vector",
        type: "uint256",
      },
    ],
    name: "removeVector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_treeNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_nullifier",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "_setting",
        type: "bool",
      },
    ],
    name: "setNullifier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nullifiers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_commitments",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
    ],
    name: "setVerificationKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "preimage",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32[3]",
                name: "encryptedBundle",
                type: "bytes32[3]",
              },
              {
                internalType: "bytes32",
                name: "shieldKey",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldCiphertext",
            name: "ciphertext",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldRequest[]",
        name: "_shieldRequests",
        type: "tuple[]",
      },
    ],
    name: "shield",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "shieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "snarkSafetyVector",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "sumCommitments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlocklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenIDMapping",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenSubID",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
    ],
    name: "transact",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unshieldFee",
    outputs: [
      {
        internalType: "uint120",
        name: "",
        type: "uint120",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "npk",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "value",
            type: "uint120",
          },
        ],
        internalType: "struct CommitmentPreimage",
        name: "_note",
        type: "tuple",
      },
    ],
    name: "validateCommitmentPreimage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "validateTransaction",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction",
        name: "_transaction",
        type: "tuple",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "artifactsIPFSHash",
            type: "string",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "alpha1",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "beta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "gamma2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "delta2",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point[]",
            name: "ic",
            type: "tuple[]",
          },
        ],
        internalType: "struct VerifyingKey",
        name: "_verifyingKey",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "a",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[2]",
                name: "x",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2]",
                name: "y",
                type: "uint256[2]",
              },
            ],
            internalType: "struct G2Point",
            name: "b",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "x",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "y",
                type: "uint256",
              },
            ],
            internalType: "struct G1Point",
            name: "c",
            type: "tuple",
          },
        ],
        internalType: "struct SnarkProof",
        name: "_proof",
        type: "tuple",
      },
      {
        internalType: "uint256[]",
        name: "_inputs",
        type: "uint256[]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50615a6d80620000216000396000f3fe6080604052600436106102e75760003560e01c806371c5345511610184578063c718dbda116100d6578063e82955881161008a578063f19ea90311610064578063f19ea903146108f8578063f2fde38b14610933578063f71a55f81461095357600080fd5b8063e8295588146108a3578063ec732959146108c3578063ee990783146108d857600080fd5b8063cd3efe06116100bb578063cd3efe061461085a578063d8ae136a14610870578063dc7c9a1f1461088357600080fd5b8063c718dbda146107ff578063cc1f73fd1461083a57600080fd5b80639071adc011610138578063ab63e69c11610112578063ab63e69c14610768578063b14f2a3914610788578063b8ceaef2146107a857600080fd5b80639071adc01461071257806392d3c7a414610728578063a33952a91461074857600080fd5b8063815b534f11610169578063815b534f146106af5780638c6179f7146106df5780638da5cb5b146106f457600080fd5b806371c53455146106625780637b12ae831461068257600080fd5b80632ebfe12a1161023d57806359bb6199116101f157806366503315116101cb57806366503315146106175780636cefafaa1461062d578063715018a61461064d57600080fd5b806359bb61991461059f578063617e1b17146105bf57806361d027b3146105df57600080fd5b806338bf282e1161022257806338bf282e146104fa57806343c887301461051a5780634cfff4f61461055a57600080fd5b80632ebfe12a146104ba5780632ec0f359146104da57600080fd5b80630c9c0c8d1161029f57806318610eb21161027957806318610eb21461043f57806328f89c3a146104845780632eb4a7ab146104a457600080fd5b80630c9c0c8d146103aa578063129458f4146103df578063174768911461041f57600080fd5b8063053ed12a116102d0578063053ed12a1461033e5780630804a4ee146103715780630be4f4221461038657600080fd5b806301c37790146102ec578063044a40c314610329575b600080fd5b3480156102f857600080fd5b5060fa5461030c906001600160781b031681565b6040516001600160781b0390911681526020015b60405180910390f35b61033c610337366004613ef9565b610973565b005b34801561034a57600080fd5b5060fa5461030c906f0100000000000000000000000000000090046001600160781b031681565b34801561037d57600080fd5b5061033c610c40565b34801561039257600080fd5b5061039c60665481565b604051908152602001610320565b3480156103b657600080fd5b506103ca6103c5366004613f6f565b610ccc565b60408051928352602083019190915201610320565b3480156103eb57600080fd5b5061040f6103fa366004613f6f565b60fc6020526000908152604090205460ff1681565b6040519015158152602001610320565b34801561042b57600080fd5b5061040f61043a366004613f88565b610d21565b34801561044b57600080fd5b5061033c61045a366004613fd2565b60009283526065602090815260408085209385529290529120805460ff1916911515919091179055565b34801561049057600080fd5b5061039c61049f36600461400b565b6110c6565b3480156104b057600080fd5b5061039c60675481565b3480156104c657600080fd5b5061040f6104d536600461439e565b61111d565b3480156104e657600080fd5b5061033c6104f53660046144b2565b611142565b34801561050657600080fd5b5061039c6105153660046144ff565b6111b2565b34801561052657600080fd5b5061053a61053536600461453d565b611256565b604080516001600160781b03938416815292909116602083015201610320565b34801561056657600080fd5b5061033c610575366004613fd2565b6000928352608a602090815260408085209385529290529120805460ff1916911515919091179055565b3480156105ab57600080fd5b5061039c6105ba3660046145e6565b6112e8565b3480156105cb57600080fd5b5061040f6105da366004614628565b61135d565b3480156105eb57600080fd5b5060f9546105ff906001600160a01b031681565b6040516001600160a01b039091168152602001610320565b34801561062357600080fd5b5061039c60695481565b34801561063957600080fd5b5061033c610648366004613f6f565b611453565b34801561065957600080fd5b5061033c611476565b34801561066e57600080fd5b5061039c61067d3660046146b5565b61148a565b34801561068e57600080fd5b506106a261069d3660046144ff565b61153e565b604051610320919061478d565b3480156106bb57600080fd5b5061040f6106ca366004614869565b60956020526000908152604090205460ff1681565b3480156106eb57600080fd5b5061033c611803565b34801561070057600080fd5b506033546001600160a01b03166105ff565b34801561071e57600080fd5b5061039c60fb5481565b34801561073457600080fd5b5061039c610743366004614886565b61180b565b34801561075457600080fd5b5061033c6107633660046148a2565b611869565b34801561077457600080fd5b5061033c6107833660046145e6565b611a54565b34801561079457600080fd5b5061033c6107a3366004614869565b611b74565b3480156107b457600080fd5b506107f06107c3366004613f6f565b60fd602052600090815260409020805460019091015460ff82169161010090046001600160a01b03169083565b6040516103209392919061493a565b34801561080b57600080fd5b5061040f61081a3660046144ff565b608a60209081526000928352604080842090915290825290205460ff1681565b34801561084657600080fd5b5061033c610855366004614964565b611bfd565b34801561086657600080fd5b5061039c60fe5481565b61033c61087e3660046145e6565b611e10565b34801561088f57600080fd5b5061033c61089e366004613f6f565b612096565b3480156108af57600080fd5b5061039c6108be366004613f6f565b6120b6565b3480156108cf57600080fd5b5061039c6120cd565b3480156108e457600080fd5b5061040f6108f3366004613f88565b61211a565b34801561090457600080fd5b5061040f6109133660046144ff565b606560209081526000928352604080842090915290825290205460ff1681565b34801561093f57600080fd5b5061033c61094e366004614869565b61261a565b34801561095f57600080fd5b5061033c61096e3660046145e6565b6126a7565b60008167ffffffffffffffff81111561098e5761098e614046565b6040519080825280602002602001820160405280156109b7578160200160208202803683370190505b50905060008267ffffffffffffffff8111156109d5576109d5614046565b604051908082528060200260200182016040528015610a0e57816020015b6109fb613d79565b8152602001906001900390816109f35790505b50905060008367ffffffffffffffff811115610a2c57610a2c614046565b604051908082528060200260200182016040528015610a6557816020015b610a52613db2565b815260200190600190039081610a4a5790505b50905060005b84811015610bea57610a97868683818110610a8857610a886149a0565b9050610120020160000161135d565b610b0e5760405162461bcd60e51b815260206004820152602c60248201527f5261696c67756e536d61727457616c6c65743a204e6f746520707265696d616760448201527f6520697320696e76616c6964000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610b32868683818110610b2357610b236149a0565b905061012002016000016127ca565b838281518110610b4457610b446149a0565b6020026020010181905250610b71838281518110610b6457610b646149a0565b602002602001015161148a565b848281518110610b8357610b836149a0565b602002602001018181525050858582818110610ba157610ba16149a0565b9050610120020160a001803603810190610bbb91906149b6565b828281518110610bcd57610bcd6149a0565b6020908102919091010152610be3600182614a59565b9050610a6b565b507fc3821e11e71307afd1d94a490660178ff37aefdd3c0514e5dd08937bd7024f346069546066548484604051610c249493929190614b01565b60405180910390a1610c3583612a2d565b50504360fe55505050565b7f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711450805460ff1916600117905533600090815260fc602052604090205480610cc95760405162461bcd60e51b815260206004820152601c60248201527f5261696c67756e4c6f6769633a20556e7361666520766563746f7273000000006044820152606401610b05565b50565b600080610cdb60106002614c75565b600184606654610ceb9190614a59565b610cf59190614c81565b10610d1257606954610d08906001614a59565b9360009350915050565b60695460665491509150915091565b6000610d31610160830183614c94565b610d42906040810190602001614ccd565b68ffffffffffffffffff163a1015610d5c57506000919050565b6000610d6c610160840184614c94565b610d7d9060a0810190608001614869565b6001600160a01b031614158015610dbb575033610d9e610160840184614c94565b610daf9060a0810190608001614869565b6001600160a01b031614155b15610dc857506000919050565b46610dd7610160840184614c94565b610de8906080810190606001614d00565b67ffffffffffffffff1614610dff57506000919050565b608a6000610e11610160850185614c94565b610e1f906020810190614d2d565b61ffff16815260208082019290925260409081016000908120610100860135825290925290205460ff16610e5557506000919050565b60005b610e66610120840184614d48565b9050811015610f015760656000610e81610160860186614c94565b610e8f906020810190614d2d565b61ffff168152602001908152602001600020600084806101200190610eb49190614d48565b84818110610ec457610ec46149a0565b602090810292909201358352508101919091526040016000205460ff1615610eef5750600092915050565b610efa600182614a59565b9050610e58565b506000610f12610160840184614c94565b610f23906060810190604001614d92565b6002811115610f3457610f34614906565b1461107c576001610f49610140840184614d48565b610f54929150614c81565b610f62610160840184614c94565b610f709060c0810190614d48565b905014610f7f57506000919050565b60006002610f91610160850185614c94565b610fa2906060810190604001614d92565b6002811115610fb357610fb3614906565b0361100f5760408051606081019091523381526110089060208101610fe13687900387016101a08801614886565b8152602001610ff861022087016102008801614daf565b6001600160781b0316905261148a565b9050611028565b61102561067d36859003850161018086016146b5565b90505b611036610140840184614d48565b6001611046610140870187614d48565b611051929150614c81565b818110611060576110606149a0565b9050602002013581146110765750600092915050565b506110b7565b61108a610140830183614d48565b905061109a610160840184614c94565b6110a89060c0810190614d48565b9050146110b757506000919050565b6110c08261211a565b92915050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016110fa9190614f45565b6040516020818303038152906040528051906020012060001c6110c09190615010565b60006111388461113236869003860186615024565b84612cc0565b90505b9392505050565b61114a612e61565b600083815260c7602090815260408083208584529091529020819061116f8282615318565b9050507f3d09e10d1c966d01c4a2c14d0ac9af253486aa5e99b6cffe9019c4d43eb1fb238383836040516111a59392919061541c565b60405180910390a1505050565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e5660916112159160040161550a565b602060405180830381865af4158015611232573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b919061553b565b600080848180861561129f576127106112786001600160781b03881685615554565b6112829190615587565b61128c90846155b7565b915061129882846155b7565b90506112db565b829150816112af876127106155e8565b6001600160781b03166112c484612710615554565b6112ce9190615587565b6112d891906155b7565b90505b9097909650945050505050565b600080805b8381101561135557848482818110611307576113076149a0565b90506020028101906113199190615608565b61132890610160810190614c94565b6113369060c0810190614d48565b611341915083614a59565b915061134e600182614a59565b90506112ed565b509392505050565b600061136f60a0830160808401614daf565b6001600160781b031660000361138757506000919050565b6095600061139b6060850160408601614869565b6001600160a01b0316815260208101919091526040016000205460ff16156113c557506000919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018235106113f557506000919050565b60016114076040840160208501614d92565b600281111561141857611418614906565b14801561143e575061143060a0830160808401614daf565b6001600160781b0316600114155b1561144b57506000919050565b506001919050565b61145b612e61565b600090815260fc60205260409020805460ff19166001179055565b61147e612e61565b6114886000612ebb565b565b600073__$0d67abb2a30631c14ae5d39aeb2a4b8972$__635a53025d6040518060600160405280856000015181526020016114c8866020015161180b565b815260200185604001516001600160781b031660001b8152506040518263ffffffff1660e01b81526004016114fd919061561f565b602060405180830381865af415801561151a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c0919061553b565b611546613dc5565b600083815260c76020908152604080832085845290915290819020815160c081019092528054829082906115799061506a565b80601f01602080910402602001604051908101604052809291908181526020018280546115a59061506a565b80156115f25780601f106115c7576101008083540402835291602001916115f2565b820191906000526020600020905b8154815290600101906020018083116115d557829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161163f57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611675575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116116b957505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116116ef5750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161173357505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311611769575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b828210156117f4578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906117ae565b50505091525090949350505050565b611488612f25565b6000808251600281111561182157611821614906565b036118375750602001516001600160a01b031690565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001826040516020016110fa9190615647565b600054610100900460ff16158080156118895750600054600160ff909116105b806118a35750303b1580156118a3575060005460ff166001145b6119155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610b05565b6000805460ff191660011790558015611938576000805461ff0019166101001790555b611940612f4c565b611948612fbf565b61195186611b74565b61195c858585611bfd565b6119658261261a565b60fc6020527f18a261e1efd282dd636becf59b85995514ab34d1c1c9a3e1128aac786b5472de8054600160ff1991821681179092557f35cc25be27a7e44e9e6eb23f103c8980fe6d01e7b6e981c2c07b23911ac79e8b805482168317905573cc29dbf69896278a0c6b886ef8cc30a56fa6164a6000527f7e1bfa3bd01233beed03b737790a265ae14e11664e22f82316c6f65a13e15c8c805490911690911790558015611a4c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b611a5c612e61565b60005b81811015611b6f5760956000848484818110611a7d57611a7d6149a0565b9050602002016020810190611a929190614869565b6001600160a01b0316815260208101919091526040016000205460ff1615611b5d5760956000848484818110611aca57611aca6149a0565b9050602002016020810190611adf9190614869565b6001600160a01b031681526020810191909152604001600020805460ff19169055828282818110611b1257611b126149a0565b9050602002016020810190611b279190614869565b6001600160a01b03167f2ef13bd1aff17b0f9c85afaf228e84266c8394d9d381735e83fe23f607113e2e60405160405180910390a25b611b68600182614a59565b9050611a5f565b505050565b611b7c612e61565b60f9546001600160a01b03828116911614610cc95760f980547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383169081179091556040519081527f1ac54af2084ba0e4b86b7bc54b978ce7dd4ca046d3dec89d7c8963873820c0bb9060200160405180910390a150565b611c05612e61565b60fa546001600160781b038481169116141580611c43575060fa546001600160781b038381166f010000000000000000000000000000009092041614155b80611c50575060fb548114155b15611b6f57611c626002612710615655565b6001600160781b0316836001600160781b03161115611ce85760405162461bcd60e51b8152602060048201526024808201527f5261696c67756e4c6f6769633a20536869656c6420466565206578636565647360448201527f20353025000000000000000000000000000000000000000000000000000000006064820152608401610b05565b611cf56002612710615655565b6001600160781b0316826001600160781b03161115611d7c5760405162461bcd60e51b815260206004820152602660248201527f5261696c67756e4c6f6769633a20556e736869656c642046656520657863656560448201527f64732035302500000000000000000000000000000000000000000000000000006064820152608401610b05565b60fa80546001600160781b038581167fffff00000000000000000000000000000000000000000000000000000000000090921682176f010000000000000000000000000000009186169182021790925560fb8390556040805191825260208201929092529081018290527f472cfc031d19bcc54db01976ce486cc12dc3d489e6adced1eb5a782cd55cfdf2906060016111a5565b6000611e1c83836112e8565b905060008167ffffffffffffffff811115611e3957611e39614046565b604051908082528060200260200182016040528015611e62578160200160208202803683370190505b5090506000808367ffffffffffffffff811115611e8157611e81614046565b604051908082528060200260200182016040528015611eba57816020015b611ea7613e28565b815260200190600190039081611e9f5790505b50905060005b8581101561203057611eef878783818110611edd57611edd6149a0565b905060200281019061043a9190615608565b611f615760405162461bcd60e51b815260206004820152602b60248201527f5261696c67756e536d61727457616c6c65743a205472616e73616374696f6e2060448201527f69736e27742076616c69640000000000000000000000000000000000000000006064820152608401610b05565b611f90878783818110611f7657611f766149a0565b9050602002810190611f889190615608565b85858561314e565b92506000878783818110611fa657611fa66149a0565b9050602002810190611fb89190615608565b611fc790610160810190614c94565b611fd8906060810190604001614d92565b6002811115611fe957611fe9614906565b1461201e5761201e878783818110612003576120036149a0565b90506020028101906120159190615608565b61018001613379565b612029600182614a59565b9050611ec0565b5060008061203e8551610ccc565b915091507f56a618cda1e34057b7f849a5792f6c8587a2dbe11c83d0254e72cb3daffda7d182828786604051612077949392919061566f565b60405180910390a161208885612a2d565b50504360fe55505050505050565b61209e612e61565b600090815260fc60205260409020805460ff19169055565b606a81601081106120c657600080fd5b0154905081565b6121177f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615010565b81565b60008061212b610120840184614d48565b91506000905061213f610140850185614d48565b600084815260c760209081526040808320848452909152808220815160c08101909252805493955091935091829082906121789061506a565b80601f01602080910402602001604051908101604052809291908181526020018280546121a49061506a565b80156121f15780601f106121c6576101008083540402835291602001916121f1565b820191906000526020600020905b8154815290600101906020018083116121d457829003601f168201915b505050918352505060408051808201825260018401548152600280850154602080840191909152840191909152815160808101808452938301939092600386019284929183019184919082845b81548152602001906001019080831161223e57505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311612274575050509190925250505081526040805160808101808352602090930192909160078501918391820190839060029082845b8154815260200190600101908083116122b857505050918352505060408051808201918290526020909201919060028481019182845b8154815260200190600101908083116122ee5750505091909252505050815260408051608081018083526020909301929091600b8501918391820190839060029082845b81548152602001906001019080831161233257505050918352505060408051808201918290526020909201919060028481019182845b815481526020019060010190808311612368575050505050815250508152602001600f8201805480602002602001604051908101604052809291908181526020016000905b828210156123f3578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906123ad565b505050915250506020810151519091506000036124525760405162461bcd60e51b815260206004820152601560248201527f56657269666965723a204b6579206e6f742073657400000000000000000000006044820152606401610b05565b600082612460856002614a59565b61246a9190614a59565b67ffffffffffffffff81111561248257612482614046565b6040519080825280602002602001820160405280156124ab578160200160208202803683370190505b50905085610100013560001c816000815181106124ca576124ca6149a0565b60209081029190910101526124e661049f610160880188614c94565b816001815181106124f9576124f96149a0565b60200260200101818152505060005b848110156125715761251e610120880188614d48565b8281811061252e5761252e6149a0565b6020029190910135905082612544836002614a59565b81518110612554576125546149a0565b602090810291909101015261256a600182614a59565b9050612508565b5060005b838110156125e95761258b610140880188614d48565b8281811061259b5761259b6149a0565b6020029190910135905082826125b2886002614a59565b6125bc9190614a59565b815181106125cc576125cc6149a0565b60209081029190910101526125e2600182614a59565b9050612575565b5060006125f783888461111d565b905061deac193201612610575060019695505050505050565b9695505050505050565b612622612e61565b6001600160a01b03811661269e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610b05565b610cc981612ebb565b6126af612e61565b60005b81811015611b6f57609560008484848181106126d0576126d06149a0565b90506020020160208101906126e59190614869565b6001600160a01b0316815260208101919091526040016000205460ff166127b85760016095600085858581811061271e5761271e6149a0565b90506020020160208101906127339190614869565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061276d5761276d6149a0565b90506020020160208101906127829190614869565b6001600160a01b03167f46742f555939247f80b50a8ca895a561933c48bc9a06ccb0c812e97ac723d33f60405160405180910390a25b6127c3600182614a59565b90506126b2565b6127d2613d79565b6127da613d79565b60006127ec6040850160208601614d92565b60028111156127fd576127fd614906565b036128cd5760006128146060850160408601614869565b905060008061284461282c60a0880160808901614daf565b60fa546001600160781b039182169160019116611256565b91509150604051806060016040528087600001358152602001876020018036038101906128719190614886565b81526001600160781b03841660209091018190529094506128a0906001600160a01b0385169033903090613576565b60f9546128c5906001600160a01b03858116913391166001600160781b038516613576565b5050506110c0565b60016128df6040850160208601614d92565b60028111156128f0576128f0614906565b036129bf5760006129076060850160408601614869565b9050612918368590038501856146b5565b91506020840160fd600061293461074336899003890185614886565b8152602001908152602001600020818161294e9190615784565b50506040516323b872dd60e01b8152336004820152306024820152606085013560448201526001600160a01b038216906323b872dd90606401600060405180830381600087803b1580156129a157600080fd5b505af11580156129b5573d6000803e3d6000fd5b50505050506110c0565b60405162461bcd60e51b815260206004820152602760248201527f5261696c67756e4c6f6769633a2045524331313535206e6f742079657420737560448201527f70706f72746564000000000000000000000000000000000000000000000000006064820152608401610b05565b8051612a3b60106002614c75565b600182606654612a4b9190614a59565b612a559190614c81565b10612a6257612a62612f25565b606680549082906000612a758385614a59565b909155506000905080805b6010811015612c6f57600184901c91506000612a9d600286615010565b600103612b2357612ab283600187901c614c81565b9350612aeb607a8360108110612aca57612aca6149a0565b0154888381518110612ade57612ade6149a0565b60200260200101516111b2565b878581518110612afd57612afd6149a0565b6020908102919091010152612b13600182614a59565b9050612b20600186614a59565b94505b85811015612c49576000612b38600188614c81565b821015612b6a5787612b4b836001614a59565b81518110612b5b57612b5b6149a0565b60200260200101519050612b82565b606a8360108110612b7d57612b7d6149a0565b015490505b612b8d600188614c81565b821480612ba35750612ba0600288614c81565b82145b15612bd857878281518110612bba57612bba6149a0565b6020026020010151607a8460108110612bd557612bd56149a0565b01555b612be684600188901c614c81565b9450612c0b888381518110612bfd57612bfd6149a0565b6020026020010151826111b2565b888681518110612c1d57612c1d6149a0565b6020908102919091010152612c33600287614a59565b9550612c429050600282614a59565b9050612b23565b829450836001612c599190614a59565b9550612c689050600182614a59565b9050612a80565b5084600081518110612c8357612c836149a0565b60209081029190910181015160678190556069546000908152608a83526040808220928252919092529020805460ff191660011790555050505050565b6040805180820190915260008082526020820181905290815b8351811015612df9577f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f0000001848281518110612d1557612d156149a0565b602002602001015110612d905760405162461bcd60e51b815260206004820152602160248201527f536e61726b3a20496e707574203e20534e41524b5f5343414c41525f4649454c60448201527f44000000000000000000000000000000000000000000000000000000000000006064820152608401610b05565b612de582612de08860a00151846001612da99190614a59565b81518110612db957612db96149a0565b6020026020010151878581518110612dd357612dd36149a0565b6020026020010151613614565b6136d2565b9150612df2600182614a59565b9050612cd9565b50612e22818660a00151600081518110612e1557612e156149a0565b60200260200101516136d2565b9050612e58612e34856000015161377e565b856020015187602001518860400151858a606001518a604001518c6080015161392c565b95945050505050565b6033546001600160a01b031633146114885760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b05565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606854606755600060668190556069805460019290612f45908490614a59565b9091555050565b600054610100900460ff16612fb75760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b611488613ac3565b600054610100900460ff1661302a5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b6130747f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615010565b606a5560006130c37f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff615010565b905060005b601081101561311b5781606a82601081106130e5576130e56149a0565b015581607a82601081106130fb576130fb6149a0565b015561310782806111b2565b9150613114600182614a59565b90506130c8565b50606781905560688190556069546000908152608a6020908152604080832093835292905220805460ff19166001179055565b6000805b613160610120870187614d48565b90508110156131fa5760016065600061317d6101608a018a614c94565b61318b906020810190614d2d565b61ffff1681526020019081526020016000206000888061012001906131b09190614d48565b858181106131c0576131c06149a0565b60209081029290920135835250810191909152604001600020805460ff19169115159190911790556131f3600182614a59565b9050613152565b507f7bfb7450ed15408c85c71b9bbd3fbbdac09b8a7fc80443dc707c4c6ac353870061322a610160870187614c94565b613238906020810190614d2d565b613246610120880188614d48565b6040516132559392919061580b565b60405180910390a160005b61326e610160870187614c94565b61327c9060c0810190614d48565b905081101561335157613293610140870187614d48565b828181106132a3576132a36149a0565b905060200201358582866132b79190614a59565b815181106132c7576132c76149a0565b60209081029190910101526132e0610160870187614c94565b6132ee9060c0810190614d48565b828181106132fe576132fe6149a0565b90506020028101906133109190615868565b6133199061587e565b836133248387614a59565b81518110613334576133346149a0565b602090810291909101015261334a600182614a59565b9050613260565b50613360610160860186614c94565b61336e9060c0810190614d48565b612e58915084614a59565b600061338b6040830160208401614d92565b600281111561339c5761339c614906565b036134845760006133b36060830160408401614869565b90506000806133f66133cb60a0860160808701614daf565b60fa546001600160781b03918216916001916f01000000000000000000000000000000900416611256565b90925090506134196001600160a01b03841685356001600160781b038516613b37565b60f95461343c906001600160a01b0385811691166001600160781b038416613b37565b6040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf052849061347690863590602088019086908690615987565b60405180910390a150505050565b60016134966040830160208401614d92565b60028111156134a7576134a7614906565b036129bf5760006134be6060830160408401614869565b6040516323b872dd60e01b81523060048201526001600160a01b0384358116602483015260608501356044830152919250908216906323b872dd90606401600060405180830381600087803b15801561351657600080fd5b505af115801561352a573d6000803e3d6000fd5b50506040517fd93cf895c7d5b2cd7dc7a098b678b3089f37d91f48d9b83a0800a91cbdf05284925061356a915084359060208601906001906000906159c6565b60405180910390a15050565b6040516001600160a01b038085166024830152831660448201526064810182905261360e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613b80565b50505050565b6040805180820190915260008082526020820152613630613e5c565b835181526020808501519082015260408082018490526000908360608460076107d05a03fa9050806136ca5760405162461bcd60e51b815260206004820152602360248201527f536e61726b3a205363616c6172204d756c7469706c69636174696f6e2046616960448201527f6c656400000000000000000000000000000000000000000000000000000000006064820152608401610b05565b505092915050565b60408051808201909152600080825260208201526136ee613e7a565b83518152602080850151818301528351604080840191909152848201516060840152805180820182526000808252928101839052908160808560066107d05a03fa915081612e585760405162461bcd60e51b815260206004820152601160248201527f536e61726b3a20416464204661696c65640000000000000000000000000000006044820152606401610b05565b604080518082019091526000808252602082015281511580156137a357506020820151155b156137c1575050604080518082019091526000808252602082015290565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351800990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd478351820990507f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760038208905060007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd476020850151800990508181146138b35760405162461bcd60e51b815260206004820152601760248201527f536e61726b3a20496e76616c6964206e65676174696f6e0000000000000000006044820152606401610b05565b6040518060400160405280856000015181526020017f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4786602001516138f89190615010565b613922907f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47614c81565b9052949350505050565b6040805161030081018252895181526020808b015181830152895151928201929092528851820151606082015288820180515160808301525182015160a0820152875160c08201528782015160e08201528651516101008201528651820151610120820152868201805151610140830152518201516101608201528551610180820152858201516101a08201528451516101c082015284518201516101e08201528482018051516102008301525182015161022082015283516102408201528382015161026082015282515161028082015282518201516102a08201528282018051516102c083015251909101516102e0820152600090613a2b613e98565b60006020826103008560086107d05a03fa905080613ab15760405162461bcd60e51b815260206004820152602260248201527f536e61726b3a2050616972696e6720566572696669636174696f6e204661696c60448201527f65640000000000000000000000000000000000000000000000000000000000006064820152608401610b05565b505115159a9950505050505050505050565b600054610100900460ff16613b2e5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610b05565b61148833612ebb565b6040516001600160a01b038316602482015260448101829052611b6f9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016135aa565b6000613bd5826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316613c659092919063ffffffff16565b805190915015611b6f5780806020019051810190613bf391906159f5565b611b6f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610b05565b60606111388484600085856001600160a01b0385163b613cc75760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610b05565b600080866001600160a01b03168587604051613ce39190615a12565b60006040518083038185875af1925050503d8060008114613d20576040519150601f19603f3d011682016040523d82523d6000602084013e613d25565b606091505b5091509150613d35828286613d40565b979650505050505050565b60608315613d4f57508161113b565b825115613d5f5782518084602001fd5b8160405162461bcd60e51b8152600401610b059190615a24565b604080516060808201835260008083528351918201845280825260208281018290529382015290918201905b8152600060209091015290565b6040518060400160405280613da5613e5c565b6040518060c0016040528060608152602001613df4604051806040016040528060008152602001600081525090565b8152602001613e01613eb6565b8152602001613e0e613eb6565b8152602001613e1b613eb6565b8152602001606081525090565b6040518060a00160405280613e3b613e7a565b81526000602082018190526040820152606080820181905260809091015290565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b60405180602001604052806001906020820280368337509192915050565b6040518060400160405280613ec9613edb565b8152602001613ed6613edb565b905290565b60405180604001604052806002906020820280368337509192915050565b60008060208385031215613f0c57600080fd5b823567ffffffffffffffff80821115613f2457600080fd5b818501915085601f830112613f3857600080fd5b813581811115613f4757600080fd5b86602061012083028501011115613f5d57600080fd5b60209290920196919550909350505050565b600060208284031215613f8157600080fd5b5035919050565b600060208284031215613f9a57600080fd5b813567ffffffffffffffff811115613fb157600080fd5b8201610220818503121561113b57600080fd5b8015158114610cc957600080fd5b600080600060608486031215613fe757600080fd5b8335925060208401359150604084013561400081613fc4565b809150509250925092565b60006020828403121561401d57600080fd5b813567ffffffffffffffff81111561403457600080fd5b820160e0818503121561113b57600080fd5b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561407f5761407f614046565b60405290565b60405160c0810167ffffffffffffffff8111828210171561407f5761407f614046565b6040516060810167ffffffffffffffff8111828210171561407f5761407f614046565b60405160a0810167ffffffffffffffff8111828210171561407f5761407f614046565b6040516080810167ffffffffffffffff8111828210171561407f5761407f614046565b604051601f8201601f1916810167ffffffffffffffff8111828210171561413a5761413a614046565b604052919050565b600082601f83011261415357600080fd5b813567ffffffffffffffff81111561416d5761416d614046565b614180601f8201601f1916602001614111565b81815284602083860101111561419557600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156141c457600080fd5b6141cc61405c565b9050813581526020820135602082015292915050565b600082601f8301126141f357600080fd5b6040516040810181811067ffffffffffffffff8211171561421657614216614046565b806040525080604084018581111561422d57600080fd5b845b8181101561424757803583526020928301920161422f565b509195945050505050565b60006080828403121561426457600080fd5b61426c61405c565b905061427883836141e2565b815261428783604084016141e2565b602082015292915050565b600067ffffffffffffffff8211156142ac576142ac614046565b5060051b60200190565b600082601f8301126142c757600080fd5b813560206142dc6142d783614292565b614111565b82815260069290921b840181019181810190868411156142fb57600080fd5b8286015b8481101561431f5761431188826141b2565b8352918301916040016142ff565b509695505050505050565b6000610100828403121561433d57600080fd5b50919050565b600082601f83011261435457600080fd5b813560206143646142d783614292565b82815260059290921b8401810191818101908684111561438357600080fd5b8286015b8481101561431f5780358352918301918301614387565b600080600061014084860312156143b457600080fd5b833567ffffffffffffffff808211156143cc57600080fd5b9085019061020082880312156143e157600080fd5b6143e9614085565b8235828111156143f857600080fd5b61440489828601614142565b82525061441488602085016141b2565b60208201526144268860608501614252565b60408201526144388860e08501614252565b606082015261444b886101608501614252565b60808201526101e08301358281111561446357600080fd5b61446f898286016142b6565b60a0830152509450614484876020880161432a565b935061012086013591508082111561449b57600080fd5b506144a886828701614343565b9150509250925092565b6000806000606084860312156144c757600080fd5b8335925060208401359150604084013567ffffffffffffffff8111156144ec57600080fd5b8401610200818703121561400057600080fd5b6000806040838503121561451257600080fd5b50508035926020909101359150565b80356001600160781b038116811461453857600080fd5b919050565b60008060006060848603121561455257600080fd5b833570ffffffffffffffffffffffffffffffffff8116811461457357600080fd5b9250602084013561458381613fc4565b915061459160408501614521565b90509250925092565b60008083601f8401126145ac57600080fd5b50813567ffffffffffffffff8111156145c457600080fd5b6020830191508360208260051b85010111156145df57600080fd5b9250929050565b600080602083850312156145f957600080fd5b823567ffffffffffffffff81111561461057600080fd5b61461c8582860161459a565b90969095509350505050565b600060a0828403121561433d57600080fd5b60038110610cc957600080fd5b6001600160a01b0381168114610cc957600080fd5b803561453881614647565b60006060828403121561467957600080fd5b6146816140a8565b9050813561468e8161463a565b8152602082013561469e81614647565b806020830152506040820135604082015292915050565b600060a082840312156146c757600080fd5b6146cf6140a8565b823581526146e08460208501614667565b60208201526146f160808401614521565b60408201529392505050565b60005b83811015614718578181015183820152602001614700565b50506000910152565b600081518084526147398160208601602086016146fd565b601f01601f19169290920160200192915050565b8060005b600281101561360e578151845260209384019390910190600101614751565b61477b82825161474d565b6020810151611b6f604084018261474d565b60006020808352835161020080838601526147ac610220860183614721565b91508286015160406147ca8188018380518252602090810151910152565b8088015191506147dd6080880183614770565b606088015191506147f2610100880183614770565b60808801519150614807610180880183614770565b60a0880151878503601f190193880193909352825180855292850193850192600092505b8083101561485c5761484884865180518252602090810151910152565b93850193928101926001929092019161482b565b5091979650505050505050565b60006020828403121561487b57600080fd5b813561113b81614647565b60006060828403121561489857600080fd5b61113b8383614667565b600080600080600060a086880312156148ba57600080fd5b85356148c581614647565b94506148d360208701614521565b93506148e160408701614521565b92506060860135915060808601356148f881614647565b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b60038110610cc957634e487b7160e01b600052602160045260246000fd5b606081016149478561491c565b9381526001600160a01b0392909216602083015260409091015290565b60008060006060848603121561497957600080fd5b61498284614521565b925061499060208501614521565b9150604084013590509250925092565b634e487b7160e01b600052603260045260246000fd5b6000608082840312156149c857600080fd5b6149d061405c565b83601f8401126149df57600080fd5b6040516060810181811067ffffffffffffffff82111715614a0257614a02614046565b604052806060850186811115614a1757600080fd5b855b81811015614a31578035835260209283019201614a19565b50918352503560208201529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156110c0576110c0614a43565b8051614a778161491c565b82526020818101516001600160a01b031690830152604090810151910152565b60008151808452602080850194508084016000805b84811015614af5578251805189845b6003811015614ad857825182529187019190870190600101614abb565b505050840151606089015260809097019691830191600101614aac565b50959695505050505050565b60006080808301878452602087818601526040838187015282885180855260a094508488019150838a0160005b82811015614b6d5781518051855286810151614b4c88870182614a6c565b508501516001600160781b0316848901529286019290850190600101614b2e565b5050508681036060880152614b828189614a97565b9b9a5050505050505050505050565b600181815b80851115614bcc578160001904821115614bb257614bb2614a43565b80851615614bbf57918102915b93841c9390800290614b96565b509250929050565b600082614be3575060016110c0565b81614bf0575060006110c0565b8160018114614c065760028114614c1057614c2c565b60019150506110c0565b60ff841115614c2157614c21614a43565b50506001821b6110c0565b5060208310610133831016604e8410600b8410161715614c4f575081810a6110c0565b614c598383614b91565b8060001904821115614c6d57614c6d614a43565b029392505050565b600061113b8383614bd4565b818103818111156110c0576110c0614a43565b6000823560de19833603018112614caa57600080fd5b9190910192915050565b803568ffffffffffffffffff8116811461453857600080fd5b600060208284031215614cdf57600080fd5b61113b82614cb4565b803567ffffffffffffffff8116811461453857600080fd5b600060208284031215614d1257600080fd5b61113b82614ce8565b803561ffff8116811461453857600080fd5b600060208284031215614d3f57600080fd5b61113b82614d1b565b6000808335601e19843603018112614d5f57600080fd5b83018035915067ffffffffffffffff821115614d7a57600080fd5b6020019150600581901b36038213156145df57600080fd5b600060208284031215614da457600080fd5b813561113b8161463a565b600060208284031215614dc157600080fd5b61113b82614521565b6000808335601e19843603018112614de157600080fd5b830160208101925035905067ffffffffffffffff811115614e0157600080fd5b8060051b36038213156145df57600080fd5b6000808335601e19843603018112614e2a57600080fd5b830160208101925035905067ffffffffffffffff811115614e4a57600080fd5b8036038213156145df57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015614f37578385038a52823560fe19893603018112614ebd578283fd5b8801610100608080838937828101359088015260a0808301359088015260c0614ee881840184614e13565b83838b0152614efa848b018284614e59565b935050505060e0614f0d81840184614e13565b9350888303828a0152614f21838583614e59565b9d8a019d98505050938701935050600101614e9d565b509298975050505050505050565b6020815261ffff614f5583614d1b565b16602082015268ffffffffffffffffff614f7160208401614cb4565b16604082015260006040830135614f878161463a565b614f908161491c565b8060608401525067ffffffffffffffff614fac60608501614ce8565b166080830152614fbe6080840161465c565b6001600160a01b03811660a08401525060a083013560c0830152614fe560c0840184614dca565b60e080850152612e5861010085018284614e82565b634e487b7160e01b600052601260045260246000fd5b60008261501f5761501f614ffa565b500690565b6000610100828403121561503757600080fd5b61503f6140a8565b61504984846141b2565b81526150588460408501614252565b60208201526146f18460c085016141b2565b600181811c9082168061507e57607f821691505b60208210810361433d57634e487b7160e01b600052602260045260246000fd5b601f821115611b6f57600081815260208120601f850160051c810160208610156150c55750805b601f850160051c820191505b81811015611a4c578281556001016150d1565b67ffffffffffffffff8311156150fc576150fc614046565b6151108361510a835461506a565b8361509e565b6000601f841160018114615144576000851561512c5750838201355b600019600387901b1c1916600186901b17835561519e565b600083815260209020601f19861690835b828110156151755786850135825560209485019460019092019101615155565b50868210156151925760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b8160005b60028110156151c6578135838201556020909101906001016151a9565b50506040820160005b60028082106151de575061360e565b8235848301909101556020909101906001016151cf565b6000808335601e1984360301811261520c57600080fd5b83018035915067ffffffffffffffff82111561522757600080fd5b6020019150600681901b36038213156145df57600080fd5b6801000000000000000083111561525857615258614046565b8054838255808410156152df5760017f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808316831461529957615299614a43565b80861686146152aa576152aa614a43565b5060008381526020812086831b81019084841b015b808210156152da5782825582848301556002820191506152bf565b505050505b5060008181526020812083915b85811015611a4c57823582556020830135600183015560409290920191600291909101906001016152ec565b8135601e1983360301811261532c57600080fd5b8201803567ffffffffffffffff81111561534557600080fd5b60208201915080360382131561535a57600080fd5b6153658183856150e4565b5050602082013560018201556040820135600282015561538b60608301600383016151a5565b61539b60e08301600783016151a5565b6153ac6101608301600b83016151a5565b6153ba6101e08301836151f5565b61360e8183600f860161523f565b6040818337604080820160408401375050565b81835260208301925060008160005b84811015615412578135865260208083013590870152604095860195909101906001016153ea565b5093949350505050565b8381528260208201526060604082015260006154388384614e13565b610200606085015261544f61026085018284614e59565b60208601356080860152604086013560a0860152915061546c9050565b61547c60c08401606086016153c8565b61548d610140840160e086016153c8565b61549f6101c0840161016086016153c8565b6101e0840135601e198536030181126154b757600080fd5b840160208101903567ffffffffffffffff8111156154d457600080fd5b8060061b36038213156154e657600080fd5b848303605f19016102408601526154fe8382846153db565b98975050505050505050565b60408101818360005b6002811015615532578151835260209283019290910190600101615513565b50505092915050565b60006020828403121561554d57600080fd5b5051919050565b70ffffffffffffffffffffffffffffffffff82811682821681810283169291811582850482141761553257615532614a43565b600070ffffffffffffffffffffffffffffffffff808416806155ab576155ab614ffa565b92169190910492915050565b70ffffffffffffffffffffffffffffffffff8281168282160390808211156155e1576155e1614a43565b5092915050565b6001600160781b038281168282160390808211156155e1576155e1614a43565b6000823561021e19833603018112614caa57600080fd5b60608101818360005b6003811015615532578151835260209283019290910190600101615628565b606081016110c08284614a6c565b60006001600160781b03808416806155ab576155ab614ffa565b60006080808301878452602087818601526040838187015282885180855260a094508488019150838a0160005b828110156156b85781518452928501929085019060010161569c565b5050506060878203818901528189518084528584019150858160051b850101868c0160005b8381101561576f57868303601f1901855281518051610100908560005b60048110156157175782518252918d0191908d01906001016156fa565b5050508a8201518d860152898201518c860152878201518160c087015261574082870182614721565b9150508c820151915084810360e086015261575b8183614721565b968b019694505050908801906001016156dd565b50909f9e505050505050505050505050505050565b813561578f8161463a565b6157988161491c565b815460ff821691508160ff19821617835560208401356157b781614647565b74ffffffffffffffffffffffffffffffffffffffff008160081b16837fffffffffffffffffffffff000000000000000000000000000000000000000000841617178455505050604082013560018201555050565b61ffff841681526040602082015281604082015260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561584e57600080fd5b8260051b8085606085013791909101606001949350505050565b6000823560fe19833603018112614caa57600080fd5b6000610100823603121561589157600080fd5b6158996140cb565b36601f8401126158a857600080fd5b6158b06140ee565b8060808501368111156158c257600080fd5b855b818110156158dc5780358452602093840193016158c4565b509083523560208301525060a0830135604082015260c083013567ffffffffffffffff8082111561590c57600080fd5b61591836838701614142565b606084015260e085013591508082111561593157600080fd5b5061593e36828601614142565b60808301525092915050565b80356159558161463a565b61595e8161491c565b8252602081013561596e81614647565b6001600160a01b03166020830152604090810135910152565b6001600160a01b038516815260c081016159a4602083018661594a565b6001600160781b03808516608084015280841660a08401525095945050505050565b6001600160a01b038516815260c081016159e3602083018661594a565b608082019390935260a0015292915050565b600060208284031215615a0757600080fd5b815161113b81613fc4565b60008251614caa8184602087016146fd565b60208152600061113b602083018461472156fea26469706673582212207798811b4c80381ed1c971998e70036767a61faf0431e6385c7b837c919bb8a564736f6c63430008110033";

type RailgunSmartWalletStubConstructorParams =
  | [
      linkLibraryAddresses: RailgunSmartWalletStubLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RailgunSmartWalletStubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class RailgunSmartWalletStub__factory extends ContractFactory {
  constructor(...args: RailgunSmartWalletStubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        RailgunSmartWalletStub__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: RailgunSmartWalletStubLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$0d67abb2a30631c14ae5d39aeb2a4b8972\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT4"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RailgunSmartWalletStub> {
    return super.deploy(overrides || {}) as Promise<RailgunSmartWalletStub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RailgunSmartWalletStub {
    return super.attach(address) as RailgunSmartWalletStub;
  }
  override connect(signer: Signer): RailgunSmartWalletStub__factory {
    return super.connect(signer) as RailgunSmartWalletStub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RailgunSmartWalletStubInterface {
    return new utils.Interface(_abi) as RailgunSmartWalletStubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RailgunSmartWalletStub {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as RailgunSmartWalletStub;
  }
}

export interface RailgunSmartWalletStubLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
  ["contracts/logic/Poseidon.sol:PoseidonT4"]: string;
}
