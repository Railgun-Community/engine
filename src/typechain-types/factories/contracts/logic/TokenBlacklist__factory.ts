/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenBlacklist,
  TokenBlacklistInterface,
} from "../../../contracts/logic/TokenBlacklist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToBlacklist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveFromBlacklist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addToBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeFromBlacklist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBlacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105d7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063935eb35f11610050578063935eb35f146100b45780639fa45102146100c7578063f2fde38b146100fa57600080fd5b8063715018a61461007757806389daf799146100815780638da5cb5b14610094575b600080fd5b61007f61010d565b005b61007f61008f3660046104bd565b610121565b6033546040516001600160a01b0390911681526020015b60405180910390f35b61007f6100c23660046104bd565b610241565b6100ea6100d5366004610532565b60656020526000908152604090205460ff1681565b60405190151581526020016100ab565b61007f610108366004610532565b610364565b6101156103f9565b61011f6000610453565b565b6101296103f9565b60005b8181101561023c576065600084848481811061014a5761014a610562565b905060200201602081019061015f9190610532565b6001600160a01b0316815260208101919091526040016000205460ff161561022a576065600084848481811061019757610197610562565b90506020020160208101906101ac9190610532565b6001600160a01b031681526020810191909152604001600020805460ff191690558282828181106101df576101df610562565b90506020020160208101906101f49190610532565b6001600160a01b03167f3afada3900b4909463d8a846fbdc12d6b5c4e8030bd6bc1215822ecee62357ba60405160405180910390a25b8061023481610578565b91505061012c565b505050565b6102496103f9565b60005b8181101561023c576065600084848481811061026a5761026a610562565b905060200201602081019061027f9190610532565b6001600160a01b0316815260208101919091526040016000205460ff16610352576001606560008585858181106102b8576102b8610562565b90506020020160208101906102cd9190610532565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905582828281811061030757610307610562565b905060200201602081019061031c9190610532565b6001600160a01b03167f6b713f4f12b0a0860e4b6b54d27ef8de95da632b1250f5c12f8254fdedbc2ebd60405160405180910390a25b8061035c81610578565b91505061024c565b61036c6103f9565b6001600160a01b0381166103ed5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103f681610453565b50565b6033546001600160a01b0316331461011f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e4565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080602083850312156104d057600080fd5b823567ffffffffffffffff808211156104e857600080fd5b818501915085601f8301126104fc57600080fd5b81358181111561050b57600080fd5b8660208260051b850101111561052057600080fd5b60209290920196919550909350505050565b60006020828403121561054457600080fd5b81356001600160a01b038116811461055b57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561059a57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212201d23718baae7e206abe346d54a922865a1e5134925cd93feb26b41e48a25b28264736f6c634300080c0033";

type TokenBlacklistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenBlacklistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenBlacklist__factory extends ContractFactory {
  constructor(...args: TokenBlacklistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenBlacklist> {
    return super.deploy(overrides || {}) as Promise<TokenBlacklist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenBlacklist {
    return super.attach(address) as TokenBlacklist;
  }
  override connect(signer: Signer): TokenBlacklist__factory {
    return super.connect(signer) as TokenBlacklist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenBlacklistInterface {
    return new utils.Interface(_abi) as TokenBlacklistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenBlacklist {
    return new Contract(address, _abi, signerOrProvider) as TokenBlacklist;
  }
}
