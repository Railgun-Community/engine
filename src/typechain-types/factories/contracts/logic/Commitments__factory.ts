/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Commitments,
  CommitmentsInterface,
} from "../../../contracts/logic/Commitments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_right",
        type: "uint256",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610346806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063665033151161005b57806366503315146100ef57806378d3915c146100f8578063e829558814610126578063ec7329591461013957600080fd5b80632eb4a7ab14610082578063389533051461009e5780635bb93995146100dc575b600080fd5b61008b60035481565b6040519081526020015b60405180910390f35b6100cc6100ac366004610250565b602660209081526000928352604080842090915290825290205460ff1681565b6040519015158152602001610095565b61008b6100ea366004610250565b610141565b61008b60055481565b6100cc610106366004610250565b600160209081526000928352604080842090915290825290205460ff1681565b61008b610134366004610272565b6101ec565b61008b610203565b6040805180820182528381526020810183905290517f29a5f2f600000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__916329a5f2f6916101a49160040161028b565b602060405180830381865af41580156101c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e591906102bc565b9392505050565b600681601081106101fc57600080fd5b0154905081565b61024d7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff6102d5565b81565b6000806040838503121561026357600080fd5b50508035926020909101359150565b60006020828403121561028457600080fd5b5035919050565b60408101818360005b60028110156102b3578151835260209283019290910190600101610294565b50505092915050565b6000602082840312156102ce57600080fd5b5051919050565b60008261030b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50069056fea2646970667358221220d2f57b1c0847e763a9f8189b0e67cfcbc82115469f17110ee8470aed8e43f1ee64736f6c634300080c0033";

type CommitmentsConstructorParams =
  | [linkLibraryAddresses: CommitmentsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Commitments__factory extends ContractFactory {
  constructor(...args: CommitmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Commitments__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CommitmentsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Commitments> {
    return super.deploy(overrides || {}) as Promise<Commitments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Commitments {
    return super.attach(address) as Commitments;
  }
  override connect(signer: Signer): Commitments__factory {
    return super.connect(signer) as Commitments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentsInterface {
    return new utils.Interface(_abi) as CommitmentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Commitments {
    return new Contract(address, _abi, signerOrProvider) as Commitments;
  }
}

export interface CommitmentsLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
}
