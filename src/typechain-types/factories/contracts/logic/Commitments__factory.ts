/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Commitments,
  CommitmentsInterface,
} from "../../../contracts/logic/Commitments";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newCommitments",
        type: "uint256",
      },
    ],
    name: "getInsertionTreeNumberAndStartingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextLeafIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "rootHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treeNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zeros",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636650331511610076578063e82955881161005b578063e82955881461014f578063ec73295914610162578063f19ea9031461016a57600080fd5b80636650331514610108578063c718dbda1461011157600080fd5b80630be4f422146100a85780630c9c0c8d146100c45780632eb4a7ab146100ec57806338bf282e146100f5575b600080fd5b6100b160025481565b6040519081526020015b60405180910390f35b6100d76100d23660046102f3565b610198565b604080519283526020830191909152016100bb565b6100b160035481565b6100b161010336600461030c565b6101e2565b6100b160055481565b61013f61011f36600461030c565b602660209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100bb565b6100b161015d3660046102f3565b61028f565b6100b16102a6565b61013f61017836600461030c565b600160209081526000928352604080842090915290825290205460ff1681565b6000806101a760106002610428565b836002546101b59190610434565b11156101d3576005546101c9906001610434565b9360009350915050565b60055460025491509150915091565b6040805180820182528381526020810183905290517f299e566000000000000000000000000000000000000000000000000000000000815260009173__$6e606460795bf5f7b62cf6c7a6a553ac5e$__9163299e56609161024591600401610447565b602060405180830381865af4158015610262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102869190610478565b90505b92915050565b6006816010811061029f57600080fd5b0154905081565b6102f07f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000017f95b5e3f3c951508f13e7771152f5b7c7329a294917685c10a571c9247e3b9fff610491565b81565b60006020828403121561030557600080fd5b5035919050565b6000806040838503121561031f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111561037f5781600019048211156103655761036561032e565b8085161561037257918102915b93841c9390800290610349565b509250929050565b60008261039657506001610289565b816103a357506000610289565b81600181146103b957600281146103c3576103df565b6001915050610289565b60ff8411156103d4576103d461032e565b50506001821b610289565b5060208310610133831016604e8410600b8410161715610402575081810a610289565b61040c8383610344565b80600019048211156104205761042061032e565b029392505050565b60006102868383610387565b808201808211156102895761028961032e565b60408101818360005b600281101561046f578151835260209283019290910190600101610450565b50505092915050565b60006020828403121561048a57600080fd5b5051919050565b6000826104ae57634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220d2dd3c932d7fcb0dea56be3b7a4e044d9201b5b01d6fb88a430f9a11ba4ca3a164736f6c63430008110033";

type CommitmentsConstructorParams =
  | [linkLibraryAddresses: CommitmentsLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CommitmentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Commitments__factory extends ContractFactory {
  constructor(...args: CommitmentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        Commitments__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: CommitmentsLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$6e606460795bf5f7b62cf6c7a6a553ac5e\\$__", "g"),
      linkLibraryAddresses["contracts/logic/Poseidon.sol:PoseidonT3"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Commitments> {
    return super.deploy(overrides || {}) as Promise<Commitments>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Commitments {
    return super.attach(address) as Commitments;
  }
  override connect(signer: Signer): Commitments__factory {
    return super.connect(signer) as Commitments__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CommitmentsInterface {
    return new utils.Interface(_abi) as CommitmentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Commitments {
    return new Contract(address, _abi, signerOrProvider) as Commitments;
  }
}

export interface CommitmentsLibraryAddresses {
  ["contracts/logic/Poseidon.sol:PoseidonT3"]: string;
}
