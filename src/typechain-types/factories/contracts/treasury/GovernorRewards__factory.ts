/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GovernorRewards,
  GovernorRewardsInterface,
} from "../../../contracts/treasury/GovernorRewards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startInterval",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endInterval",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DISTRIBUTION_INTERVAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_DEPLOY_TIME",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_DISTRIBUTION_INTERVAL_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_hints",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "_ignoreClaimed",
        type: "bool",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_hints",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_distributionInterval",
        type: "uint256",
      },
    ],
    name: "distributionIntervalToStakingInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "earmark",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "earmarked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endingInterval",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_hints",
        type: "uint256[]",
      },
    ],
    name: "fetchAccountSnapshots",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_hints",
        type: "uint256[]",
      },
    ],
    name: "fetchGlobalSnapshots",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
    ],
    name: "getClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract Staking",
        name: "_staking",
        type: "address",
      },
      {
        internalType: "contract Treasury",
        name: "_treasury",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "initializeGovernorRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_time",
        type: "uint256",
      },
    ],
    name: "intervalAtTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "intervalBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "nextEarmarkInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextSnapshotPreCalcInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "precalculatedGlobalSnapshots",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_startingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endingInterval",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_hints",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "_postProcessTokens",
        type: "address[]",
      },
    ],
    name: "prefetchGlobalSnapshots",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "removeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newIntervalBP",
        type: "uint256",
      },
    ],
    name: "setIntervalBP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staking",
    outputs: [
      {
        internalType: "contract Staking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract Treasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612208806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636c3824ef11610104578063bc3fea74116100a2578063e8d8c9ac11610071578063e8d8c9ac146103ce578063f2fde38b146103e1578063f6cb3cd8146103f4578063fc6436f51461040757600080fd5b8063bc3fea7414610376578063c4271eb614610389578063e1f1c4a714610392578063e48603391461039b57600080fd5b80638da5cb5b116100de5780638da5cb5b1461032957806395e50e4c1461033a5780639beb549c14610343578063a6667ffc1461036357600080fd5b80636c3824ef146102fb578063715018a61461030e5780637a7736d31461031657600080fd5b8063363487bc116101715780634ae05c7d1161014b5780634ae05c7d146102975780634cf088d9146102aa57806361d027b3146102d557806366dd5ce8146102e857600080fd5b8063363487bc1461027357806336465e821461027b578063413c65e51461028457600080fd5b806309a4a7d1116101ad57806309a4a7d11461020b5780631c9020081461022b57806326aad31a14610240578063286b3f461461026057600080fd5b8063011de7aa146101d4578063087dceb0146101fa57806308b26b7514610202575b600080fd5b6101e76101e2366004611b33565b610432565b6040519081526020015b60405180910390f35b6101e7600e81565b6101e760685481565b6101e7610219366004611b33565b606f6020526000908152604090205481565b61023e610239366004611bad565b6104d1565b005b61025361024e366004611c40565b6107cd565b6040516101f19190611ceb565b61025361026e366004611d2f565b610aa0565b6101e7610c86565b6101e7606e5481565b6101e7610292366004611b33565b610c96565b61023e6102a5366004611d99565b610ca3565b6065546102bd906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b6066546102bd906001600160a01b031681565b61023e6102f6366004611b33565b610d6f565b61023e610309366004611d99565b610d7c565b61023e610df6565b61023e610324366004611ddb565b610e0a565b6033546001600160a01b03166102bd565b6101e760695481565b6101e7610351366004611e73565b606d6020526000908152604090205481565b610253610371366004611e90565b610ff2565b61023e610384366004611ee3565b6111b0565b6101e760675481565b6101e761271081565b6103be6103a9366004611e73565b606c6020526000908152604090205460ff1681565b60405190151581526020016101f1565b61023e6103dc366004611e73565b61137c565b61023e6103ef366004611e73565b611612565b6103be610402366004611f54565b6116a2565b6101e7610415366004611f95565b606b60209081526000928352604080842090915290825290205481565b60006067548210156104b15760405162461bcd60e51b815260206004820152603f60248201527f476f7665726e6f72526577617264733a205265717565737465642074696d652060448201527f6973206265666f726520636f6e747261637420776173206465706c6f7965640060648201526084015b60405180910390fd5b6068546067546104c19084611fd7565b6104cb9190611fea565b92915050565b600054610100900460ff16158080156104f15750600054600160ff909116105b8061050b5750303b15801561050b575060005460ff166001145b61057d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016104a8565b6000805460ff1916600117905580156105a0576000805461ff0019166101001790555b6105a86116eb565b6105b187611612565b606680546001600160a01b038088167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255606580549289169290911682179055604080517f90d92e7600000000000000000000000000000000000000000000000000000000815290516390d92e76916004808201926020929091908290030181865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f919061200c565b606755606554604080517f6d2beef10000000000000000000000000000000000000000000000000000000081529051600e926001600160a01b031691636d2beef19160048083019260209291908290030181865afa1580156106d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f9919061200c565b6107039190612025565b606855606e84905560005b8281101561077d576001606c600086868581811061072e5761072e61203c565b90506020020160208101906107439190611e73565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055610776600182612052565b905061070e565b5080156107c4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b606060006107de87878a8888610aa0565b905060008967ffffffffffffffff8111156107fb576107fb612065565b604051908082528060200260200182016040528015610824578160200160208202803683370190505b50905060005b8a811015610a9157606d60008d8d848181106108485761084861203c565b905060200201602081019061085d9190611e73565b6001600160a01b03166001600160a01b031681526020019081526020016000205488106108f25760405162461bcd60e51b815260206004820152603e60248201527f476f7665726e6f72526577617264733a20547269656420746f20636c61696d2060448201527f6265796f6e64206c617374206561726d61726b656420696e74657276616c000060648201526084016104a8565b6001600160a01b038a166000908152606a60205260408120818e8e8581811061091d5761091d61203c565b90506020020160208101906109329190611e73565b6001600160a01b03166001600160a01b0316815260200190815260200160002090506000606b60008f8f8681811061096c5761096c61203c565b90506020020160208101906109819190611e73565b6001600160a01b031681526020810191909152604001600090812091508b5b8b8111610a5a578815806109cd5750600881901c600090815260208590526040902054600160ff83161b16155b15610a4857606f60006109e08f84611fd7565b815260200190815260200160002054878e836109fc9190611fd7565b81518110610a0c57610a0c61203c565b602002602001015184600084815260200190815260200160002054610a319190612025565b610a3b9190611fea565b610a459083612052565b91505b610a53600182612052565b90506109a0565b5080858581518110610a6e57610a6e61203c565b602002602001018181525050505050600181610a8a9190612052565b905061082a565b509a9950505050505050505050565b60606000610aae8787611fd7565b610ab9906001612052565b9050828114610b305760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f72526577617264733a20496e636f7272656374206e756d626560448201527f72206f662068696e747320676976656e0000000000000000000000000000000060648201526084016104a8565b60008167ffffffffffffffff811115610b4b57610b4b612065565b604051908082528060200260200182016040528015610b74578160200160208202803683370190505b50905060005b82811015610c7a576065546001600160a01b03166308d465e688610ba1610292858e612052565b898986818110610bb357610bb361203c565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e088901b1681526001600160a01b0390951660048601526024850193909352506020909102013560448201526064016040805180830381865afa158015610c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c47919061207b565b60200151828281518110610c5d57610c5d61203c565b6020908102919091010152610c73600182612052565b9050610b7a565b50979650505050505050565b6000610c9142610432565b905090565b60006104cb600e83612025565b610cab611770565b60005b81811015610d6a576001606c6000858585818110610cce57610cce61203c565b9050602002016020810190610ce39190611e73565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055610d13610c86565b606d6000858585818110610d2957610d2961203c565b9050602002016020810190610d3e9190611e73565b6001600160a01b03168152602081019190915260400160002055610d63600182612052565b9050610cae565b505050565b610d77611770565b606955565b610d84611770565b60005b81811015610d6a576000606c6000858585818110610da757610da761203c565b9050602002016020810190610dbc9190611e73565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055610def600182612052565b9050610d87565b610dfe611770565b610e0860006117ca565b565b6000610e1d8888888888888860016107cd565b905060005b87811015610ed4576001600160a01b0387166000908152606a60205260408120818b8b85818110610e5557610e5561203c565b9050602002016020810190610e6a9190611e73565b6001600160a01b0316815260208101919091526040016000209050865b868111610ebf57600881901c60009081526020839052604090208054600160ff84161b179055610eb8600182612052565b9050610e87565b50610ecd9050600182612052565b9050610e22565b5060005b87811015610fe757610f3587838381518110610ef657610ef661203c565b60200260200101518b8b85818110610f1057610f1061203c565b9050602002016020810190610f259190611e73565b6001600160a01b03169190611834565b7f9137e112a187039f8a3291c0a66fce97153d25ec42036e82360d5d0106d19a6e898983818110610f6857610f6861203c565b9050602002016020810190610f7d9190611e73565b88848481518110610f9057610f9061203c565b602090810291909101810151604080516001600160a01b039586168152949093169184019190915290820152606081018890526080810187905260a00160405180910390a1610fe0600182612052565b9050610ed8565b505050505050505050565b606060006110008686611fd7565b61100b906001612052565b90508281146110825760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f72526577617264733a20496e636f7272656374206e756d626560448201527f72206f662068696e747320676976656e0000000000000000000000000000000060648201526084016104a8565b60008167ffffffffffffffff81111561109d5761109d612065565b6040519080825280602002602001820160405280156110c6578160200160208202803683370190505b50905060005b828110156111a5576065546001600160a01b031663681c637a6110f2610292848c612052565b8888858181106111045761110461203c565b905060200201356040518363ffffffff1660e01b8152600401611131929190918252602082015260400190565b606060405180830381865afa15801561114e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117291906120d8565b602001518282815181106111885761118861203c565b602090810291909101015261119e600182612052565b90506110cc565b509695505050505050565b60006111bc8787611fd7565b6111c7906001612052565b9050606e548711156112415760405162461bcd60e51b815260206004820152602b60248201527f476f7665726e6f72526577617264733a205374617274696e6720696e7465727660448201527f616c20746f6f206c61746500000000000000000000000000000000000000000060648201526084016104a8565b611249610c86565b8611156112be5760405162461bcd60e51b815260206004820152603060248201527f476f7665726e6f72526577617264733a2043616e27742070726566657463682060448201527f66757475726520696e74657276616c730000000000000000000000000000000060648201526084016104a8565b60006112cc88888888610ff2565b905060005b82811015611326578181815181106112eb576112eb61203c565b6020026020010151606f6000838c6113039190612052565b815260208101919091526040016000205561131f600182612052565b90506112d1565b50611332876001612052565b606e5560005b83811015610fe75761136a8585838181106113555761135561203c565b90506020020160208101906103dc9190611e73565b611375600182612052565b9050611338565b6001600160a01b0381166000908152606c602052604090205460ff1661140a5760405162461bcd60e51b815260206004820152603260248201527f476f7665726e6f72526577617264733a20546f6b656e206973206e6f74206f6e60448201527f20646973747269627574696f6e206c697374000000000000000000000000000060648201526084016104a8565b60006001606e5461141b9190611fd7565b6001600160a01b0383166000908152606d6020908152604080832054606b9092529091209192509081831061160c576066546040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526000918616906370a0823190602401602060405180830381865afa1580156114af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d3919061200c565b905060006114e18486611fd7565b6114ec906001612052565b612710606954846114fd9190612025565b6115079190611fea565b6115119190611fea565b90506000845b868111611562576000818152606f60205260409020541561155057600081815260208690526040902083905561154d8383612052565b91505b61155b600182612052565b9050611517565b5061156e866001612052565b6001600160a01b038881166000818152606d6020526040908190209390935560665492517f9db5dbe4000000000000000000000000000000000000000000000000000000008152600481019190915230602482015260448101849052911690639db5dbe490606401600060405180830381600087803b1580156115f057600080fd5b505af1158015611604573d6000803e3d6000fd5b505050505050505b50505050565b61161a611770565b6001600160a01b0381166116965760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a8565b61169f816117ca565b50565b6001600160a01b038381166000908152606a602090815260408083209386168352928152828220600885901c8352905290812054600160ff84161b1615155b90505b9392505050565b600054610100900460ff166117685760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104a8565b610e086118b4565b6033546001600160a01b03163314610e085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a8565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610d6a90849061193a565b600054610100900460ff166119315760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016104a8565b610e08336117ca565b600061198f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a1f9092919063ffffffff16565b805190915015610d6a57808060200190518101906119ad9190612142565b610d6a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104a8565b60606116e18484600085856001600160a01b0385163b611a815760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104a8565b600080866001600160a01b03168587604051611a9d9190612183565b60006040518083038185875af1925050503d8060008114611ada576040519150601f19603f3d011682016040523d82523d6000602084013e611adf565b606091505b5091509150611aef828286611afa565b979650505050505050565b60608315611b095750816116e4565b825115611b195782518084602001fd5b8160405162461bcd60e51b81526004016104a8919061219f565b600060208284031215611b4557600080fd5b5035919050565b6001600160a01b038116811461169f57600080fd5b60008083601f840112611b7357600080fd5b50813567ffffffffffffffff811115611b8b57600080fd5b6020830191508360208260051b8501011115611ba657600080fd5b9250929050565b60008060008060008060a08789031215611bc657600080fd5b8635611bd181611b4c565b95506020870135611be181611b4c565b94506040870135611bf181611b4c565b935060608701359250608087013567ffffffffffffffff811115611c1457600080fd5b611c2089828a01611b61565b979a9699509497509295939492505050565b801515811461169f57600080fd5b60008060008060008060008060c0898b031215611c5c57600080fd5b883567ffffffffffffffff80821115611c7457600080fd5b611c808c838d01611b61565b909a50985060208b01359150611c9582611b4c565b90965060408a0135955060608a0135945060808a01359080821115611cb957600080fd5b50611cc68b828c01611b61565b90945092505060a0890135611cda81611c32565b809150509295985092959890939650565b6020808252825182820181905260009190848201906040850190845b81811015611d2357835183529284019291840191600101611d07565b50909695505050505050565b600080600080600060808688031215611d4757600080fd5b85359450602086013593506040860135611d6081611b4c565b9250606086013567ffffffffffffffff811115611d7c57600080fd5b611d8888828901611b61565b969995985093965092949392505050565b60008060208385031215611dac57600080fd5b823567ffffffffffffffff811115611dc357600080fd5b611dcf85828601611b61565b90969095509350505050565b600080600080600080600060a0888a031215611df657600080fd5b873567ffffffffffffffff80821115611e0e57600080fd5b611e1a8b838c01611b61565b909950975060208a01359150611e2f82611b4c565b909550604089013594506060890135935060808901359080821115611e5357600080fd5b50611e608a828b01611b61565b989b979a50959850939692959293505050565b600060208284031215611e8557600080fd5b81356116e481611b4c565b60008060008060608587031215611ea657600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611ecb57600080fd5b611ed787828801611b61565b95989497509550505050565b60008060008060008060808789031215611efc57600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115611f2257600080fd5b611f2e8a838b01611b61565b90965094506060890135915080821115611f4757600080fd5b50611c2089828a01611b61565b600080600060608486031215611f6957600080fd5b8335611f7481611b4c565b92506020840135611f8481611b4c565b929592945050506040919091013590565b60008060408385031215611fa857600080fd5b8235611fb381611b4c565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156104cb576104cb611fc1565b60008261200757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561201e57600080fd5b5051919050565b80820281158282048414176104cb576104cb611fc1565b634e487b7160e01b600052603260045260246000fd5b808201808211156104cb576104cb611fc1565b634e487b7160e01b600052604160045260246000fd5b60006040828403121561208d57600080fd5b6040516040810181811067ffffffffffffffff821117156120be57634e487b7160e01b600052604160045260246000fd5b604052825181526020928301519281019290925250919050565b6000606082840312156120ea57600080fd5b6040516060810181811067ffffffffffffffff8211171561211b57634e487b7160e01b600052604160045260246000fd5b80604052508251815260208301516020820152604083015160408201528091505092915050565b60006020828403121561215457600080fd5b81516116e481611c32565b60005b8381101561217a578181015183820152602001612162565b50506000910152565b6000825161219581846020870161215f565b9190910192915050565b60208152600082518060208401526121be81604085016020870161215f565b601f01601f1916919091016040019291505056fea2646970667358221220333cf53aaccaf34a8097b0df0628fe2504ff9bd3c01ef8e80405b5df46ca8cf364736f6c63430008110033";

type GovernorRewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernorRewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernorRewards__factory extends ContractFactory {
  constructor(...args: GovernorRewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GovernorRewards> {
    return super.deploy(overrides || {}) as Promise<GovernorRewards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GovernorRewards {
    return super.attach(address) as GovernorRewards;
  }
  override connect(signer: Signer): GovernorRewards__factory {
    return super.connect(signer) as GovernorRewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorRewardsInterface {
    return new utils.Interface(_abi) as GovernorRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorRewards {
    return new Contract(address, _abi, signerOrProvider) as GovernorRewards;
  }
}
