/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  PausableUpgradableProxy,
  PausableUpgradableProxyInterface,
} from "../../../../contracts/proxy/Proxy.sol/PausableUpgradableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "ProxyOwnershipTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProxyPause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ProxyUnpause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "ProxyUpgrade",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107f53803806107f583398101604081905261002f91610123565b8061007061005e60017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104610153565b60001b61012060201b6100f21760201c565b80546001600160a01b0319166001600160a01b039290921691909117905560006100be61005e60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610153565b80546001600160a01b0319166001600160a01b0392909216919091179055600161010b61005e827f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa0248711451610153565b805460ff191691151591909117905550610178565b90565b60006020828403121561013557600080fd5b81516001600160a01b038116811461014c57600080fd5b9392505050565b60008282101561017357634e487b7160e01b600052601160045260246000fd5b500390565b61066e806101876000396000f3fe6080604052600436106100435760003560e01c80630900f0101461005a5780633f4ba83a1461007a5780638456cb591461008f578063f2fde38b146100a457610052565b36610052576100506100c4565b005b6100506100c4565b34801561006657600080fd5b506100506100753660046105ca565b61021f565b34801561008657600080fd5b5061005061032d565b34801561009b57600080fd5b506100506103e7565b3480156100b057600080fd5b506100506100bf3660046105ca565b610499565b6100f56100f260017f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa02487114516105fa565b90565b5460ff161561014b5760405162461bcd60e51b815260206004820152601960248201527f50726f78793a20436f6e7472616374206973207061757365640000000000000060448201526064015b60405180910390fd5b600061017b6100f260017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6105fa565b546001600160a01b03169050803b6101fb5760405162461bcd60e51b815260206004820152602360248201527f50726f78793a20496d706c656d656e746174696f6e20646f65736e277420657860448201527f69737400000000000000000000000000000000000000000000000000000000006064820152608401610142565b3660008037600080366000845af43d6000803e80801561021a573d6000f35b3d6000fd5b61024d6100f260017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046105fa565b546001600160a01b031633141561032257600061028e6100f260017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6105fa565b80549091506001600160a01b0383811691161461031e578054604080516001600160a01b03928316815291841660208301527f85aeb0b8dd2de94a068da6d2ccd785fea888eee68ec95d9a17c74446a865839d91015b60405180910390a180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161781555b5050565b61032a6100c4565b50565b61035b6100f260017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046105fa565b546001600160a01b03163314156103dd57600061039c6100f260017f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa02487114516105fa565b805490915060ff161561032a57805460ff191681556040517f5b5349b254d5540f4586f24c7afd4c990fc8a991b611d7f2c00a020a67f2f29290600090a150565b6103e56100c4565b565b6104156100f260017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046105fa565b546001600160a01b03163314156103dd5760006104566100f260017f8dea8703c3cf94703383ce38a9c894669dccd4ca8e65ddb43267aa02487114516105fa565b805490915060ff1661032a57805460ff191660011781556040517fa51641ae9e6ff3082f83f718f043efc36fa8eb06274cd78c3e7251af263ebb6f90600090a150565b6104c76100f260017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046105fa565b546001600160a01b0316331415610322576001600160a01b0381166105545760405162461bcd60e51b815260206004820152602b60248201527f50726f78793a2050726576656e74696e6720706f74656e7469616c206163636960448201527f64656e74616c206275726e0000000000000000000000000000000000000000006064820152608401610142565b60006105846100f260017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61046105fa565b8054604080516001600160a01b03928316815291851660208301529192507fab1e9974b911ffe4a29b0d786b57a5f5defde2e77960d0e9f954b053e7de325991016102e4565b6000602082840312156105dc57600080fd5b81356001600160a01b03811681146105f357600080fd5b9392505050565b600082821015610633577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea26469706673582212201a813d837a0717bfcfd01149b67904751513d3d90aa5c9fcf29dbaf27a6b2d5964736f6c634300080c0033";

type PausableUpgradableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PausableUpgradableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PausableUpgradableProxy__factory extends ContractFactory {
  constructor(...args: PausableUpgradableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PausableUpgradableProxy> {
    return super.deploy(
      _admin,
      overrides || {}
    ) as Promise<PausableUpgradableProxy>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): PausableUpgradableProxy {
    return super.attach(address) as PausableUpgradableProxy;
  }
  override connect(signer: Signer): PausableUpgradableProxy__factory {
    return super.connect(signer) as PausableUpgradableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PausableUpgradableProxyInterface {
    return new utils.Interface(_abi) as PausableUpgradableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PausableUpgradableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PausableUpgradableProxy;
  }
}
