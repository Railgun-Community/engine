/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  RelayAdapt,
  RelayAdaptInterface,
} from "../../../../../contracts/adapt/relay/Relay.sol/RelayAdapt";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RailgunLogic",
        name: "_railgun",
        type: "address",
      },
      {
        internalType: "contract IWBase",
        name: "_wbase",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "string",
            name: "returnData",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct RelayAdapt.Result[]",
        name: "callResults",
        type: "tuple[]",
      },
    ],
    name: "CallResult",
    type: "event",
  },
  {
    inputs: [],
    name: "VERIFICATION_BYPASS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData[]",
        name: "_deposits",
        type: "tuple[]",
      },
      {
        internalType: "uint256[2]",
        name: "_encryptedRandom",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "_npk",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "nullifiers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "commitments",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "enum WithdrawType",
                name: "withdraw",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint256[4]",
                    name: "ciphertext",
                    type: "uint256[4]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "ephemeralKeys",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "memo",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "npk",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "withdrawPreimage",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "overrideOutput",
            type: "address",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "_additionalData",
        type: "bytes",
      },
    ],
    name: "getAdaptParams",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "nullifiers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "commitments",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "enum WithdrawType",
                name: "withdraw",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint256[4]",
                    name: "ciphertext",
                    type: "uint256[4]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "ephemeralKeys",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "memo",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "npk",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "withdrawPreimage",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "overrideOutput",
            type: "address",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_minGas",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "getRelayAdaptParams",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "railgun",
    outputs: [
      {
        internalType: "contract RailgunLogic",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "nullifiers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "commitments",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "enum WithdrawType",
                name: "withdraw",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint256[4]",
                    name: "ciphertext",
                    type: "uint256[4]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "ephemeralKeys",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "memo",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "npk",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "withdrawPreimage",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "overrideOutput",
            type: "address",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        internalType: "bytes",
        name: "_additionalData",
        type: "bytes",
      },
    ],
    name: "railgunBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "merkleRoot",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "nullifiers",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "commitments",
            type: "uint256[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "enum WithdrawType",
                name: "withdraw",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "uint256[4]",
                    name: "ciphertext",
                    type: "uint256[4]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "ephemeralKeys",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "memo",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "npk",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "withdrawPreimage",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "overrideOutput",
            type: "address",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "_random",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_minGas",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenSubID",
            type: "uint256",
          },
        ],
        internalType: "struct TokenData[]",
        name: "_tokens",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unwrapAllBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wbase",
    outputs: [
      {
        internalType: "contract IWBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapAllBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026783803806200267883398101604081905262000034916200007f565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055620000be565b6001600160a01b03811681146200007c57600080fd5b50565b600080604083850312156200009357600080fd5b8251620000a08162000066565b6020840151909250620000b38162000066565b809150509250929050565b6125aa80620000ce6000396000f3fe6080604052600436106100c05760003560e01c80638182b67f11610074578063aa6a9c441161004e578063aa6a9c44146101e2578063b29e021e14610202578063f62f3e9b1461021757600080fd5b80638182b67f1461018c57806396abc9ed146101ac5780639ce6b76c146101cc57600080fd5b8063494f40a4116100a5578063494f40a41461012b5780634d2a938f1461015957806358543a9d1461016c57600080fd5b806305c7671a146100cc5780634013074d146100ee57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611946565b61022c565b005b3480156100fa57600080fd5b5060005461010e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013757600080fd5b5061014b6101463660046119ff565b610867565b604051908152602001610122565b6100ec6101673660046119ff565b6108ac565b34801561017857600080fd5b5061014b610187366004611ade565b61094e565b34801561019857600080fd5b506100ec6101a7366004611ade565b610a52565b3480156101b857600080fd5b506100ec6101c7366004611bb6565b610bb9565b3480156101d857600080fd5b5061010e61dead81565b3480156101ee57600080fd5b5060015461010e906001600160a01b031681565b34801561020e57600080fd5b506100ec610fa0565b34801561022357600080fd5b506100ec6110ee565b3330146102975760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b60648201526084015b60405180910390fd5b60008367ffffffffffffffff8111156102b2576102b2611a97565b6040519080825280602002602001820160405280156102eb57816020015b6102d8611898565b8152602001906001900390816102d05790505b5090506000805b8581101561063557600087878381811061030e5761030e611c20565b6103249260206060909202019081019150611c43565b600281111561033557610335611c0a565b141561047d57600087878381811061034f5761034f611c20565b90506060020160200160208101906103679190611c60565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d59190611c7b565b90508015610476576103e8600185611caa565b600054909450610405906001600160a01b038481169116836111d1565b60405180606001604052808781526020018a8a8681811061042857610428611c20565b90506060020180360381019061043e9190611cc2565b8152602001826effffffffffffffffffffffffffffff1681525085848151811061046a5761046a611c20565b60200260200101819052505b5050610623565b600187878381811061049157610491611c20565b6104a79260206060909202019081019150611c43565b60028111156104b8576104b8611c0a565b141561052c5760405162461bcd60e51b815260206004820152602660248201527f47656e6572616c41646170743a20455243373231206e6f74207965742073757060448201527f706f727465640000000000000000000000000000000000000000000000000000606482015260840161028e565b600287878381811061054057610540611c20565b6105569260206060909202019081019150611c43565b600281111561056757610567611c0a565b14156105db5760405162461bcd60e51b815260206004820152602760248201527f47656e6572616c41646170743a2045524331313535206e6f742079657420737560448201527f70706f7274656400000000000000000000000000000000000000000000000000606482015260840161028e565b60405162461bcd60e51b815260206004820181905260248201527f47656e6572616c41646170743a20556e6b6e6f776e20746f6b656e2074797065604482015260640161028e565b8061062d81611d2c565b9150506102f2565b5080610642575050610861565b60008167ffffffffffffffff81111561065d5761065d611a97565b60405190808252806020026020018201604052801561069657816020015b610683611898565b81526020019060019003908161067b5790505b50905060008267ffffffffffffffff8111156106b4576106b4611a97565b6040519080825280602002602001820160405280156106ed57816020015b6106da6118dc565b8152602001906001900390816106d25790505b5090506000805b848110156107dd575b85828151811061070f5761070f611c20565b6020026020010151604001516effffffffffffffffffffffffffffff16600014156107465761073f600183611caa565b91506106fd565b85828151811061075857610758611c20565b602002602001015184828151811061077257610772611c20565b60209081029190910101526040805180820182529089906002908390839080828437600092019190915250508451859150839081106107b3576107b3611c20565b60209081029190910101526107c9600183611caa565b9150806107d581611d2c565b9150506106f4565b506000546040517fae9c2c8f0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063ae9c2c8f906108299086908690600401611dc6565b600060405180830381600087803b15801561084357600080fd5b505af1158015610857573d6000803e3d6000fd5b5050505050505050505b50505050565b6000808686868686604051602001610883959493929190611e5d565b604051602081830303815290604052905061089f89898361094e565b9998505050505050505050565b825a116108fb5760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f7567682067617320737570706c696564000000000000000000604482015260640161028e565b851561093a576000858585858560405160200161091c959493929190611e5d565b6040516020818303038152906040529050610938888883610a52565b505b610945848383611384565b50505050505050565b6000808367ffffffffffffffff81111561096a5761096a611a97565b604051908082528060200260200182016040528015610993578160200160208202803683370190505b50905060005b84811015610a1b578585828181106109b3576109b3611c20565b90506020028101906109c59190611f64565b6109d490610120810190611f85565b60008181106109e5576109e5611c20565b905060200201358282815181106109fe576109fe611c20565b602090810291909101015280610a1381611d2c565b915050610999565b50604051610a3190829086908690602001612027565b604051602081830303815290604052805190602001209150505b9392505050565b6000610a5f84848461094e565b905060005b83811015610b355781858583818110610a7f57610a7f611c20565b9050602002810190610a919190611f64565b610aa09061016081019061207a565b606001351480610ab157503261dead145b610b235760405162461bcd60e51b815260206004820152602960248201527f47656e6572616c41646170743a204164617074494420506172616d657465727360448201527f204d69736d617463680000000000000000000000000000000000000000000000606482015260840161028e565b80610b2d81611d2c565b915050610a64565b506000546040517f4489999c0000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690634489999c90610b8190879087906004016122c9565b600060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b5050505050505050565b333014610c1f5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161028e565b60005b82811015610861576000848483818110610c3e57610c3e611c20565b610c549260206060909202019081019150611c43565b6002811115610c6557610c65611c0a565b1415610de8576000848483818110610c7f57610c7f611c20565b9050606002016020016020810190610c979190611c60565b90506001600160a01b038116610d5957478015610d53576000846001600160a01b03168260405160006040518083038185875af1925050503d8060008114610cfb576040519150601f19603f3d011682016040523d82523d6000602084013e610d00565b606091505b5050905080610d515760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161028e565b505b50610de2565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610da0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc49190611c7b565b90508015610de057610de06001600160a01b03831685836115d2565b505b50610f8e565b6001848483818110610dfc57610dfc611c20565b610e129260206060909202019081019150611c43565b6002811115610e2357610e23611c0a565b1415610e975760405162461bcd60e51b815260206004820152602660248201527f5261696c67756e4c6f6769633a20455243373231206e6f74207965742073757060448201527f706f727465640000000000000000000000000000000000000000000000000000606482015260840161028e565b6002848483818110610eab57610eab611c20565b610ec19260206060909202019081019150611c43565b6002811115610ed257610ed2611c0a565b1415610f465760405162461bcd60e51b815260206004820152602760248201527f5261696c67756e4c6f6769633a2045524331313535206e6f742079657420737560448201527f70706f7274656400000000000000000000000000000000000000000000000000606482015260840161028e565b60405162461bcd60e51b815260206004820181905260248201527f5261696c67756e4c6f6769633a20556e6b6e6f776e20746f6b656e2074797065604482015260640161028e565b80610f9881611d2c565b915050610c22565b3330146110065760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161028e565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561104f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110739190611c7b565b6001546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156110d357600080fd5b505af11580156110e7573d6000803e3d6000fd5b5050505050565b3330146111545760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161028e565b600154604080517fd0e30db0000000000000000000000000000000000000000000000000000000008152905147926001600160a01b03169163d0e30db091849160048082019260009290919082900301818588803b1580156111b557600080fd5b505af11580156111c9573d6000803e3d6000fd5b505050505050565b80158061126457506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190611c7b565b155b6112d65760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161028e565b6040516001600160a01b03831660248201526044810182905261137f9084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261161b565b505050565b60008167ffffffffffffffff81111561139f5761139f611a97565b6040519080825280602002602001820160405280156113e557816020015b6040805180820190915260008152606060208201528152602001906001900390816113bd5790505b50905060005b82811015611594573684848381811061140657611406611c20565b90506020028101906114189190612418565b905060008061142a6020840184611c60565b6001600160a01b031683604001355a90611447602087018761242e565b604051611455929190612475565b600060405180830381858888f193505050503d8060008114611493576040519150601f19603f3d011682016040523d82523d6000602084013e611498565b606091505b509150915060405180604001604052808315158152602001828152508585815181106114c6576114c6611c20565b602002602001018190525081156114df57505050611582565b6000306114ef6020860186611c60565b6001600160a01b0316149050600089806115065750815b9050801561157c577f12dedbded7484b2dfc73a6e1ba20c48221bce1959057eab9b438542d79bf15a38760405161153d9190612485565b60405180910390a18260405160200161155691906124ed565b60408051601f198184030181529082905262461bcd60e51b825261028e91600401612532565b50505050505b8061158c81611d2c565b9150506113eb565b507f12dedbded7484b2dfc73a6e1ba20c48221bce1959057eab9b438542d79bf15a3816040516115c49190612485565b60405180910390a150505050565b6040516001600160a01b03831660248201526044810182905261137f9084907fa9059cbb000000000000000000000000000000000000000000000000000000009060640161131b565b6000611670826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166117009092919063ffffffff16565b80519091501561137f578080602001905181019061168e9190612545565b61137f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161028e565b606061170f8484600085611717565b949350505050565b60608247101561178f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161028e565b6001600160a01b0385163b6117e65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161028e565b600080866001600160a01b031685876040516118029190612562565b60006040518083038185875af1925050503d806000811461183f576040519150601f19603f3d011682016040523d82523d6000602084013e611844565b606091505b509150915061185482828661185f565b979650505050505050565b6060831561186e575081610a4b565b82511561187e5782518084602001fd5b8160405162461bcd60e51b815260040161028e9190612532565b6040518060600160405280600081526020016118cf6040805160608101909152806000815260006020820181905260409091015290565b8152600060209091015290565b60405180604001604052806002906020820280368337509192915050565b60008083601f84011261190c57600080fd5b50813567ffffffffffffffff81111561192457600080fd5b60208301915083602060608302850101111561193f57600080fd5b9250929050565b6000806000806080858703121561195c57600080fd5b843567ffffffffffffffff81111561197357600080fd5b61197f878288016118fa565b909550935050606085018681111561199657600080fd5b9396929550505060209290920191903590565b60008083601f8401126119bb57600080fd5b50813567ffffffffffffffff8111156119d357600080fd5b6020830191508360208260051b850101111561193f57600080fd5b80151581146119fc57600080fd5b50565b600080600080600080600060a0888a031215611a1a57600080fd5b873567ffffffffffffffff80821115611a3257600080fd5b611a3e8b838c016119a9565b909950975060208a0135965060408a01359150611a5a826119ee565b9094506060890135935060808901359080821115611a7757600080fd5b50611a848a828b016119a9565b989b979a50959850939692959293505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ad657611ad6611a97565b604052919050565b600080600060408486031215611af357600080fd5b833567ffffffffffffffff80821115611b0b57600080fd5b611b17878388016119a9565b9095509350602091508582013581811115611b3157600080fd5b8601601f81018813611b4257600080fd5b803582811115611b5457611b54611a97565b611b66601f8201601f19168501611aad565b92508083528884828401011115611b7c57600080fd5b80848301858501376000848285010152505080925050509250925092565b80356001600160a01b0381168114611bb157600080fd5b919050565b600080600060408486031215611bcb57600080fd5b833567ffffffffffffffff811115611be257600080fd5b611bee868287016118fa565b9094509250611c01905060208501611b9a565b90509250925092565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600381106119fc57600080fd5b600060208284031215611c5557600080fd5b8135610a4b81611c36565b600060208284031215611c7257600080fd5b610a4b82611b9a565b600060208284031215611c8d57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cbd57611cbd611c94565b500190565b600060608284031215611cd457600080fd5b6040516060810181811067ffffffffffffffff82111715611cf757611cf7611a97565b6040528235611d0581611c36565b8152611d1360208401611b9a565b6020820152604083013560408201528091505092915050565b6000600019821415611d4057611d40611c94565b5060010190565b600381106119fc57634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b84811015611dba57825188835b6002811015611da457825182529186019190860190600101611d87565b5050506040979097019691830191600101611d7a565b50959695505050505050565b6040808252835182820181905260009190606090818501906020808901865b83811015611e4957815180518652838101518051611e0281611d47565b87860152808501516001600160a01b031689880152880151878701528701516effffffffffffffffffffffffffffff16608086015260a09094019390820190600101611de5565b505086830390870152506118548187611d65565b6000608080830188845260208815158186015260408881870152606084818801528388855260a08801905060a08960051b89010194508960005b8a811015611f5157898703609f190183528135368d9003605e19018112611ebd57600080fd5b8c016001600160a01b03611ed082611b9a565b16885286810135601e19823603018112611ee957600080fd5b8101803567ffffffffffffffff811115611f0257600080fd5b803603831315611f1157600080fd5b86898b015280878b0152808983018c8c013760008a82018c015291870135878a015250601f01601f19169096018701959185019190850190600101611e97565b50949d9c50505050505050505050505050565b6000823561023e19833603018112611f7b57600080fd5b9190910192915050565b6000808335601e19843603018112611f9c57600080fd5b83018035915067ffffffffffffffff821115611fb757600080fd5b6020019150600581901b360382131561193f57600080fd5b60005b83811015611fea578181015183820152602001611fd2565b838111156108615750506000910152565b60008151808452612013816020860160208601611fcf565b601f01601f19169290920160200192915050565b606080825284519082018190526000906020906080840190828801845b8281101561206057815184529284019290840190600101612044565b505050858285015283810360408501526118548186611ffb565b60008235609e19833603018112611f7b57600080fd5b6000808335601e198436030181126120a757600080fd5b830160208101925035905067ffffffffffffffff8111156120c757600080fd5b8060051b360383131561193f57600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561210b57600080fd5b8260051b8083602087013760009401602001938452509192915050565b60008235609e1983360301811261213e57600080fd5b90910192915050565b600060a08301823561ffff811680821461216057600080fd5b85525060208381013561217281611c36565b61217b81611d47565b8582015260406001600160a01b03612194868301611b9a565b16818701526060850135606087015260806121b181870187612090565b60a0898401529485905260c094858901600582901b8a0187018360005b84811015612245578c830360bf1901845281353687900360de190181126121f457600080fd5b860160e088828637888501600081528a8a84018237508b85016000815261221d8d840184612090565b935082825261222f83880185836120d9565b978d019796505050928a019250506001016121ce565b50909b9a5050505050505050505050565b80358252602081013561226881611c36565b61227181611d47565b60208301526001600160a01b0361228a60408301611b9a565b1660408301526060810135606083015260808101356effffffffffffffffffffffffffffff81168082146122bd57600080fd5b80608085015250505050565b60208082528181018390526000906040808401600586901b8501820187855b8881101561240a57878303603f190184528135368b900361023e1901811261230f57600080fd5b8a0180358452602080820135908501526102408687830188870137608080860160008152888285018237505060c0828101359086015260e08083013590860152610100808301359086015261012061236981840184612090565b838389015261237b84890182846120d9565b935050505061014061238f81840184612090565b878403838901526123a18482846120d9565b93505050506101606123b581840184612128565b868303828801526123c68382612147565b925050506101806123db818701828501612256565b506102206123ea818401611b9a565b6001600160a01b03169501949094525092850192908501906001016122e8565b509098975050505050505050565b60008235605e19833603018112611f7b57600080fd5b6000808335601e1984360301811261244557600080fd5b83018035915067ffffffffffffffff82111561246057600080fd5b60200191503681900382131561193f57600080fd5b8183823760009101908152919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561240a57888303603f1901855281518051151584528701518784018790526124da87850182611ffb565b95880195935050908601906001016124ac565b7f47656e6572616c41646170742043616c6c204661696c65643a00000000000000815260008251612525816019850160208701611fcf565b9190910160190192915050565b602081526000610a4b6020830184611ffb565b60006020828403121561255757600080fd5b8151610a4b816119ee565b60008251611f7b818460208701611fcf56fea26469706673582212205053ebc53b8ef978abb4a95e83a16097e7d4f7e5da314315410e187e7846728b64736f6c634300080c0033";

type RelayAdaptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayAdaptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayAdapt__factory extends ContractFactory {
  constructor(...args: RelayAdaptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _railgun: PromiseOrValue<string>,
    _wbase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayAdapt> {
    return super.deploy(
      _railgun,
      _wbase,
      overrides || {}
    ) as Promise<RelayAdapt>;
  }
  override getDeployTransaction(
    _railgun: PromiseOrValue<string>,
    _wbase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_railgun, _wbase, overrides || {});
  }
  override attach(address: string): RelayAdapt {
    return super.attach(address) as RelayAdapt;
  }
  override connect(signer: Signer): RelayAdapt__factory {
    return super.connect(signer) as RelayAdapt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayAdaptInterface {
    return new utils.Interface(_abi) as RelayAdaptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayAdapt {
    return new Contract(address, _abi, signerOrProvider) as RelayAdapt;
  }
}
