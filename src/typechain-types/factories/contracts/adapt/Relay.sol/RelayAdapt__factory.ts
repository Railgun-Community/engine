/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  RelayAdapt,
  RelayAdaptInterface,
} from "../../../../contracts/adapt/Relay.sol/RelayAdapt";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RailgunSmartWallet",
        name: "_railgun",
        type: "address",
      },
      {
        internalType: "contract IWBase",
        name: "_wBase",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callIndex",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "CallFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes31",
            name: "random",
            type: "bytes31",
          },
          {
            internalType: "bool",
            name: "requireSuccess",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minGasLimit",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RelayAdapt.Call[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct RelayAdapt.ActionData",
        name: "_actionData",
        type: "tuple",
      },
    ],
    name: "getAdaptParams",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_requireSuccess",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.Call[]",
        name: "_calls",
        type: "tuple[]",
      },
    ],
    name: "multicall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "railgun",
    outputs: [
      {
        internalType: "contract RailgunSmartWallet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "a",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256[2]",
                    name: "x",
                    type: "uint256[2]",
                  },
                  {
                    internalType: "uint256[2]",
                    name: "y",
                    type: "uint256[2]",
                  },
                ],
                internalType: "struct G2Point",
                name: "b",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "x",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "y",
                    type: "uint256",
                  },
                ],
                internalType: "struct G1Point",
                name: "c",
                type: "tuple",
              },
            ],
            internalType: "struct SnarkProof",
            name: "proof",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32[]",
            name: "nullifiers",
            type: "bytes32[]",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "treeNumber",
                type: "uint16",
              },
              {
                internalType: "uint72",
                name: "minGasPrice",
                type: "uint72",
              },
              {
                internalType: "enum UnshieldType",
                name: "unshield",
                type: "uint8",
              },
              {
                internalType: "uint64",
                name: "chainID",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "adaptContract",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "adaptParams",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "bytes32[4]",
                    name: "ciphertext",
                    type: "bytes32[4]",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedSenderViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes32",
                    name: "blindedReceiverViewingKey",
                    type: "bytes32",
                  },
                  {
                    internalType: "bytes",
                    name: "annotationData",
                    type: "bytes",
                  },
                  {
                    internalType: "bytes",
                    name: "memo",
                    type: "bytes",
                  },
                ],
                internalType: "struct CommitmentCiphertext[]",
                name: "commitmentCiphertext",
                type: "tuple[]",
              },
            ],
            internalType: "struct BoundParams",
            name: "boundParams",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "unshieldPreimage",
            type: "tuple",
          },
        ],
        internalType: "struct Transaction[]",
        name: "_transactions",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "bytes31",
            name: "random",
            type: "bytes31",
          },
          {
            internalType: "bool",
            name: "requireSuccess",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "minGasLimit",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
            ],
            internalType: "struct RelayAdapt.Call[]",
            name: "calls",
            type: "tuple[]",
          },
        ],
        internalType: "struct RelayAdapt.ActionData",
        name: "_actionData",
        type: "tuple",
      },
    ],
    name: "relay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "npk",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "enum TokenType",
                    name: "tokenType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "tokenAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "tokenSubID",
                    type: "uint256",
                  },
                ],
                internalType: "struct TokenData",
                name: "token",
                type: "tuple",
              },
              {
                internalType: "uint120",
                name: "value",
                type: "uint120",
              },
            ],
            internalType: "struct CommitmentPreimage",
            name: "preimage",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32[3]",
                name: "encryptedBundle",
                type: "bytes32[3]",
              },
              {
                internalType: "bytes32",
                name: "shieldKey",
                type: "bytes32",
              },
            ],
            internalType: "struct ShieldCiphertext",
            name: "ciphertext",
            type: "tuple",
          },
        ],
        internalType: "struct ShieldRequest[]",
        name: "_shieldRequests",
        type: "tuple[]",
      },
    ],
    name: "shield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "enum TokenType",
                name: "tokenType",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenSubID",
                type: "uint256",
              },
            ],
            internalType: "struct TokenData",
            name: "token",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct RelayAdapt.TokenTransfer[]",
        name: "_transfers",
        type: "tuple[]",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wBase",
    outputs: [
      {
        internalType: "contract IWBase",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526000805460ff191690553480156200001b57600080fd5b506040516200293e3803806200293e8339810160408190526200003e9162000093565b60008054610100600160a81b0319166101006001600160a01b0394851602179055600180546001600160a01b03191691909216179055620000d2565b6001600160a01b03811681146200009057600080fd5b50565b60008060408385031215620000a757600080fd5b8251620000b4816200007a565b6020840151909250620000c7816200007a565b809150509250929050565b61285c80620000e26000396000f3fe60806040526004361061009a5760003560e01c80639643829f11610069578063d5774a281161004e578063d5774a281461018b578063e4899c13146101ab578063e9a059a3146101cb57600080fd5b80639643829f1461013d578063c2e9ffd81461016b57600080fd5b8063044a40c3146100a657806328223a77146100c85780634013074d146100db57806377321c751461011d57600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c1366004611ae8565b6101eb565b005b6100c66100d6366004611baa565b6108e9565b3480156100e757600080fd5b506000546101009061010090046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561012957600080fd5b50600154610100906001600160a01b031681565b34801561014957600080fd5b5061015d610158366004611baa565b610b7f565b604051908152602001610114565b34801561017757600080fd5b506100c6610186366004611c1a565b610ca8565b34801561019757600080fd5b506100c66101a6366004611c7d565b611197565b3480156101b757600080fd5b506100c66101c6366004611ca7565b611316565b3480156101d757600080fd5b506100c66101e6366004611c7d565b6113a2565b60005460ff1615806101fc57503330145b6102645760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b60648201526084015b60405180910390fd5b6000805460ff19166001178155808267ffffffffffffffff81111561028b5761028b611cfc565b6040519080825280602002602001820160405280156102b4578160200160208202803683370190505b50905060005b8381101561070a5760008585838181106102d6576102d6611d28565b6102f0926040610120909202019081019150602001611d5b565b600281111561030157610301611d12565b0361052457600085858381811061031a5761031a611d28565b610334926060610120909202019081019150604001611d8f565b905085858381811061034857610348611d28565b6103629260a0610120909202019081019150608001611dc1565b6001600160781b0316600003610411576040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa1580156103b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103da9190611ddc565b8383815181106103ec576103ec611d28565b60200260200101906001600160781b031690816001600160781b031681525050610470565b85858381811061042357610423611d28565b61043d9260a0610120909202019081019150608001611dc1565b83838151811061044f5761044f611d28565b60200260200101906001600160781b031690816001600160781b0316815250505b60008054610490916001600160a01b0384811692610100900416906114aa565b6104e5600060019054906101000a90046001600160a01b03168484815181106104bb576104bb611d28565b60200260200101516001600160781b0316836001600160a01b03166114aa9092919063ffffffff16565b60008383815181106104f9576104f9611d28565b60200260200101516001600160781b0316111561051e5761051b600185611df5565b93505b506106f8565b600185858381811061053857610538611d28565b610552926040610120909202019081019150602001611d5b565b600281111561056357610563611d12565b0361068a57600085858381811061057c5761057c611d28565b610596926060610120909202019081019150604001611d8f565b9050806001600160a01b031663095ea7b3600060019054906101000a90046001600160a01b03168888868181106105cf576105cf611d28565b60405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03949094166004850152610120029190910160600135602483015250604401600060405180830381600087803b15801561063b57600080fd5b505af115801561064f573d6000803e3d6000fd5b50505050600183838151811061066757610667611d28565b6001600160781b039092166020928302919091019091015261051b600185611df5565b60405162461bcd60e51b815260206004820152602560248201527f52656c617941646170743a2045524331313535206e6f7420796574207375707060448201527f6f72746564000000000000000000000000000000000000000000000000000000606482015260840161025b565b610703600182611df5565b90506102ba565b508160000361071a5750506108db565b60008267ffffffffffffffff81111561073557610735611cfc565b60405190808252806020026020018201604052801561076e57816020015b61075b611a66565b8152602001906001900390816107535790505b5090506000805b858110156108565783818151811061078f5761078f611d28565b60200260200101516001600160781b0316600014610844578686828181106107b9576107b9611d28565b905061012002018036038101906107d09190611ef6565b8383815181106107e2576107e2611d28565b60200260200101819052508381815181106107ff576107ff611d28565b602002602001015183838151811061081957610819611d28565b6020908102919091010151516001600160781b03909116604090910152610841600183611df5565b91505b61084f600182611df5565b9050610775565b506000546040517f044a40c30000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063044a40c3906108a4908590600401611fc4565b600060405180830381600087803b1580156108be57600080fd5b505af11580156108d2573d6000803e3d6000fd5b50505050505050505b50506000805460ff19169055565b60005460ff1615806108fa57503330145b61095d5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161025b565b6000805460ff1916600117905560408101355a116109e35760405162461bcd60e51b815260206004820152602360248201527f52656c617941646170743a204e6f7420656e6f7567682067617320737570706c60448201527f6965640000000000000000000000000000000000000000000000000000000000606482015260840161025b565b60006109f0848484610b7f565b905060005b83811015610ac65781858583818110610a1057610a10611d28565b9050602002810190610a229190612086565b610a31906101608101906120a7565b60a001351480610a4257503261dead145b610ab45760405162461bcd60e51b815260206004820152602760248201527f52656c617941646170743a204164617074494420506172616d6574657273204d60448201527f69736d6174636800000000000000000000000000000000000000000000000000606482015260840161025b565b610abf600182611df5565b90506109f5565b506000546040517fd8ae136a0000000000000000000000000000000000000000000000000000000081526101009091046001600160a01b03169063d8ae136a90610b1690879087906004016123e3565b600060405180830381600087803b158015610b3057600080fd5b505af1158015610b44573d6000803e3d6000fd5b50610b6f9250610b5d9150506040840160208501612512565b610b6a606085018561252f565b61165d565b50506000805460ff191690555050565b6000808367ffffffffffffffff811115610b9b57610b9b611cfc565b604051908082528060200260200182016040528015610bce57816020015b6060815260200190600190039081610bb95790505b50905060005b84811015610c7157858582818110610bee57610bee611d28565b9050602002810190610c009190612086565b610c0f9061012081019061252f565b808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505084518592508491508110610c5457610c54611d28565b6020908102919091010152610c6a600182611df5565b9050610bd4565b50604051610c879082908690869060200161266a565b604051602081830303815290604052805190602001209150505b9392505050565b60005460ff161580610cb957503330145b610d1c5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161025b565b6000805460ff191660011781555b81811015611188576000838383818110610d4657610d46611d28565b610d5c92602060a0909202019081019150611d5b565b6002811115610d6d57610d6d611d12565b148015610dad57506000838383818110610d8957610d89611d28565b610da292604060a0909202019081019150602001611d8f565b6001600160a01b0316145b15610ecf576000838383818110610dc657610dc6611d28565b905060a0020160800135600014610df857838383818110610de957610de9611d28565b905060a0020160800135610dfa565b475b90506000848484818110610e1057610e10611d28565b905060a002016060016020810190610e289190611d8f565b6001600160a01b03168260405160006040518083038185875af1925050503d8060008114610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b5050905080610ec85760405162461bcd60e51b815260206004820152601f60248201527f52656c617941646170743a20455448207472616e73666572206661696c656400604482015260640161025b565b5050611176565b6000838383818110610ee357610ee3611d28565b610ef992602060a0909202019081019150611d5b565b6002811115610f0a57610f0a611d12565b0361102c576000838383818110610f2357610f23611d28565b610f3c92604060a0909202019081019150602001611d8f565b90506000848484818110610f5257610f52611d28565b905060a0020160800135600014610f8457848484818110610f7557610f75611d28565b905060a0020160800135610fec565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610fc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fec9190611ddc565b9050610ec885858581811061100357611003611d28565b905060a00201606001602081019061101b9190611d8f565b6001600160a01b03841690836117a0565b600183838381811061104057611040611d28565b61105692602060a0909202019081019150611d5b565b600281111561106757611067611d12565b0361068a57600083838381811061108057611080611d28565b61109992604060a0909202019081019150602001611d8f565b9050806001600160a01b03166323b872dd308686868181106110bd576110bd611d28565b905060a0020160600160208101906110d59190611d8f565b8787878181106110e7576110e7611d28565b604080517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b1681526001600160a01b03968716600482015295909416602486015260a002919091019190910135604483015250606401600060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b50505050505b611181600182611df5565b9050610d2a565b50506000805460ff1916905550565b60005460ff1615806111a857503330145b61120b5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161025b565b6000805460ff1916600117815581156112245781611290565b6001546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa15801561126c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112909190611ddc565b6001546040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156112f057600080fd5b505af1158015611304573d6000803e3d6000fd5b50506000805460ff1916905550505050565b60005460ff16158061132757503330145b61138a5760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161025b565b6000805460ff1916600117905561118883838361165d565b60005460ff1615806113b357503330145b6114165760405162461bcd60e51b815260206004820152602e60248201527f52656c617941646170743a2045787465726e616c2063616c6c20746f206f6e6c60448201526d3ca9b2b63310333ab731ba34b7b760911b606482015260840161025b565b6000805460ff19166001178155811561142f5781611431565b475b9050600160009054906101000a90046001600160a01b03166001600160a01b03166370d39cff826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561148357600080fd5b505af1158015611497573d6000803e3d6000fd5b50506000805460ff191690555050505050565b80158061153d57506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153b9190611ddc565b155b6115af5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161025b565b6040516001600160a01b0383166024820152604481018290526116589084907f095ea7b300000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117e9565b505050565b60005b8181101561179a573683838381811061167b5761167b611d28565b905060200281019061168d919061270e565b905060008061169f6020840184611d8f565b6001600160a01b031660408401356116ba6020860186612724565b6040516116c892919061276b565b60006040518083038185875af1925050503d8060008114611705576040519150601f19603f3d011682016040523d82523d6000602084013e61170a565b606091505b5091509150811561171d57505050611788565b60003061172d6020860186611d8f565b6001600160a01b0316149050600088806117445750815b905080156117825785836040517f5c0dee5d00000000000000000000000000000000000000000000000000000000815260040161025b9291906127cb565b50505050505b611793600182611df5565b9050611660565b50505050565b6040516001600160a01b0383166024820152604481018290526116589084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016115f4565b600061183e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118ce9092919063ffffffff16565b805190915015611658578080602001905181019061185c91906127e4565b6116585760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161025b565b60606118dd84846000856118e5565b949350505050565b60608247101561195d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161025b565b6001600160a01b0385163b6119b45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025b565b600080866001600160a01b031685876040516119d09190612801565b60006040518083038185875af1925050503d8060008114611a0d576040519150601f19603f3d011682016040523d82523d6000602084013e611a12565b606091505b5091509150611a22828286611a2d565b979650505050505050565b60608315611a3c575081610ca1565b825115611a4c5782518084602001fd5b8160405162461bcd60e51b815260040161025b9190612813565b6040518060400160405280611a79611a8b565b8152602001611a86611ac4565b905290565b604080516060808201835260008083528351918201845280825260208281018290529382015290918201905b8152600060209091015290565b6040805160a081018252908190611ab7908201600381606080368337509192915050565b60008060208385031215611afb57600080fd5b823567ffffffffffffffff80821115611b1357600080fd5b818501915085601f830112611b2757600080fd5b813581811115611b3657600080fd5b86602061012083028501011115611b4c57600080fd5b60209290920196919550909350505050565b60008083601f840112611b7057600080fd5b50813567ffffffffffffffff811115611b8857600080fd5b6020830191508360208260051b8501011115611ba357600080fd5b9250929050565b600080600060408486031215611bbf57600080fd5b833567ffffffffffffffff80821115611bd757600080fd5b611be387838801611b5e565b90955093506020860135915080821115611bfc57600080fd5b50840160808187031215611c0f57600080fd5b809150509250925092565b60008060208385031215611c2d57600080fd5b823567ffffffffffffffff80821115611c4557600080fd5b818501915085601f830112611c5957600080fd5b813581811115611c6857600080fd5b86602060a083028501011115611b4c57600080fd5b600060208284031215611c8f57600080fd5b5035919050565b8015158114611ca457600080fd5b50565b600080600060408486031215611cbc57600080fd5b8335611cc781611c96565b9250602084013567ffffffffffffffff811115611ce357600080fd5b611cef86828701611b5e565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60038110611ca457600080fd5b8035611d5681611d3e565b919050565b600060208284031215611d6d57600080fd5b8135610ca181611d3e565b80356001600160a01b0381168114611d5657600080fd5b600060208284031215611da157600080fd5b610ca182611d78565b80356001600160781b0381168114611d5657600080fd5b600060208284031215611dd357600080fd5b610ca182611daa565b600060208284031215611dee57600080fd5b5051919050565b80820180821115611e1657634e487b7160e01b600052601160045260246000fd5b92915050565b6040805190810167ffffffffffffffff81118282101715611e3f57611e3f611cfc565b60405290565b6040516060810167ffffffffffffffff81118282101715611e3f57611e3f611cfc565b600060808284031215611e7a57600080fd5b611e82611e1c565b905082601f830112611e9357600080fd5b6040516060810181811067ffffffffffffffff82111715611eb657611eb6611cfc565b604052806060840185811115611ecb57600080fd5b845b81811015611ee5578035835260209283019201611ecd565b509183525035602082015292915050565b6000818303610120811215611f0a57600080fd5b611f12611e1c565b60a0821215611f2057600080fd5b611f28611e45565b843581526060601f1984011215611f3e57600080fd5b611f46611e45565b92506020850135611f5681611d3e565b8352611f6460408601611d78565b602084015260608501356040840152826020820152611f8560808601611daa565b60408201528152611f998560a08601611e68565b6020820152949350505050565b60038110611ca457634e487b7160e01b600052602160045260246000fd5b60208082528251828201819052600091906040908185019086840185805b8381101561207857825180518051875288810151805161200181611fa6565b888b0152808a01516001600160a01b03168989015288015160608801528701516001600160781b0316608087015287015180518360a088015b60038210156120595782518152918a0191600191909101908a0161203a565b5050508701516101008601526101209094019391860191600101611fe2565b509298975050505050505050565b6000823561021e1983360301811261209d57600080fd5b9190910192915050565b6000823560de1983360301811261209d57600080fd5b6000808335601e198436030181126120d457600080fd5b830160208101925035905067ffffffffffffffff8111156120f457600080fd5b8060051b3603821315611ba357600080fd5b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561213857600080fd5b8260051b80836020870137939093016020019392505050565b6000823560de1983360301811261216757600080fd5b90910192915050565b61217981611fa6565b9052565b803567ffffffffffffffff81168114611d5657600080fd5b6000808335601e198436030181126121ac57600080fd5b830160208101925035905067ffffffffffffffff8111156121cc57600080fd5b803603821315611ba357600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b81019150846000805b88811015612078578385038a52823560fe1989360301811261223f578283fd5b8801610100608080838937828101359088015260a0808301359088015260c061226a81840184612195565b83838b015261227c848b0182846121db565b935050505060e061228f81840184612195565b9350888303828a01526122a38385836121db565b9d8a019d9850505093870193505060010161221f565b6000813561ffff81168082146122ce57600080fd5b845250602082013568ffffffffffffffffff811681146122ed57600080fd5b68ffffffffffffffffff16602084015261230960408301611d4b565b6123166040850182612170565b506123236060830161217d565b67ffffffffffffffff16606084015261233e60808301611d78565b6001600160a01b0316608084015260a0828101359084015261236360c08301836120bd565b60e060c086015261237860e086018284612204565b95945050505050565b80358252602081013561239381611d3e565b61239c81611fa6565b60208301526001600160a01b036123b560408301611d78565b166040830152606081013560608301526001600160781b036123d960808301611daa565b1660808301525050565b60208082528181018390526000906040808401600586901b850182018785805b8981101561250357888403603f190185528235368c900361021e19018112612429578283fd5b8b0180358552602080820135908601526102208788830189880137608088818401828901375060c0828101359087015260e08083013590870152610100808301359087015261012061247d818401846120bd565b83838a015261248f848a018284612106565b93505050506101406124a3818401846120bd565b888403838a01526124b5848284612106565b93505050506101606124c981840184612151565b878303828901526124da83826122b9565b925050506101806124ef818801828501612381565b509588019594505091860191600101612403565b50919998505050505050505050565b60006020828403121561252457600080fd5b8135610ca181611c96565b6000808335601e1984360301811261254657600080fd5b83018035915067ffffffffffffffff82111561256157600080fd5b6020019150600581901b3603821315611ba357600080fd5b600060808301823560ff19811680821461259257600080fd5b8552506020838101356125a481611c96565b1515858201526040848101358187015260606125c2818701876120bd565b6080838a01528581875260a08a01905060a08260051b8b01019650826000805b84811015612659578c8a03609f19018452823536879003605e19018112612607578283fd5b86016001600160a01b0361261a82611d78565b168b526126298a820182612195565b898c8e015261263b8a8e0182846121db565b928b01359c8b019c909c5250995092880192918801916001016125e2565b50979b9a5050505050505050505050565b6000606082016060835280865180835260808501915060808160051b860101925060208089016000805b848110156126e857888703607f19018652825180518089529085019085890190845b818110156126d2578351835292870192918701916001016126b6565b5090985050509483019491830191600101612694565b5050508501879052505082810360408401526127048185612579565b9695505050505050565b60008235605e1983360301811261209d57600080fd5b6000808335601e1984360301811261273b57600080fd5b83018035915067ffffffffffffffff82111561275657600080fd5b602001915036819003821315611ba357600080fd5b8183823760009101908152919050565b60005b8381101561279657818101518382015260200161277e565b50506000910152565b600081518084526127b781602086016020860161277b565b601f01601f19169290920160200192915050565b8281526040602082015260006118dd604083018461279f565b6000602082840312156127f657600080fd5b8151610ca181611c96565b6000825161209d81846020870161277b565b602081526000610ca1602083018461279f56fea2646970667358221220697a5f1c95c7073842a0d265b0eb0538eea099d30c461302abcb21aecf562bef64736f6c63430008110033";

type RelayAdaptConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayAdaptConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayAdapt__factory extends ContractFactory {
  constructor(...args: RelayAdaptConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _railgun: PromiseOrValue<string>,
    _wBase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayAdapt> {
    return super.deploy(
      _railgun,
      _wBase,
      overrides || {}
    ) as Promise<RelayAdapt>;
  }
  override getDeployTransaction(
    _railgun: PromiseOrValue<string>,
    _wBase: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_railgun, _wBase, overrides || {});
  }
  override attach(address: string): RelayAdapt {
    return super.attach(address) as RelayAdapt;
  }
  override connect(signer: Signer): RelayAdapt__factory {
    return super.connect(signer) as RelayAdapt__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayAdaptInterface {
    return new utils.Interface(_abi) as RelayAdaptInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayAdapt {
    return new Contract(address, _abi, signerOrProvider) as RelayAdapt;
  }
}
