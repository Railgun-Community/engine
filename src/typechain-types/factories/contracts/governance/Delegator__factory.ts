/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Delegator,
  DelegatorInterface,
} from "../../../contracts/governance/Delegator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "GrantPermission",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "RevokePermission",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "callContract",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "checkPermission",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "permissions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "bool",
        name: "_permission",
        type: "bool",
      },
    ],
    name: "setPermission",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c69380380610c6983398101604081905261002f9161017b565b61003833610051565b61004b816100a160201b61065e1760201c565b506101ab565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100a961011f565b6001600160a01b0381166101135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61011c81610051565b50565b6000546001600160a01b031633146101795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161010a565b565b60006020828403121561018d57600080fd5b81516001600160a01b03811681146101a457600080fd5b9392505050565b610aaf806101ba6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e8578063c6b295c114610103578063e64624fa14610124578063f2fde38b1461013757600080fd5b8063715018a6146100825780637aa7d3fd1461008c5780638ad2f289146100d5575b600080fd5b61008a61014a565b005b6100c061009a3660046107db565b600160209081526000938452604080852082529284528284209052825290205460ff1681565b60405190151581526020015b60405180910390f35b6100c06100e33660046107db565b61015e565b6000546040516001600160a01b0390911681526020016100cc565b610116610111366004610826565b610265565b6040516100cc9291906108b1565b61008a61013236600461091e565b6104f9565b61008a61014536600461097a565b61065e565b6101526106ee565b61015c6000610748565b565b600080546001600160a01b03858116911614806101b257506001600160a01b03808516600090815260016020908152604080832093871683529281528282206001600160e01b0319861683529052205460ff165b806101ea57506001600160a01b03808516600090815260016020908152604080832093871683529281528282208280529052205460ff165b8061022a57506001600160a01b038416600090815260016020908152604080832083805282528083206001600160e01b03198616845290915290205460ff165b8061025d57506001600160a01b0384166000908152600160209081526040808320838052825280832090915290205460ff165b949350505050565b6000606081610274858761099e565b90506001600160a01b03871630141561040a576001600160e01b031981167fe64624fa0000000000000000000000000000000000000000000000000000000014156103255760008080806102cb896004818d6109ce565b6040516020016102dc9291906109f8565b6040516020818303038152906040528060200190518101906102fe9190610a08565b9350935093509350610312848484846104f9565b5060019550606094506104f09350505050565b6001600160e01b031981167ff2fde38b0000000000000000000000000000000000000000000000000000000014156103b4576000610366866004818a6109ce565b6040516020016103779291906109f8565b6040516020818303038152906040528060200190518101906103999190610a5c565b90506103a48161065e565b5060019250606091506104f09050565b6001600160e01b031981167f715018a60000000000000000000000000000000000000000000000000000000014156103fc576103ee61014a565b5060019150606090506104f0565b5060009150606090506104f0565b61041533888361015e565b61048c5760405162461bcd60e51b815260206004820152602960248201527f44656c656761746f723a2043616c6c657220646f65736e27742068617665207060448201527f65726d697373696f6e000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b866001600160a01b03168487876040516104a79291906109f8565b60006040518083038185875af1925050503d80600081146104e4576040519150601f19603f3d011682016040523d82523d6000602084013e6104e9565b606091505b5092509250505b94509492505050565b6105016106ee565b6001600160a01b03808516600090815260016020908152604080832093871683529281528282206001600160e01b0319861683529052205460ff16151581151514610658576001600160a01b03848116600090815260016020908152604080832093871683529281528282206001600160e01b031986168352905220805460ff191682158015919091179091556105f757817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916836001600160a01b0316856001600160a01b03167f521b363b3401f4d6404e4bd855a3edf8d254a7f55abb97b6d516b66a6f86205e60405160405180910390a4610658565b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916836001600160a01b0316856001600160a01b03167f91f81f13bab4e6573f47dda4f090782eb2c9173d3d489ca191b5f4f7355cebe860405160405180910390a45b50505050565b6106666106ee565b6001600160a01b0381166106e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610483565b6106eb81610748565b50565b6000546001600160a01b0316331461015c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610483565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146106eb57600080fd5b6001600160e01b0319811681146106eb57600080fd5b6000806000606084860312156107f057600080fd5b83356107fb816107b0565b9250602084013561080b816107b0565b9150604084013561081b816107c5565b809150509250925092565b6000806000806060858703121561083c57600080fd5b8435610847816107b0565b9350602085013567ffffffffffffffff8082111561086457600080fd5b818701915087601f83011261087857600080fd5b81358181111561088757600080fd5b88602082850101111561089957600080fd5b95986020929092019750949560400135945092505050565b821515815260006020604081840152835180604085015260005b818110156108e7578581018301518582016060015282016108cb565b818111156108f9576000606083870101525b50601f01601f191692909201606001949350505050565b80151581146106eb57600080fd5b6000806000806080858703121561093457600080fd5b843561093f816107b0565b9350602085013561094f816107b0565b9250604085013561095f816107c5565b9150606085013561096f81610910565b939692955090935050565b60006020828403121561098c57600080fd5b8135610997816107b0565b9392505050565b6001600160e01b031981358181169160048510156109c65780818660040360031b1b83161692505b505092915050565b600080858511156109de57600080fd5b838611156109eb57600080fd5b5050820193919092039150565b8183823760009101908152919050565b60008060008060808587031215610a1e57600080fd5b8451610a29816107b0565b6020860151909450610a3a816107b0565b6040860151909350610a4b816107c5565b606086015190925061096f81610910565b600060208284031215610a6e57600080fd5b8151610997816107b056fea2646970667358221220b9d04aa0f18cfb0ff088a0177328300dfae3dbbdd10da2c13df5911076384ef464736f6c634300080c0033";

type DelegatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Delegator__factory extends ContractFactory {
  constructor(...args: DelegatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Delegator> {
    return super.deploy(_admin, overrides || {}) as Promise<Delegator>;
  }
  override getDeployTransaction(
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_admin, overrides || {});
  }
  override attach(address: string): Delegator {
    return super.attach(address) as Delegator;
  }
  override connect(signer: Signer): Delegator__factory {
    return super.connect(signer) as Delegator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegatorInterface {
    return new utils.Interface(_abi) as DelegatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Delegator {
    return new Contract(address, _abi, signerOrProvider) as Delegator;
  }
}
